<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>FastJSON on HelloWood</title><link>https://blog.hellowood.dev/tags/fastjson/</link><description>Recent content in FastJSON on HelloWood</description><generator>Hugo</generator><language>cn</language><lastBuildDate>Tue, 10 Apr 2018 18:50:34 +0800</lastBuildDate><atom:link href="https://blog.hellowood.dev/tags/fastjson/index.xml" rel="self" type="application/rss+xml"/><item><title>SpringBoot 使用 FastJSON 自定义接口返回 JSON 格式</title><link>https://blog.hellowood.dev/posts/springboot-%E4%BD%BF%E7%94%A8-fastjson-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A5%E5%8F%A3%E8%BF%94%E5%9B%9E-json-%E6%A0%BC%E5%BC%8F/</link><pubDate>Tue, 10 Apr 2018 18:50:34 +0800</pubDate><guid>https://blog.hellowood.dev/posts/springboot-%E4%BD%BF%E7%94%A8-fastjson-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A5%E5%8F%A3%E8%BF%94%E5%9B%9E-json-%E6%A0%BC%E5%BC%8F/</guid><description>&lt;p>在 SpringBoot 中如果想要自定义接口返回的值格式，可以通过重写 &lt;code>WebMvcConfigurerAdapter&lt;/code> 类的 &lt;code>configureMessageConverters&lt;/code> 方法实现&lt;/p>
&lt;ul>
&lt;li>添加依赖&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>compile(&amp;#39;com.alibaba:fastjson:1.2.46&amp;#39;)
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>MessageConverter.java&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>import com.alibaba.fastjson.serializer.SerializerFeature;
import com.alibaba.fastjson.support.config.FastJsonConfig;
import com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter;
import org.springframework.http.converter.HttpMessageConverter;
import org.springframework.stereotype.Component;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;

import java.util.List;

@Component
public class MessageConverter extends WebMvcConfigurerAdapter {

 private static final String DATE_TIME_PATTEN = &amp;#34;yyyy-MM-dd HH:mm:ss&amp;#34;;

 @Override
 public void configureMessageConverters(List&amp;lt;HttpMessageConverter&amp;lt;?&amp;gt;&amp;gt; converters) {
 FastJsonHttpMessageConverter fastJsonHttpMessageConverter = new FastJsonHttpMessageConverter();

 FastJsonConfig fastJsonConfig = new FastJsonConfig();
 // 设置空值不返回
 fastJsonConfig.setSerializerFeatures(SerializerFeature.PrettyFormat);
 // 设置日期格式
 fastJsonConfig.setDateFormat(DATE_TIME_PATTEN);
 fastJsonHttpMessageConverter.setFastJsonConfig(fastJsonConfig);

 converters.add(fastJsonHttpMessageConverter);
 }
}
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>如果不想让某个列返回可以在属性上添加 &lt;code>@JSONField(serialize = false)&lt;/code>&lt;/li>
&lt;li>如果想让某个属性返回的值为指定的字符串：&lt;code>@JSONField(name = &amp;quot;custom_field_name&amp;quot;)&lt;/code>&lt;/li>
&lt;/ul></description></item></channel></rss>