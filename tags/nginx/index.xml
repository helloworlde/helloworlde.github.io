<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Nginx on HelloWood</title><link>https://blog.hellowood.dev/tags/nginx/</link><description>Recent content in Nginx on HelloWood</description><generator>Hugo</generator><language>cn</language><lastBuildDate>Tue, 10 Apr 2018 11:39:09 +0000</lastBuildDate><atom:link href="https://blog.hellowood.dev/tags/nginx/index.xml" rel="self" type="application/rss+xml"/><item><title>Docker 配置 Nginx 访问宿主机目录下的应用</title><link>https://blog.hellowood.dev/posts/docker-%E9%85%8D%E7%BD%AE-nginx-%E8%AE%BF%E9%97%AE%E5%AE%BF%E4%B8%BB%E6%9C%BA%E7%9B%AE%E5%BD%95%E4%B8%8B%E7%9A%84%E5%BA%94%E7%94%A8/</link><pubDate>Tue, 10 Apr 2018 11:39:09 +0000</pubDate><guid>https://blog.hellowood.dev/posts/docker-%E9%85%8D%E7%BD%AE-nginx-%E8%AE%BF%E9%97%AE%E5%AE%BF%E4%B8%BB%E6%9C%BA%E7%9B%AE%E5%BD%95%E4%B8%8B%E7%9A%84%E5%BA%94%E7%94%A8/</guid><description>&lt;h1 id="docker-配置-nginx-访问宿主机目录下的应用">Docker 配置 Nginx 访问宿主机目录下的应用&lt;/h1>
&lt;blockquote>
&lt;p>使用 Nginx 将请求转发到宿主机的 Tomcat 应用&lt;/p>
&lt;/blockquote>
&lt;h2 id="配置并启动-tomcat">配置并启动 Tomcat&lt;/h2>
&lt;h2 id="安装-docker">安装 Docker&lt;/h2>
&lt;h2 id="配置-nginx">配置 Nginx&lt;/h2>
&lt;ul>
&lt;li>创建配置和日志文件夹&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>mkdir /home/nginx/conf
mkdir /home/nginx/logs
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>查询宿主机 IP&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>docker inspect --format &amp;#39;{{ .NetworkSettings.IPAddress }}&amp;#39; &amp;lt;container-ID&amp;gt; 

# 或
docker inspect &amp;lt;container id&amp;gt; 

# 或
docker inspect -f &amp;#39;{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}&amp;#39; container_name_or_id
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>添加配置文件 &lt;code>nginx.conf&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>将 &lt;code>8084&lt;/code>端口转发到&lt;code>8080&lt;/code>端口，使用 &lt;code>log_format&lt;/code>目的是为了使用阿里云监控切分日志，可以没有&lt;/p>
&lt;pre tabindex="0">&lt;code>log_format proxyformat &amp;#34;$remote_addr $request_time $http_x_readtime [$time_local] \&amp;#34;$request_method http://$host$request_uri\&amp;#34; $status $body_bytes_sent \&amp;#34;$http_referer\&amp;#34; \&amp;#34;$upstream_addr\&amp;#34; \&amp;#34;$http_user_agent\&amp;#34; \&amp;#34;$upstream_response_time\&amp;#34; \&amp;#34;$request_time\&amp;#34;&amp;#34;;


 server {
 listen 80;
 server_name ali.hellowood.com.cn;
 location / {
 proxy_pass http://172.17.0.1:8080;
 proxy_set_header Host $http_host; 
 proxy_set_header X-Real-IP $remote_addr; 
 proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; 
 }
 } 
&lt;/code>&lt;/pre>&lt;blockquote>
&lt;p>需要注意的是，Docker 会默认使用桥接路由，所以其 IP 和宿主机的 IP 位于同一 IP 段，并且默认宿主机的 IP 为第一个，即如果 Docker 的 IP 为 &lt;code>10.1.0.2&lt;/code>, 则可以通过 访问 &lt;code>10.1.0.1&lt;/code> 访问到宿主机&lt;/p></description></item><item><title>Docker 配置Ubuntu 下 Tomcat 和 Nginx 使用 HTTPS 访问</title><link>https://blog.hellowood.dev/posts/docker-%E9%85%8D%E7%BD%AEubuntu-%E4%B8%8B-tomcat-%E5%92%8C-nginx-%E4%BD%BF%E7%94%A8-https-%E8%AE%BF%E9%97%AE/</link><pubDate>Sun, 08 Apr 2018 15:38:01 +0000</pubDate><guid>https://blog.hellowood.dev/posts/docker-%E9%85%8D%E7%BD%AEubuntu-%E4%B8%8B-tomcat-%E5%92%8C-nginx-%E4%BD%BF%E7%94%A8-https-%E8%AE%BF%E9%97%AE/</guid><description>&lt;h1 id="ubuntu-docker-配置-tomcat-和-nginx-使用-https-访问">Ubuntu Docker 配置 Tomcat 和 Nginx 使用 HTTPS 访问&lt;/h1>
&lt;h2 id="安装-docker">安装 Docker&lt;/h2>
&lt;h3 id="使用脚本自动安装">使用脚本自动安装&lt;/h3>
&lt;pre tabindex="0">&lt;code>curl -fsSL get.docker.com -o get-docker.sh
sudo sh get-docker.sh --mirror Aliyun
&lt;/code>&lt;/pre>&lt;h3 id="更改镜像地址">更改镜像地址&lt;/h3>
&lt;ul>
&lt;li>修改或新建 &lt;code>/etc/docker/daemon.json&lt;/code>&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>{
 &amp;#34;registry-mirrors&amp;#34;: [
 &amp;#34;https://registry.docker-cn.com&amp;#34;
 ]
}
&lt;/code>&lt;/pre>&lt;h3 id="启动-docker">启动 Docker&lt;/h3>
&lt;pre tabindex="0">&lt;code>sudo systemctl daemon-reload
sudo systemctl enable docker
sudo systemctl start docker
&lt;/code>&lt;/pre>&lt;h2 id="配置-tomcat">配置 Tomcat&lt;/h2>
&lt;h3 id="启动-tomcat-容器">启动 Tomcat 容器&lt;/h3>
&lt;pre tabindex="0">&lt;code>docker pull tomcat
docker run --name tomcat -d -p 8080:8080 tomcat
&lt;/code>&lt;/pre>&lt;h3 id="修改-tomcat-manager-应用">修改 Tomcat Manager 应用&lt;/h3>
&lt;ul>
&lt;li>修改 &lt;code>webapps/manager/META-INF/content.xml&lt;/code>，允许需要的IP访问，这里运行所有的IP访问&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>&amp;lt;Context antiResourceLocking=&amp;#34;false&amp;#34; privileged=&amp;#34;true&amp;#34; &amp;gt;
 &amp;lt;Valve className=&amp;#34;org.apache.catalina.valves.RemoteAddrValve&amp;#34;
 allow=&amp;#34;^.*$&amp;#34; /&amp;gt;
 &amp;lt;Manager sessionAttributeValueClassNameFilter=&amp;#34;java\.lang\.(?:Boolean|Integer|Long|Number|String)|org\.apache\.catalina\.filters\.CsrfPreventionFilter\$LruCache(?:\$1)?|java\.util\.(?:Linked)?HashMap&amp;#34;/&amp;gt;
&amp;lt;/Context&amp;gt;
&lt;/code>&lt;/pre>&lt;h3 id="配置-tomcat-用户">配置 Tomcat 用户&lt;/h3>
&lt;ul>
&lt;li>修改 &lt;code>conf/tomcat-user.xml&lt;/code>，添加用户&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>&amp;lt;role rolename=&amp;#34;admin-gui&amp;#34;/&amp;gt;
&amp;lt;role rolename=&amp;#34;manager-gui&amp;#34;/&amp;gt;
&amp;lt;user username=&amp;#34;tomcat&amp;#34; password=&amp;#34;tomcat&amp;#34; roles=&amp;#34;manager-gui,admin-gui&amp;#34;/&amp;gt;
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="配置-nginx">配置 Nginx&lt;/h2>
&lt;h3 id="配置目录">配置目录&lt;/h3>
&lt;ul>
&lt;li>新建目录 &lt;code>/home/ubuntu/hellowood/dev/nginx/conf&lt;/code>, &lt;code>/home/ubuntu/hellowood/dev/nginx/log&lt;/code>, &lt;code>/home/ubuntu/hellowood/dev/nginx/certs&lt;/code>&lt;/li>
&lt;li>下载并解压相应的Nginx证书文件到 &lt;code>/home/ubuntu/hellowood/dev/nginx/conf&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="添加-nginx-配置">添加 Nginx 配置&lt;/h3>
&lt;ul>
&lt;li>nginx.conf&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>server {
 listen 80;
 listen 443 ssl;
 server_name hellowood.com.cn;
 ssl_certificate /etc/nginx/certs/hellowood.com.cn_bundle.crt;
 ssl_certificate_key /etc/nginx/certs/hellowood.com.cn.key;
 location / {
 proxy_pass http://tomcat:8080;
 }
}
&lt;/code>&lt;/pre>&lt;p>&lt;code>http://tomcat:8080&lt;/code>: 将所有请求都转发到 &lt;code>tomcat&lt;/code> 容器的 &lt;code>8080&lt;/code>端口(不是映射端口)&lt;/p></description></item><item><title>Ubuntu安装 Nginx</title><link>https://blog.hellowood.dev/posts/ubuntu%E5%AE%89%E8%A3%85-nginx/</link><pubDate>Mon, 01 Jan 2018 12:10:38 +0000</pubDate><guid>https://blog.hellowood.dev/posts/ubuntu%E5%AE%89%E8%A3%85-nginx/</guid><description>&lt;blockquote>
&lt;p>在 Ubuntu 上安装 Nginx&lt;/p>
&lt;/blockquote>
&lt;h1 id="1-通过-ubuntu-的仓库安装">1. 通过 Ubuntu 的仓库安装&lt;/h1>
&lt;h2 id="安装">安装&lt;/h2>
&lt;ul>
&lt;li>安装&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> sudo apt-get install nginx
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>目录结构
&lt;ul>
&lt;li>所有文件都在 &lt;code>/etc/nginx/&lt;/code>目录下&lt;/li>
&lt;li>程序文件在&lt;code>/user/local/nginx/sbin/&lt;/code>目录下&lt;/li>
&lt;li>日志在&lt;code>/var/log/nginx/&lt;/code>目录下&lt;/li>
&lt;li>启动脚本为&lt;code>/etc/init.d/nginx&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="启动">启动&lt;/h2>
&lt;pre tabindex="0">&lt;code> sudo /etc/init.d/nginx start
&lt;/code>&lt;/pre>&lt;hr>
&lt;h1 id="nginx-源代码安装">Nginx 源代码安装&lt;/h1>
&lt;h2 id="安装-1">安装&lt;/h2>
&lt;ul>
&lt;li>下载&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> cd /usr/local 
 //下载源码
 wget http://nginx.org/download/nginx-1.2.8.tar.gz

 // 解压
 tar -zxcf nginx-1.2.8.tar.gz
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>安装依赖&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> sudo apt-get install libpcre3
 sudo apt-get install libpcre3-dev
 sudo apt-get install zlib1g-dev
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>编译安装&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> cd nginx-1.2.8
 // 检查环境
 ./configure
 
 // 编译
 make

 // 安装
 make install
&lt;/code>&lt;/pre>&lt;h2 id="配置">配置&lt;/h2>
&lt;ul>
&lt;li>默认启动&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> cd /usr/local/nginx

 // 启动
 sbin/nginx
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>配置快捷启动方式&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> // 创建启动脚本
 sudo vi /etc/init.d/nginx

 // 增加执行权限
 sudo chmod a+x /etc/init.d/nginx

 // 启动
 sudo /etc/init.d/nginx start
 // 停止
 sudo /etc/init.d/nginx stop
 // 重启
 sudo /etc/init.d/nginx restart
&lt;/code>&lt;/pre></description></item><item><title>Nginx 配置</title><link>https://blog.hellowood.dev/posts/nginx-%E9%85%8D%E7%BD%AE/</link><pubDate>Mon, 01 Jan 2018 12:03:12 +0000</pubDate><guid>https://blog.hellowood.dev/posts/nginx-%E9%85%8D%E7%BD%AE/</guid><description>&lt;h2 id="1-基础配置">1. 基础配置&lt;/h2>
&lt;pre tabindex="0">&lt;code>worker_processes 1;

events {
 worker_connections 1024;
}

http {
 include mime.types;
 default_type application/octet-stream;

 sendfile on;

 keepalive_timeout 65;

 server {
 listen 80;
 server_name project.hellowood.com;

 access_log logs/project.access.log;

 location / {
 proxy_pass http://127.0.0.1:8080;
 proxy_set_header Host $host; 
 proxy_set_header X-Real-IP $remote_addr; 
 proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
 }

 error_page 500 502 503 504 /50x.html;
 location = /50x.html {
 root html;
 }
 }
}
&lt;/code>&lt;/pre>&lt;blockquote>
&lt;p>访问&lt;code>project.hellowood.com&lt;/code> 实际会访问该 IP 下的8080端口&lt;/p>
&lt;/blockquote>
&lt;h2 id="2-不同的-url-访问不同的服务器">2. 不同的 URL 访问不同的服务器&lt;/h2>
&lt;ul>
&lt;li>配置 Server 节点&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> server {
 listen 80;
 server_name project.hellowood.com;

 access_log logs/project.access.log;

 location / {
 proxy_pass http://127.0.0.1:8080;
 proxy_set_header Host $host; 
 proxy_set_header X-Real-IP $remote_addr; 
 proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
 }

 error_page 500 502 503 504 /50x.html;
 location = /50x.html {
 root html;
 }
 }

 server {
 listen 80;
 server_name introduce.hellowood.com;

 access_log logs/introduce.access.log;

 location / {
 proxy_pass http://127.0.0.1:8081;
 proxy_set_header Host $host; 
 proxy_set_header X-Real-IP $remote_addr; 
 proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
 }

 error_page 500 502 503 504 /50x.html;
 location = /50x.html {
 root html;
 }
 }

 server {
 listen 80;
 server_name helloworld.com;

 access_log logs/helloworld.access.log;

 location / {
 proxy_pass http://127.0.0.1:8082;
 proxy_set_header Host $host; 
 proxy_set_header X-Real-IP $remote_addr; 
 proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
 }

 error_page 500 502 503 504 /50x.html;
 location = /50x.html {
 root html;
 }
 }
&lt;/code>&lt;/pre>&lt;blockquote>
&lt;p>访问&lt;code>project.hellowood.com&lt;/code> 实际会访问该 IP 下的8080端口
访问&lt;code>introduce.hellowood.com&lt;/code> 实际会访问该 IP 下的8081端口
访问&lt;code>helloworld.com&lt;/code> 实际会访问该 IP 下的8082端口&lt;/p></description></item></channel></rss>