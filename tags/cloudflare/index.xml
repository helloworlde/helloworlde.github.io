<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cloudflare on HelloWood</title><link>https://blog.hellowood.dev/tags/cloudflare/</link><description>Recent content in Cloudflare on HelloWood</description><generator>Hugo</generator><language>cn</language><lastBuildDate>Wed, 04 Dec 2024 15:48:56 +0800</lastBuildDate><atom:link href="https://blog.hellowood.dev/tags/cloudflare/index.xml" rel="self" type="application/rss+xml"/><item><title>使用 Cloudflare Tunnel 作为反向代理访问内网服务</title><link>https://blog.hellowood.dev/posts/%E4%BD%BF%E7%94%A8-cloudflare-tunnel-%E4%BD%9C%E4%B8%BA%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E8%AE%BF%E9%97%AE%E5%86%85%E7%BD%91%E6%9C%8D%E5%8A%A1/</link><pubDate>Wed, 04 Dec 2024 15:48:56 +0800</pubDate><guid>https://blog.hellowood.dev/posts/%E4%BD%BF%E7%94%A8-cloudflare-tunnel-%E4%BD%9C%E4%B8%BA%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E8%AE%BF%E9%97%AE%E5%86%85%E7%BD%91%E6%9C%8D%E5%8A%A1/</guid><description>&lt;p>Cloudflare Tunnel 是一款隧道软件，可以理解为反向代理；可以快速安全地加密应用程序到任何类型基础设施的流量，如 TCP/HTTP/SSH 等，同时能够隐藏 web 服务器 IP 地址，阻止直接攻击，适用于没有公网 IP，但是又需要从公网访问内网部署的服务；详细可以参考官方文档：&lt;a href="https://www.cloudflare.com/zh-cn/products/tunnel/">Cloudflare Tunnel&lt;/a>&lt;/p>
&lt;p>在 Linux 服务器上安装为例，对外提供 whoami 的 web 程序&lt;/p>
&lt;h2 id="创建-tunnel">创建 Tunnel&lt;/h2>
&lt;p>Tunnel 支持在线和本地两种配置方式；在线维护方式添加、修改比较方便，推荐使用在线的方式进行配置；&lt;/p>
&lt;p>在 Zero Trust =&amp;gt; Network =&amp;gt; Tunnels 中选择创建 Tunnel&lt;/p>
&lt;p>&lt;img src="https://img.hellowood.dev/picture/homelab-cloudflare-tunnel-init-create-tunnel.png" alt="homelab-cloudflare-tunnel-init-create-tunnel.png">&lt;/p>
&lt;p>&lt;img src="https://img.hellowood.dev/picture/homelab-cloudflare-tunnel-init-name-tunnel.png" alt="homelab-cloudflare-tunnel-init-name-tunnel.png">&lt;/p>
&lt;h2 id="安装配置-cloudflare-tunnel">安装配置 Cloudflare Tunnel&lt;/h2>
&lt;p>Tunnel 支持二进制包或者 Docker 容器的方式进行安装；选择相应的平台，会生成安装命令，在命令后执行该命令即可&lt;/p>
&lt;p>&lt;img src="https://img.hellowood.dev/picture/homelab-cloudflare-tunnel-init-install.png" alt="homelab-cloudflare-tunnel-init-install.png">&lt;/p>
&lt;p>如果没有对应的平台，可以在 &lt;a href="https://github.com/cloudflare/cloudflared/releases">GitHub 仓库&lt;/a>下载对应的版本，然后进行安装；以 Ubuntu 22 为例：&lt;/p>
&lt;ul>
&lt;li>下载最新的 Cloudflared&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>安装&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dpkg -i cloudflared-linux-amd64.deb
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>创建 Cloudflared 服务&lt;/li>
&lt;/ul>
&lt;p>这样会创建并自动启动 Cloudflared 服务&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo cloudflared service install &lt;span style="color:#98c379">${&lt;/span>&lt;span style="color:#dcaeea">TOKEN&lt;/span>&lt;span style="color:#98c379">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="配置路由规则">配置路由规则&lt;/h2>
&lt;p>路由规则支持在本地或者 Cloudflare 平台配置两种方式，建议在 Cloudflare 平台配置，更加灵活&lt;/p></description></item><item><title>使用 Cloudflare Worker 和 R2 代理 OSS 图床</title><link>https://blog.hellowood.dev/posts/%E4%BD%BF%E7%94%A8-cloudflare-worker-%E5%92%8C-r2-%E4%BB%A3%E7%90%86-oss-%E5%9B%BE%E5%BA%8A/</link><pubDate>Sat, 23 Dec 2023 19:14:05 +0800</pubDate><guid>https://blog.hellowood.dev/posts/%E4%BD%BF%E7%94%A8-cloudflare-worker-%E5%92%8C-r2-%E4%BB%A3%E7%90%86-oss-%E5%9B%BE%E5%BA%8A/</guid><description>&lt;p>因为笔记可能会在多个平台发布，因此之前使用阿里云的 OSS 作为图片存储，直接将 OSS 的地址暴露到公网进行访问；但是随着流量逐渐增加，每月产生的流量费用也水高船涨，更重要的是 OSS 只支持 Refer 限制，并不能保证安全，在看到有人分享被刷 CDN 产生巨额费用后觉得必须要重视安全问题。&lt;/p>
&lt;p>赛博菩萨 Cloudflare 提供了 R2 作为存储，提供了 5GB 免费的容量，对于个人完全够用了；同时 Worker 支持 CDN 缓存及就近访问，因此使用 Worker 代理 R2 访问完全能满足我的需求&lt;/p>
&lt;p>考虑到有多个平台都是用了 OSS 作为链接，需要逐步迁移；因此，使用 Workers 优先从 R2 读取，如果 R2 没有则从 OSS 获取，并存储到 R2 中&lt;/p>
&lt;h2 id="安装-wrangler">安装 wrangler&lt;/h2>
&lt;p>在本地使用 wrangler 开发 Worker&lt;/p>
&lt;ul>
&lt;li>安装 wrangler&lt;/li>
&lt;/ul>
&lt;p>参考 &lt;a href="https://developers.cloudflare.com/workers/wrangler/install-and-update/">Install/Update Wrangler&lt;/a> 进行安装&lt;/p>
&lt;h2 id="创建-r2">创建 R2&lt;/h2>
&lt;p>在 Cloudflare 管理平台创建 R2，或者通过 wrangler 进行创建，参考 &lt;a href="https://developers.cloudflare.com/r2/buckets/create-buckets/">Create buckets&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>wrangler r2 bucket create picture
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="创建-worker">创建 Worker&lt;/h2>
&lt;ul>
&lt;li>创建项目&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>npm create cloudflare@latest
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>将 R2 绑定到 Worker&lt;/li>
&lt;/ul>
&lt;p>修改 wrangler.toml 配置文件，将 R2 绑定到当前 worker&lt;/p></description></item><item><title>使用 Cloudflare Tunnels 通过 Web SSH 访问服务器</title><link>https://blog.hellowood.dev/posts/%E4%BD%BF%E7%94%A8cloudflare-tunnels%E9%80%9A%E8%BF%87web-ssh%E8%AE%BF%E9%97%AE%E6%9C%8D%E5%8A%A1%E5%99%A8/</link><pubDate>Fri, 06 Oct 2023 15:25:13 +0800</pubDate><guid>https://blog.hellowood.dev/posts/%E4%BD%BF%E7%94%A8cloudflare-tunnels%E9%80%9A%E8%BF%87web-ssh%E8%AE%BF%E9%97%AE%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid><description>&lt;p>Cloudflre 的 Zero Trust 支持通过 Tunnels 访问 SSH 类型的应用，可以通过 Web SSH 的方式访问服务器；支持多种登陆认证方式，安全性远高于直接暴露公网端口&lt;/p>
&lt;h2 id="创建-ssh-应用">创建 SSH 应用&lt;/h2>
&lt;ul>
&lt;li>创建应用&lt;/li>
&lt;/ul>
&lt;p>在 Cloudflare 控制台 &amp;gt; Zero Trust &amp;gt; Access &amp;gt; Applications 选择 Add an application 创建新的应用；应用类型为 Self-hosted&lt;/p>
&lt;p>&lt;img src="https://img.hellowood.dev/picture/homelab-cloudflare-ssh-application-create.png" alt="homelab-cloudflare-ssh-application-create.png">&lt;/p>
&lt;ul>
&lt;li>配置应用信息&lt;/li>
&lt;/ul>
&lt;p>指定应用名称，并为应用配置域名；session 的过期时间可以按需配置&lt;/p>
&lt;p>&lt;img src="https://img.hellowood.dev/picture/homelab-cloudflare-ssh-configuration-application.png" alt="homelab-cloudflare-ssh-configuration-application.png">&lt;/p>
&lt;ul>
&lt;li>指定访问策略&lt;/li>
&lt;/ul>
&lt;p>需要配置访问策略，只允许特定的邮箱登陆；如果需要使用其他的认证方式，如 GitHub/Google SSO 等，可以在 Cloudflare 控制台 &amp;gt; Zero Trust &amp;gt; Settings &amp;gt; Authentication &amp;gt; Login Methods 中添加&lt;/p>
&lt;p>&lt;img src="https://img.hellowood.dev/picture/homelab-cloudflare-ssh-configuration-policy.png" alt="homelab-cloudflare-ssh-configuration-policy.png">&lt;/p>
&lt;ul>
&lt;li>修改应用类型&lt;/li>
&lt;/ul>
&lt;p>在 Additional settings 中，将 Browser rendering 的类型改为 SSH；然后选择保存，这样就配置好 SSH 应用了&lt;/p>
&lt;p>&lt;img src="https://img.hellowood.dev/picture/homelab-cloudflare-ssh-set-application-type.png" alt="homelab-cloudflare-ssh-set-application-type.png">&lt;/p>
&lt;h2 id="配置-tunnels">配置 Tunnels&lt;/h2>
&lt;p>关于 Tunnels 配置安装请参考 &lt;a href="https://blog.hellowood.dev/posts/%E4%BD%BF%E7%94%A8-cloudflare-tunnel-%E4%BD%9C%E4%B8%BA%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E8%AE%BF%E9%97%AE%E5%86%85%E7%BD%91%E6%9C%8D%E5%8A%A1/">使用Cloudflare-Tunnels提供服务公网访问&lt;/a>&lt;/p></description></item></channel></rss>