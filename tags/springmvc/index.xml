<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SpringMVC on HelloWood</title><link>https://blog.hellowood.dev/tags/springmvc/</link><description>Recent content in SpringMVC on HelloWood</description><generator>Hugo</generator><language>cn</language><lastBuildDate>Mon, 01 Jan 2018 00:56:03 +0000</lastBuildDate><atom:link href="https://blog.hellowood.dev/tags/springmvc/index.xml" rel="self" type="application/rss+xml"/><item><title>SpringMVC应用启动时执行操作</title><link>https://blog.hellowood.dev/posts/springmvc%E5%BA%94%E7%94%A8%E5%90%AF%E5%8A%A8%E6%97%B6%E6%89%A7%E8%A1%8C%E6%93%8D%E4%BD%9C/</link><pubDate>Mon, 01 Jan 2018 00:56:03 +0000</pubDate><guid>https://blog.hellowood.dev/posts/springmvc%E5%BA%94%E7%94%A8%E5%90%AF%E5%8A%A8%E6%97%B6%E6%89%A7%E8%A1%8C%E6%93%8D%E4%BD%9C/</guid><description>&lt;ul>
&lt;li>
&lt;p>ContextRefreshedEvent：当ApplicationContext初始化或者刷新时触发该事件。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ContextClosedEvent：当ApplicationContext被关闭时触发该事件。容器被关闭时，其管理的所有单例Bean都被销毁。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>RequestHandleEvent：在Web应用中，当一个http请求（request）结束触发该事件。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ContestStartedEvent：Spring2.5新增的事件，当容器调用ConfigurableApplicationContext的Start()方法开始/重新开始容器时触发该事件。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ContestStopedEvent：Spring2.5新增的事件，当容器调用ConfigurableApplicationContext的Stop()方法停止容器时触发该事件。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>@Component
public class ApplicationListenerImpl implements ApplicationListener&amp;lt;ContextRefreshedEvent&amp;gt; {

 private static final Logger logger = LoggerFactory.getLogger(ApplicationListenerImpl.class);

 @Override
 public void onApplicationEvent(ContextRefreshedEvent contextRefreshedEvent) {
 /**
 * 系统两种容器：root application context 和项目名-servlet context ；
 * 下面代码防止执行两次
 */
 if(event.getApplicationContext().getParent() == null){

 }
 }
}
&lt;/code>&lt;/pre></description></item></channel></rss>