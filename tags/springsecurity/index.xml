<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SpringSecurity on HelloWood</title><link>https://blog.hellowood.dev/tags/springsecurity/</link><description>Recent content in SpringSecurity on HelloWood</description><generator>Hugo</generator><language>cn</language><lastBuildDate>Mon, 16 Sep 2024 03:53:10 +0000</lastBuildDate><atom:link href="https://blog.hellowood.dev/tags/springsecurity/index.xml" rel="self" type="application/rss+xml"/><item><title>SpringBoot 中 Spring Security 403 自定义返回消息</title><link>https://blog.hellowood.dev/posts/springboot-%E4%B8%AD-spring-security-403-%E8%87%AA%E5%AE%9A%E4%B9%89%E8%BF%94%E5%9B%9E%E6%B6%88%E6%81%AF/</link><pubDate>Mon, 24 Dec 2018 21:15:25 +0000</pubDate><guid>https://blog.hellowood.dev/posts/springboot-%E4%B8%AD-spring-security-403-%E8%87%AA%E5%AE%9A%E4%B9%89%E8%BF%94%E5%9B%9E%E6%B6%88%E6%81%AF/</guid><description>&lt;ul>
&lt;li>自定义处理类 CustomAccessDeniedHandler&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>import com.fasterxml.jackson.databind.ObjectMapper;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.security.access.AccessDeniedException;
import org.springframework.security.web.access.AccessDeniedHandler;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;

public class CustomAccessDeniedHandler implements AccessDeniedHandler {

 @Override
 public void handle(HttpServletRequest request, HttpServletResponse response, AccessDeniedException accessDeniedException) throws IOException, ServletException {
 response.setContentType(MediaType.APPLICATION_JSON_UTF8_VALUE);
 response.setStatus(HttpStatus.FORBIDDEN.value());
 response.getWriter().write(new ObjectMapper().writeValueAsString(new CustomResponse(&amp;#34;Session Invalid&amp;#34;, null)));
 }

 static class CustomResponse {
 private String message;
 private Object data;

 CustomResponse(String message, Object data) {
 this.message = message;
 this.data = data;
 }

 public String getMessage() {
 return message;
 }

 public void setMessage(String message) {
 this.message = message;
 }

 public Object getData() {
 return data;
 }

 public void setData(Object data) {
 this.data = data;
 }
 }
}
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>在Spring Security 配置中添加配置&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>
import org.springframework.context.annotation.Bean;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;
import org.springframework.security.web.access.AccessDeniedHandler;

@EnableWebSecurity
public class SecurityConfig extends WebSecurityConfigurerAdapter {

 @Override
 protected void configure(HttpSecurity http) throws Exception {
 http.authorizeRequests()
 .antMatchers(&amp;#34;/&amp;#34;,
 &amp;#34;/index.html&amp;#34;,
 &amp;#34;/**/favicon.ico&amp;#34;,
 &amp;#34;/login&amp;#34;,
 &amp;#34;/logout&amp;#34;,
 &amp;#34;/index&amp;#34;,
 &amp;#34;/error&amp;#34;)
 .permitAll();

 http.authorizeRequests()
 .anyRequest()
 .authenticated()
 .and()
 .exceptionHandling().accessDeniedHandler(accessDeniedHandler());
 }

 @Bean
 public AccessDeniedHandler accessDeniedHandler() {
 return new CustomAccessDeniedHandler();
 }
}
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>返回值&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>{&amp;#34;message&amp;#34;:&amp;#34;Session Invalid&amp;#34;,&amp;#34;data&amp;#34;:null}
&lt;/code>&lt;/pre></description></item></channel></rss>