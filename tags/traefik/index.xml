<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Traefik on HelloWood</title><link>https://blog.hellowood.dev/tags/traefik/</link><description>Recent content in Traefik on HelloWood</description><generator>Hugo</generator><language>cn</language><lastBuildDate>Mon, 16 Sep 2024 03:41:36 +0000</lastBuildDate><atom:link href="https://blog.hellowood.dev/tags/traefik/index.xml" rel="self" type="application/rss+xml"/><item><title>Traefik 使用 Google GitHub OAuth 进行鉴权登陆</title><link>https://blog.hellowood.dev/posts/traefik-%E4%BD%BF%E7%94%A8-google-github-oauth-%E8%BF%9B%E8%A1%8C%E9%89%B4%E6%9D%83%E7%99%BB%E9%99%86/</link><pubDate>Wed, 15 Feb 2023 21:42:38 +0800</pubDate><guid>https://blog.hellowood.dev/posts/traefik-%E4%BD%BF%E7%94%A8-google-github-oauth-%E8%BF%9B%E8%A1%8C%E9%89%B4%E6%9D%83%E7%99%BB%E9%99%86/</guid><description>&lt;p>在使用 Traefik 作为 Homelab 的网关时，考虑到部分服务涉及隐私，因此需要限制用户登陆后才能使用；&lt;/p>
&lt;p>Traefik 支持使用 HTTP 中间件，可以将鉴权信息转发给其他服务进行鉴权，因此，使用 &lt;a href="https://github.com/thomseddon/traefik-forward-auth">https://github.com/thomseddon/traefik-forward-auth&lt;/a> 作为鉴权的服务，该服务默认使用 Google OAuth，因此，可以通过 Google 账号登陆访问内部服务；该服务也支持任何 OAuth 标准的认证服务，如 GitHub，微软等&lt;/p>
&lt;h2 id="申请-oauth-应用">申请 OAuth 应用&lt;/h2>
&lt;p>在 &lt;a href="https://console.cloud.google.com/apis/credentials">Google Cloud&lt;/a> 创建新的应用，选择 &amp;ldquo;APIs and Services&amp;rdquo; -&amp;gt; &amp;ldquo;Credentials&amp;rdquo;，选择 &amp;ldquo;CREATE CREDENTIALS&amp;rdquo; -&amp;gt; &amp;ldquo;OAuth Client ID&amp;rdquo;，应用类型选择 &amp;ldquo;Web Application&amp;rdquo;，填写名称，重定向 URL 为要访问的 URL + 认证路径，traefik-forward-auth 的认证路径为 &lt;code>/_oauth&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://img.hellowood.dev/picture/homelab-traefik-sso-google-oauth-apply-oauth-app.png" alt="homelab-traefik-sso-google-oauth-apply-oauth-app.png">&lt;/p>
&lt;p>确认后会提示 Client ID 和 Client Secret，需要保存好，作为 traefik-forward-auth 配置&lt;/p>
&lt;h2 id="为特定的服务添加认证">为特定的服务添加认证&lt;/h2>
&lt;p>认证特定的服务，需要启动 traefik-forward-auth 服务，然后为要认证的服务添加中间件即可；如这里给 whoami 服务添加了名为 &lt;code>traefik-forward-auth&lt;/code> 的 HTTP 中间件&lt;/p>
&lt;p>这里通过将域名指向本地的方式进行测试，如在 &lt;code>/etc/hosts&lt;/code> 中添加 &lt;code>whoami.homelab.io&lt;/code>相关的域名作为 whoami 服务的域名：&lt;/p>
&lt;ul>
&lt;li>&lt;code>/etc/hosts&lt;/code>&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>127.0.0.1 whoami.homelab.io
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>docker-compose.yaml&lt;/li>
&lt;/ul>
&lt;p>需要将 &lt;code>GOOGLE_CLIENT_ID&lt;/code> 和 &lt;code>GOOGLE_CLIENT_SECRET&lt;/code> 替换为自己申请的&lt;/p></description></item><item><title>Traefik 使用 Let’s Encrypt 申请 HTTPS 证书</title><link>https://blog.hellowood.dev/posts/traefik-%E4%BD%BF%E7%94%A8-lets-encrypt-%E7%94%B3%E8%AF%B7-https-%E8%AF%81%E4%B9%A6/</link><pubDate>Sun, 07 Aug 2022 11:32:08 +0000</pubDate><guid>https://blog.hellowood.dev/posts/traefik-%E4%BD%BF%E7%94%A8-lets-encrypt-%E7%94%B3%E8%AF%B7-https-%E8%AF%81%E4%B9%A6/</guid><description>&lt;p>在 Traefik 中，支持通过 Let&amp;rsquo;s Encrypt 从 ACME &lt;a href="https://doc.traefik.io/traefik/https/acme/">自动申请 HTTPS 证书&lt;/a>&lt;/p>
&lt;h2 id="从-acme-申请证书">从 ACME 申请证书&lt;/h2>
&lt;p>Traefik 申请证书基于 &lt;a href="https://github.com/go-acme/lego">Lego&lt;/a> ，所以同样支持基于 TLS、HTTP、DNS 三种申请方式&lt;/p>
&lt;p>因为要申请的域名没有部署服务，所以基于 DNS 的方式验证；在申请证书时会向域名解析中添加 &lt;code>_acme-challenge&lt;/code>前缀的 TXT 记录用于验证&lt;/p>
&lt;h3 id="添加配置">添加配置&lt;/h3>
&lt;ul>
&lt;li>traefik.yaml&lt;/li>
&lt;/ul>
&lt;p>需要向 Traefik 的配置文件中添加 &lt;code>certificatesResolvers&lt;/code> 的配置&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">certificatesResolvers&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">default&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">acme&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">email&lt;/span>: &lt;span style="color:#98c379">yourname@mail.com&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">storage&lt;/span>: &lt;span style="color:#98c379">/etc/traefik/certificates/acme.json&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">dnsChallenge&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">provider&lt;/span>: &lt;span style="color:#98c379">alidns&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>其中 &lt;code>email&lt;/code>为注册 ACME 的邮箱，&lt;code>storage&lt;/code> 是存储生成的证书内容的文件；&lt;code>dnsChallenge&lt;/code> 指定了以 DNS 的方式验证；&lt;code>provider&lt;/code> 指定域名解析平台，常见的平台参考 &lt;a href="https://doc.traefik.io/traefik/https/acme/#providers">providers&lt;/a>&lt;/p>
&lt;ul>
&lt;li>docker-compose.yaml&lt;/li>
&lt;/ul>
&lt;p>因为使用的是 DNS Provider 是阿里云，所以需要将阿里云的鉴权方式通过环境变量的方式添加到容器中&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">version&lt;/span>: &lt;span style="color:#63c381">&amp;#34;3&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">services&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">reverse-proxy&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">container_name&lt;/span>: &lt;span style="color:#98c379">reverse-proxy&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">image&lt;/span>: &lt;span style="color:#98c379">traefik:2.8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">command&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#63c381">&amp;#34;--configFile=/etc/traefik/traefik.yml&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">ports&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#63c381">&amp;#34;80:80&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#63c381">&amp;#34;443:443&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#63c381">&amp;#34;8080:8080&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">volumes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#63c381">&amp;#34;/var/run/docker.sock:/var/run/docker.sock:ro&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#63c381">&amp;#34;/root/workspaces/homelab/traefik/traefik.yml:/etc/traefik/traefik.yml&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">environment&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#98c379">ALICLOUD_ACCESS_KEY=${ALICLOUD_ACCESS_KEY}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#98c379">ALICLOUD_SECRET_KEY=${ALICLOUD_SECRET_KEY}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>为服务指定域名&lt;/li>
&lt;/ul>
&lt;p>在服务路由规则中指定域名，这样 Traefik 就会为这个域名自动申请证书；需要开启 TLS 并且指定 &lt;code>certresolver&lt;/code>，名称即为配置文件 &lt;code>certificatesResolvers&lt;/code>中定义的名称，即 &lt;code>defualt&lt;/code>&lt;/p></description></item><item><title>使用 Let’s Encrypt 申请 HTTPS 证书</title><link>https://blog.hellowood.dev/posts/%E4%BD%BF%E7%94%A8-lets-encrypt-%E7%94%B3%E8%AF%B7-https-%E8%AF%81%E4%B9%A6/</link><pubDate>Wed, 03 Aug 2022 11:32:08 +0000</pubDate><guid>https://blog.hellowood.dev/posts/%E4%BD%BF%E7%94%A8-lets-encrypt-%E7%94%B3%E8%AF%B7-https-%E8%AF%81%E4%B9%A6/</guid><description>&lt;p>在搭建私有服务器的过程中，需要通过外网访问，因为 .dev 域名要求使用 https，但是域名服务商只提供根域名的证书，为了使子域名也可以使用，所以通过 Let’s Encrypt 申请免费证书&lt;/p>
&lt;p>Let’s Encrypt 是一家免费、开放、自动化的证书颁发机构（CA），旨在尽可能对用户友好的方式免费提供为网站启用 HTTPS（SSL/TLS）所需的数字证书&lt;/p>
&lt;p>因为将域名解析迁移到腾讯云的 DNSPod 下面，所以以 DNSPod 为例，以 DNS 验证的方式，在本地机器上使用命令行申请证书&lt;/p>
&lt;h2 id="安装-lego">安装 Lego&lt;/h2>
&lt;p>Let’s Encrypt 有多种命令行客户端，可以使用官方提到的 &lt;a href="https://certbot.eff.org/">Certbot&lt;/a>；也可以使用 &lt;a href="https://go-acme.github.io/lego/">Lego&lt;/a>，相比 Certbot 支持的域名解析平台更多&lt;/p>
&lt;ul>
&lt;li>安装&lt;/li>
&lt;/ul>
&lt;p>直接使用 Go 命令进行安装，因为本地的 Go 版本是 1.19，所以需要指定版本号使用&lt;code>install&lt;/code>命令安装；如果是低版本的 Go，可以使用 &lt;code>get&lt;/code>的方式安装&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>go install github.com/go-acme/lego/v4/cmd/lego@latest
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">#低版本 Go 使用 get 方式安装&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>go get -u github.com/go-acme/lego/v4/cmd/lego
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="申请证书">申请证书&lt;/h2>
&lt;h3 id="1-创建-dnspod-token">1. 创建 DNSPod Token&lt;/h3>
&lt;p>通过 DNS 的方式申请，Let’s Encrypt 需要向域名添加 DNS 解析以证明拥有该域名；所以需要域名解析平台的授权，通常是以 Token 或者 AK/SK 的方式进行验证&lt;/p>
&lt;p>在 DNSPod 需要先申请 DNSPod Token，登录控制台后在右上角，我的账号中选择 API 密钥，然后选择 DNSPod Token 进行创建密钥&lt;/p></description></item><item><title>Kubenetes 中使用 Traefik 作为 Ingress 转发流量</title><link>https://blog.hellowood.dev/posts/kubenetes-%E4%B8%AD%E4%BD%BF%E7%94%A8-traefik-%E4%BD%9C%E4%B8%BA-ingress-%E8%BD%AC%E5%8F%91%E6%B5%81%E9%87%8F/</link><pubDate>Sun, 08 Sep 2019 19:06:11 +0000</pubDate><guid>https://blog.hellowood.dev/posts/kubenetes-%E4%B8%AD%E4%BD%BF%E7%94%A8-traefik-%E4%BD%9C%E4%B8%BA-ingress-%E8%BD%AC%E5%8F%91%E6%B5%81%E9%87%8F/</guid><description>&lt;p>Ingress 就是 Kubernetes 机器外访问集群的入口，将请求的 URL 转发到不同的 Service 上，相当于 Nginx 等代理服务器
路由信息由 Ingress Controller 提供，Ingress Controller 可以理解为监视器，不断请求 Kubernetes API 实时感知 Service 和 Pod 的状态，结合上下文的 Ingress 生成配置，然后更新反向代理服务器的配置，达到服务发现的作用&lt;/p>
&lt;p>Traefik 是一个开源的反向代理与负载均衡工具，能够与常见的微服务系统直接整合，可以实现自动化动态配置&lt;/p>
&lt;h2 id="通过配置文件部署-traefik">通过配置文件部署 Traefik&lt;/h2>
&lt;h3 id="配置">配置&lt;/h3>
&lt;ul>
&lt;li>Ingress-rbac.yaml&lt;/li>
&lt;/ul>
&lt;p>用于 Service Account 验证&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">apiVersion&lt;/span>: &lt;span style="color:#98c379">v1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">kind&lt;/span>: &lt;span style="color:#98c379">ServiceAccount&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">metadata&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">name&lt;/span>: &lt;span style="color:#98c379">ingress&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">namespace&lt;/span>: &lt;span style="color:#98c379">kube-system&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">---&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">kind&lt;/span>: &lt;span style="color:#98c379">ClusterRoleBinding&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">apiVersion&lt;/span>: &lt;span style="color:#98c379">rbac.authorization.k8s.io/v1beta1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">metadata&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">name&lt;/span>: &lt;span style="color:#98c379">ingress&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">subjects&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e06c75">kind&lt;/span>: &lt;span style="color:#98c379">ServiceAccount&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">name&lt;/span>: &lt;span style="color:#98c379">ingress&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">namespace&lt;/span>: &lt;span style="color:#98c379">kube-system&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">roleRef&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">kind&lt;/span>: &lt;span style="color:#98c379">ClusterRole&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">name&lt;/span>: &lt;span style="color:#98c379">cluster-admin&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">apiGroup&lt;/span>: &lt;span style="color:#98c379">rbac.authorization.k8s.io&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>traefik-daemon-set.yaml&lt;/li>
&lt;/ul>
&lt;p>使用 DaemonSet 部署 Traefik&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">apiVersion&lt;/span>: &lt;span style="color:#98c379">extensions/v1beta1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">kind&lt;/span>: &lt;span style="color:#98c379">DaemonSet&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">metadata&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">name&lt;/span>: &lt;span style="color:#98c379">traefik-ingress-lb&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">namespace&lt;/span>: &lt;span style="color:#98c379">kube-system&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">labels&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">k8s-app&lt;/span>: &lt;span style="color:#98c379">traefik-ingress-lb&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">spec&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">template&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">metadata&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">labels&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">k8s-app&lt;/span>: &lt;span style="color:#98c379">traefik-ingress-lb&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">name&lt;/span>: &lt;span style="color:#98c379">traefik-ingress-lb&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">spec&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">terminationGracePeriodSeconds&lt;/span>: &lt;span style="color:#d19a66">60&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">hostNetwork&lt;/span>: &lt;span style="color:#b756ff;font-weight:bold">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">restartPolicy&lt;/span>: &lt;span style="color:#98c379">Always&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">serviceAccountName&lt;/span>: &lt;span style="color:#98c379">ingress&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">containers&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e06c75">image&lt;/span>: &lt;span style="color:#98c379">traefik&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">name&lt;/span>: &lt;span style="color:#98c379">traefik-ingress-lb&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">resources&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">limits&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">cpu&lt;/span>: &lt;span style="color:#98c379">200m&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">memory&lt;/span>: &lt;span style="color:#98c379">30Mi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">requests&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">cpu&lt;/span>: &lt;span style="color:#98c379">100m&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">memory&lt;/span>: &lt;span style="color:#98c379">20Mi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">ports&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e06c75">name&lt;/span>: &lt;span style="color:#98c379">http&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">containerPort&lt;/span>: &lt;span style="color:#d19a66">80&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">hostPort&lt;/span>: &lt;span style="color:#d19a66">80&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e06c75">name&lt;/span>: &lt;span style="color:#98c379">admin&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">containerPort&lt;/span>: &lt;span style="color:#d19a66">8580&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">hostPort&lt;/span>: &lt;span style="color:#d19a66">8580&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">args&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - --&lt;span style="color:#98c379">web&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - --&lt;span style="color:#98c379">web.address=:8580&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - --&lt;span style="color:#98c379">kubernetes&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>traefik-ui.yaml&lt;/li>
&lt;/ul>
&lt;p>创建 Traefik 的 UI&lt;/p></description></item></channel></rss>