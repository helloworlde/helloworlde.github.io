<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Coral on HelloWood</title><link>https://blog.hellowood.dev/tags/coral/</link><description>Recent content in Coral on HelloWood</description><generator>Hugo</generator><language>cn</language><lastBuildDate>Mon, 16 Sep 2024 03:53:10 +0000</lastBuildDate><atom:link href="https://blog.hellowood.dev/tags/coral/index.xml" rel="self" type="application/rss+xml"/><item><title>Ubuntu 22 运行 Google Coral TPU 示例</title><link>https://blog.hellowood.dev/posts/ubuntu-22-%E8%BF%90%E8%A1%8C-google-coral-tpu-%E7%A4%BA%E4%BE%8B/</link><pubDate>Tue, 09 Jul 2024 09:30:21 +0800</pubDate><guid>https://blog.hellowood.dev/posts/ubuntu-22-%E8%BF%90%E8%A1%8C-google-coral-tpu-%E7%A4%BA%E4%BE%8B/</guid><description>&lt;p>在 Ubuntu 22 上运行 Google Coral TPU 的示例项目&lt;/p>
&lt;h2 id="配置运行环境">配置运行环境&lt;/h2>
&lt;p>Coral 只支持 Python 3.6～3.9 的环境，而 Ubuntu 22 的 Python 版本为 3.10；因此需要使用 Anaconda 创建独立的运行环境&lt;/p>
&lt;h3 id="安装-anaconda">安装 Anaconda&lt;/h3>
&lt;p>参考 &lt;a href="https://docs.anaconda.com/anaconda/install/linux/">Installing on Linux&lt;/a> 安装&lt;/p>
&lt;h3 id="初始化环境">初始化环境&lt;/h3>
&lt;p>使用 Python 3.8 版本创建运行环境&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>conda create -n coral &lt;span style="color:#dcaeea">python&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>3.8
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>待创建完成后激活该环境&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>conda activate coral
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="运行-demo">运行 Demo&lt;/h2>
&lt;h3 id="下载项目">下载项目&lt;/h3>
&lt;ul>
&lt;li>创建 Coral 的工作目录，并克隆项目到本地&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>mkdir coral &lt;span style="color:#c7bf54">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#ef8383">cd&lt;/span> coral
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git clone https://github.com/google-coral/pycoral.git
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="下载依赖">下载依赖&lt;/h3>
&lt;h4 id="下载模型图片依赖">下载模型、图片依赖&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ef8383">cd&lt;/span> pycoral
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bash examples/install_requirements.sh classify_image.py
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="安装项目依赖">安装项目依赖&lt;/h4>
&lt;p>需要安装 pycoral 和 tflite-runtime，但是在 Ubuntu 22 上无法通过 &lt;code>sudo apt-get install python3-pycoral&lt;/code> 直接安装 &lt;code>python3-pycoral&lt;/code>，因此需要指定依赖地址安装；相关版本可以从 &lt;a href="https://github.com/google-coral/pycoral/releases/">https://github.com/google-coral/pycoral/releases/&lt;/a> 查找&lt;/p></description></item><item><title>Ubuntu 22 安装 Google Coral TPU NVME 驱动</title><link>https://blog.hellowood.dev/posts/ubuntu-22-%E5%AE%89%E8%A3%85-google-coral-tpu-nvme-%E9%A9%B1%E5%8A%A8/</link><pubDate>Mon, 08 Jul 2024 09:07:20 +0800</pubDate><guid>https://blog.hellowood.dev/posts/ubuntu-22-%E5%AE%89%E8%A3%85-google-coral-tpu-nvme-%E9%A9%B1%E5%8A%A8/</guid><description>&lt;p>最近折腾图像识别和视频对象检测，因为需要长期低功耗运行，所以购入了 Google Coral TPU&lt;/p>
&lt;p>Google Coral TPU 是一款专为边缘应用设计的机器学习加速器，由 Google 设计和开发，它基于 TensorFlow Lite 模型，能够在低功耗的情况下提供快速的神经网络性能，适用于边缘设备，用于目标检测和图像分类(如开源 NVR Frigate)；可以使用 Yolo、MobikeNet 等模型&lt;/p>
&lt;p>单个 Coral TPU 芯片有 4T OPS 的算力，每秒可以识别大概 100 帧的视频内容，非常适合低功耗、本地场景，可以有效保护隐私；虽然 Coral 从 2021年开始不再更新，但是在边缘场景下依然是非常合适的选择&lt;/p>
&lt;p>Coral TPU 有多种型号，如开发板、USB 配件、M2、Mini PCIE等，这里使用的是 M.2 Accelerator B+M key 的版本。关于 Coral 不同类型的设备更多信息参考 &lt;a href="https://coral.ai/products/">Products&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://lh3.googleusercontent.com/-R0H37d9aKorHo_VYWf8hCfukvbZolBaW2SHW1uDDn1G411r3MqemjxPZa9f44q8OwlfYIkGxSoj-GQbZGd2j7lxtyzSklIQVUWvo9r88mn8CzB-rcw=w2000-rw" alt="">&lt;/p>
&lt;h2 id="要求">要求&lt;/h2>
&lt;ul>
&lt;li>系统：Linux、Windows&lt;/li>
&lt;li>环境：python3.6-3.9&lt;/li>
&lt;/ul>
&lt;h2 id="安装">安装&lt;/h2>
&lt;h3 id="安装-coral-tpu">安装 Coral TPU&lt;/h3>
&lt;ul>
&lt;li>安装 Coral TPU&lt;/li>
&lt;/ul>
&lt;p>将 Coral TPU 安装到 M.2 插槽&lt;/p>
&lt;ul>
&lt;li>检查连接&lt;/li>
&lt;/ul>
&lt;p>等待启动后，检查 NVME 连接&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>lspci -nn | grep 089a
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>已经正确识别到了 Coral TPU&lt;/p></description></item></channel></rss>