<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>LXC on HelloWood</title><link>https://blog.hellowood.dev/categories/lxc/</link><description>Recent content in LXC on HelloWood</description><generator>Hugo</generator><language>cn</language><lastBuildDate>Sun, 07 Jan 2024 12:00:10 +0800</lastBuildDate><atom:link href="https://blog.hellowood.dev/categories/lxc/index.xml" rel="self" type="application/rss+xml"/><item><title>Proxmox VE 创建自定义的 LXC 容器 CT 模板</title><link>https://blog.hellowood.dev/posts/proxmox-ve-%E5%88%9B%E5%BB%BA%E8%87%AA%E5%AE%9A%E4%B9%89%E7%9A%84-lxc-%E5%AE%B9%E5%99%A8-ct-%E6%A8%A1%E6%9D%BF/</link><pubDate>Sun, 07 Jan 2024 12:00:10 +0800</pubDate><guid>https://blog.hellowood.dev/posts/proxmox-ve-%E5%88%9B%E5%BB%BA%E8%87%AA%E5%AE%9A%E4%B9%89%E7%9A%84-lxc-%E5%AE%B9%E5%99%A8-ct-%E6%A8%A1%E6%9D%BF/</guid><description>&lt;p>LXC 是一种操作系统级别的虚拟化容器技术，可以理解为比 VM 更轻量的容器虚拟机；Docker 适用于为服务提供隔离环境，LXC 容器适用于作为虚拟机进行隔离；在 PVE 上 LXC 称为 CT&lt;/p>
&lt;p>在使用 PVE 的过程中会创建多个容器，容器的基础配置基本相同，通过模板的方式创建更方便；虽然 LXC 容器提供了类似 Dockerfile 的配置文件可以创建镜像，但是使用起来比较复杂，学习成本较高；因此可以基于 LXC 容器进行初始化，然后将修改后的 LXC 容器作为基础创建模板&lt;/p>
&lt;h2 id="创建-lxc-容器">创建 LXC 容器&lt;/h2>
&lt;p>以 Ubuntu 容器为例进行模板的创建，在 PVE 控制页面创建一个 LXC 容器并启动&lt;/p>
&lt;p>&lt;img src="https://img.hellowood.dev/picture/homelab-pve-ct-template-create-ct-by-origin-template.png" alt="homelab-pve-ct-template-create-ct-by-origin-template.png">&lt;/p>
&lt;h2 id="初始化-lxc-容器配置">初始化 LXC 容器配置&lt;/h2>
&lt;p>登录到创建的 LXC 容器中，根据需求安装需要用到的软件和配置进行初始化，可以参考 &lt;a href="https://blog.hellowood.dev/posts/ubuntu-22-%E7%8E%AF%E5%A2%83%E5%88%9D%E5%A7%8B%E5%8C%96">ubuntu-22-环境初始化&lt;/a>&lt;/p>
&lt;h2 id="创建-ct-模板">创建 CT 模板&lt;/h2>
&lt;h3 id="清理容器">清理容器&lt;/h3>
&lt;p>清理容器的目的是删除可能变化配置和不需要的文件及配置&lt;/p>
&lt;ul>
&lt;li>清除无效软件&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apt autoremove
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>清除 DNS 和主机名配置&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>rm /etc/resolv.conf
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rm /etc/hostname
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>清除操作命令&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ef8383">history&lt;/span> -c
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="备份-lxc-容器">备份 LXC 容器&lt;/h3>
&lt;p>清理完成后，回到 PVE 的控制页面，选择刚才创建的 CT 容器进行备份&lt;/p>
&lt;p>&lt;img src="https://img.hellowood.dev/picture/homelab-pve-ct-template-backup-ct-as-template.png" alt="homelab-pve-ct-template-backup-ct-as-template.png">&lt;/p>
&lt;h3 id="将备份作为-ct-模板">将备份作为 CT 模板&lt;/h3>
&lt;p>登录到 PVE 机器，将刚才的备份从 &lt;code>/var/lib/vz/dump/&lt;/code> 目录移动到存放 CT 模板的 &lt;code>/var/lib/vz/template/cache/&lt;/code> 目录&lt;/p></description></item></channel></rss>