<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SpringCloud on HelloWood</title><link>https://blog.hellowood.dev/categories/springcloud/</link><description>Recent content in SpringCloud on HelloWood</description><generator>Hugo</generator><language>cn</language><lastBuildDate>Sun, 22 Sep 2024 13:16:31 +0000</lastBuildDate><atom:link href="https://blog.hellowood.dev/categories/springcloud/index.xml" rel="self" type="application/rss+xml"/><item><title>Spring Cloud 使用 Consul 作为配置中心</title><link>https://blog.hellowood.dev/posts/spring-cloud-%E4%BD%BF%E7%94%A8-consul-%E4%BD%9C%E4%B8%BA%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83/</link><pubDate>Sun, 20 Sep 2020 22:28:50 +0000</pubDate><guid>https://blog.hellowood.dev/posts/spring-cloud-%E4%BD%BF%E7%94%A8-consul-%E4%BD%9C%E4%B8%BA%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83/</guid><description>&lt;h2 id="加载配置">加载配置&lt;/h2>
&lt;p>加载配置是通过 &lt;code>ConsulPropertySourceLocator&lt;/code> 来实现的，该类是 &lt;code>PropertySourceLocator&lt;/code>接口的实现类&lt;/p>
&lt;h3 id="bean-初始化">Bean 初始化&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#e5c07b">@Bean&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">ConsulPropertySourceLocator&lt;/span> &lt;span style="color:#00b1f7">consulPropertySourceLocator&lt;/span>(&lt;span style="color:#c1abea">ConsulConfigProperties&lt;/span> &lt;span style="color:#c1abea">consulConfigProperties&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">ConsulPropertySourceLocator&lt;/span>(&lt;span style="color:#c678dd">this&lt;/span>.&lt;span style="color:#b3d23c">consul&lt;/span>, &lt;span style="color:#c1abea">consulConfigProperties&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="获取配置">获取配置&lt;/h3>
&lt;p>获取配置是通过 PropertySourceLocator#locate 方法实现的，最终将获取到属性添加到环境中&lt;/p>
&lt;ul>
&lt;li>ConsulPropertySourceLocator#locate&lt;/li>
&lt;/ul>
&lt;p>获取配置时，根据应用名称，路径，环境及配置类型拼接相应的路径，然后调用 Consul 获取 KV 值的接口，获取相应的配置，根据类型解析后放入环境中&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e5c07b">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e5c07b">@Retryable&lt;/span>(&lt;span style="color:#c1abea">interceptor&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;consulRetryInterceptor&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">PropertySource&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#c1abea">locate&lt;/span>(&lt;span style="color:#c1abea">Environment&lt;/span> &lt;span style="color:#c1abea">environment&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c678dd">if&lt;/span> (&lt;span style="color:#c1abea">environment&lt;/span> &lt;span style="color:#c678dd">instanceof&lt;/span> &lt;span style="color:#c1abea">ConfigurableEnvironment&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c1abea">ConfigurableEnvironment&lt;/span> &lt;span style="color:#c1abea">env&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> (&lt;span style="color:#c1abea">ConfigurableEnvironment&lt;/span>) &lt;span style="color:#c1abea">environment&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">appName&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c678dd">this&lt;/span>.&lt;span style="color:#b3d23c">properties&lt;/span>.&lt;span style="color:#b3d23c">getName&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c678dd">if&lt;/span> (&lt;span style="color:#c1abea">appName&lt;/span> &lt;span style="color:#c7bf54">==&lt;/span> &lt;span style="color:#b756ff;font-weight:bold">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#c1abea">appName&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">env&lt;/span>.&lt;span style="color:#b3d23c">getProperty&lt;/span>(&lt;span style="color:#98c379">&amp;#34;spring.application.name&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c1abea">List&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">String&lt;/span>&lt;span style="color:#c7bf54">&amp;gt;&lt;/span> &lt;span style="color:#c1abea">profiles&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">Arrays&lt;/span>.&lt;span style="color:#b3d23c">asList&lt;/span>(&lt;span style="color:#c1abea">env&lt;/span>.&lt;span style="color:#b3d23c">getActiveProfiles&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">prefix&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c678dd">this&lt;/span>.&lt;span style="color:#b3d23c">properties&lt;/span>.&lt;span style="color:#b3d23c">getPrefix&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c1abea">List&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">String&lt;/span>&lt;span style="color:#c7bf54">&amp;gt;&lt;/span> &lt;span style="color:#c1abea">suffixes&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">ArrayList&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&amp;gt;&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#8a93a5;font-style:italic">// 不是文件类型的时候，后缀为 /，否则就是配置文件的后缀&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c678dd">if&lt;/span> (&lt;span style="color:#c678dd">this&lt;/span>.&lt;span style="color:#b3d23c">properties&lt;/span>.&lt;span style="color:#b3d23c">getFormat&lt;/span>() &lt;span style="color:#c7bf54">!=&lt;/span> &lt;span style="color:#c1abea">FILES&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#c1abea">suffixes&lt;/span>.&lt;span style="color:#b3d23c">add&lt;/span>(&lt;span style="color:#98c379">&amp;#34;/&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			} &lt;span style="color:#c678dd">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#c1abea">suffixes&lt;/span>.&lt;span style="color:#b3d23c">add&lt;/span>(&lt;span style="color:#98c379">&amp;#34;.yml&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#c1abea">suffixes&lt;/span>.&lt;span style="color:#b3d23c">add&lt;/span>(&lt;span style="color:#98c379">&amp;#34;.yaml&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#c1abea">suffixes&lt;/span>.&lt;span style="color:#b3d23c">add&lt;/span>(&lt;span style="color:#98c379">&amp;#34;.properties&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#8a93a5;font-style:italic">// 路径&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">defaultContext&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">getContext&lt;/span>(&lt;span style="color:#c1abea">prefix&lt;/span>, &lt;span style="color:#c678dd">this&lt;/span>.&lt;span style="color:#b3d23c">properties&lt;/span>.&lt;span style="color:#b3d23c">getDefaultContext&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c678dd">for&lt;/span> (&lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">suffix&lt;/span> : &lt;span style="color:#c1abea">suffixes&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#c678dd">this&lt;/span>.&lt;span style="color:#b3d23c">contexts&lt;/span>.&lt;span style="color:#b3d23c">add&lt;/span>(&lt;span style="color:#c1abea">defaultContext&lt;/span> &lt;span style="color:#c7bf54">+&lt;/span> &lt;span style="color:#c1abea">suffix&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#8a93a5;font-style:italic">// 追加环境及文件类型&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c678dd">for&lt;/span> (&lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">suffix&lt;/span> : &lt;span style="color:#c1abea">suffixes&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#c1abea">addProfiles&lt;/span>(&lt;span style="color:#c678dd">this&lt;/span>.&lt;span style="color:#b3d23c">contexts&lt;/span>, &lt;span style="color:#c1abea">defaultContext&lt;/span>, &lt;span style="color:#c1abea">profiles&lt;/span>, &lt;span style="color:#c1abea">suffix&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">baseContext&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">getContext&lt;/span>(&lt;span style="color:#c1abea">prefix&lt;/span>, &lt;span style="color:#c1abea">appName&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#8a93a5;font-style:italic">// 应用名称前缀&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c678dd">for&lt;/span> (&lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">suffix&lt;/span> : &lt;span style="color:#c1abea">suffixes&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#c678dd">this&lt;/span>.&lt;span style="color:#b3d23c">contexts&lt;/span>.&lt;span style="color:#b3d23c">add&lt;/span>(&lt;span style="color:#c1abea">baseContext&lt;/span> &lt;span style="color:#c7bf54">+&lt;/span> &lt;span style="color:#c1abea">suffix&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c678dd">for&lt;/span> (&lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">suffix&lt;/span> : &lt;span style="color:#c1abea">suffixes&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#c1abea">addProfiles&lt;/span>(&lt;span style="color:#c678dd">this&lt;/span>.&lt;span style="color:#b3d23c">contexts&lt;/span>, &lt;span style="color:#c1abea">baseContext&lt;/span>, &lt;span style="color:#c1abea">profiles&lt;/span>, &lt;span style="color:#c1abea">suffix&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c1abea">Collections&lt;/span>.&lt;span style="color:#b3d23c">reverse&lt;/span>(&lt;span style="color:#c678dd">this&lt;/span>.&lt;span style="color:#b3d23c">contexts&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c1abea">CompositePropertySource&lt;/span> &lt;span style="color:#c1abea">composite&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">CompositePropertySource&lt;/span>(&lt;span style="color:#98c379">&amp;#34;consul&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c678dd">for&lt;/span> (&lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">propertySourceContext&lt;/span> : &lt;span style="color:#c678dd">this&lt;/span>.&lt;span style="color:#b3d23c">contexts&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#c678dd">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>					&lt;span style="color:#c1abea">ConsulPropertySource&lt;/span> &lt;span style="color:#c1abea">propertySource&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#b756ff;font-weight:bold">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>					&lt;span style="color:#c678dd">if&lt;/span> (&lt;span style="color:#c678dd">this&lt;/span>.&lt;span style="color:#b3d23c">properties&lt;/span>.&lt;span style="color:#b3d23c">getFormat&lt;/span>() &lt;span style="color:#c7bf54">==&lt;/span> &lt;span style="color:#c1abea">FILES&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>						&lt;span style="color:#8a93a5;font-style:italic">// 获取值&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>						&lt;span style="color:#c1abea">Response&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">GetValue&lt;/span>&lt;span style="color:#c7bf54">&amp;gt;&lt;/span> &lt;span style="color:#c1abea">response&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c678dd">this&lt;/span>.&lt;span style="color:#b3d23c">consul&lt;/span>.&lt;span style="color:#b3d23c">getKVValue&lt;/span>(&lt;span style="color:#c1abea">propertySourceContext&lt;/span>, &lt;span style="color:#c678dd">this&lt;/span>.&lt;span style="color:#b3d23c">properties&lt;/span>.&lt;span style="color:#b3d23c">getAclToken&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>						&lt;span style="color:#8a93a5;font-style:italic">// 添加当前索引&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>						&lt;span style="color:#c1abea">addIndex&lt;/span>(&lt;span style="color:#c1abea">propertySourceContext&lt;/span>, &lt;span style="color:#c1abea">response&lt;/span>.&lt;span style="color:#b3d23c">getConsulIndex&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>						&lt;span style="color:#8a93a5;font-style:italic">// 如果值不为空，则更新值并初始化&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>						&lt;span style="color:#c678dd">if&lt;/span> (&lt;span style="color:#c1abea">response&lt;/span>.&lt;span style="color:#b3d23c">getValue&lt;/span>() &lt;span style="color:#c7bf54">!=&lt;/span> &lt;span style="color:#b756ff;font-weight:bold">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>							&lt;span style="color:#c1abea">ConsulFilesPropertySource&lt;/span> &lt;span style="color:#c1abea">filesPropertySource&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">ConsulFilesPropertySource&lt;/span>(&lt;span style="color:#c1abea">propertySourceContext&lt;/span>, &lt;span style="color:#c678dd">this&lt;/span>.&lt;span style="color:#b3d23c">consul&lt;/span>, &lt;span style="color:#c678dd">this&lt;/span>.&lt;span style="color:#b3d23c">properties&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>							&lt;span style="color:#8a93a5;font-style:italic">// 解析配置内容&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>							&lt;span style="color:#c1abea">filesPropertySource&lt;/span>.&lt;span style="color:#b3d23c">init&lt;/span>(&lt;span style="color:#c1abea">response&lt;/span>.&lt;span style="color:#b3d23c">getValue&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>							&lt;span style="color:#c1abea">propertySource&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">filesPropertySource&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>						}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>					} &lt;span style="color:#c678dd">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>						&lt;span style="color:#c1abea">propertySource&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">create&lt;/span>(&lt;span style="color:#c1abea">propertySourceContext&lt;/span>, &lt;span style="color:#c678dd">this&lt;/span>.&lt;span style="color:#b3d23c">contextIndex&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>					}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>					&lt;span style="color:#c678dd">if&lt;/span> (&lt;span style="color:#c1abea">propertySource&lt;/span> &lt;span style="color:#c7bf54">!=&lt;/span> &lt;span style="color:#b756ff;font-weight:bold">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>						&lt;span style="color:#c1abea">composite&lt;/span>.&lt;span style="color:#b3d23c">addPropertySource&lt;/span>(&lt;span style="color:#c1abea">propertySource&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>					}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				} &lt;span style="color:#c678dd">catch&lt;/span> (&lt;span style="color:#c1abea">Exception&lt;/span> &lt;span style="color:#c1abea">e&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>					&lt;span style="color:#c678dd">if&lt;/span> (&lt;span style="color:#c678dd">this&lt;/span>.&lt;span style="color:#b3d23c">properties&lt;/span>.&lt;span style="color:#b3d23c">isFailFast&lt;/span>()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>						&lt;span style="color:#c1abea">log&lt;/span>.&lt;span style="color:#b3d23c">error&lt;/span>(&lt;span style="color:#98c379">&amp;#34;Fail fast is set and there was an error reading configuration from consul.&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>						&lt;span style="color:#c1abea">ReflectionUtils&lt;/span>.&lt;span style="color:#b3d23c">rethrowRuntimeException&lt;/span>(&lt;span style="color:#c1abea">e&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>					} &lt;span style="color:#c678dd">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>						&lt;span style="color:#c1abea">log&lt;/span>.&lt;span style="color:#b3d23c">warn&lt;/span>(&lt;span style="color:#98c379">&amp;#34;Unable to load consul config from &amp;#34;&lt;/span> &lt;span style="color:#c7bf54">+&lt;/span> &lt;span style="color:#c1abea">propertySourceContext&lt;/span>, &lt;span style="color:#c1abea">e&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>					}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c1abea">composite&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#b756ff;font-weight:bold">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="监听配置">监听配置&lt;/h2>
&lt;p>Consul 监听配置是通过定时任务实现的，&lt;/p></description></item><item><title>Spring Cloud 使用 Kubernetes 作为配置中心</title><link>https://blog.hellowood.dev/posts/spring-cloud-%E4%BD%BF%E7%94%A8-kubernetes-%E4%BD%9C%E4%B8%BA%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83-1/</link><pubDate>Sun, 20 Sep 2020 22:28:15 +0000</pubDate><guid>https://blog.hellowood.dev/posts/spring-cloud-%E4%BD%BF%E7%94%A8-kubernetes-%E4%BD%9C%E4%B8%BA%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83-1/</guid><description>&lt;p>Spring Cloud 支持使用 Kubernetes 作为配置中心，通过 ConfigMap 或 Secret，将配置添加到应用中&lt;/p>
&lt;h2 id="加载配置">加载配置&lt;/h2>
&lt;p>加载配置是通过 PropertySourceLocator 来实现的，ConfigMap 使用 &lt;code>ConfigMapPropertySourceLocator&lt;/code> 加载，Secret 使用 &lt;code>SecretsPropertySourceLocator&lt;/code>加载&lt;/p>
&lt;h3 id="bean-初始化">Bean 初始化&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#e5c07b">@Bean&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#e5c07b">@ConditionalOnProperty&lt;/span>(&lt;span style="color:#c1abea">name&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;spring.cloud.kubernetes.config.enabled&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">matchIfMissing&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#b756ff;font-weight:bold">true&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">ConfigMapPropertySourceLocator&lt;/span> &lt;span style="color:#00b1f7">configMapPropertySourceLocator&lt;/span>(&lt;span style="color:#c1abea">ConfigMapConfigProperties&lt;/span> &lt;span style="color:#c1abea">properties&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">ConfigMapPropertySourceLocator&lt;/span>(&lt;span style="color:#c678dd">this&lt;/span>.&lt;span style="color:#b3d23c">client&lt;/span>, &lt;span style="color:#c1abea">properties&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#e5c07b">@Bean&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#e5c07b">@ConditionalOnProperty&lt;/span>(&lt;span style="color:#c1abea">name&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;spring.cloud.kubernetes.secrets.enabled&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">matchIfMissing&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#b756ff;font-weight:bold">true&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">SecretsPropertySourceLocator&lt;/span> &lt;span style="color:#00b1f7">secretsPropertySourceLocator&lt;/span>(&lt;span style="color:#c1abea">SecretsConfigProperties&lt;/span> &lt;span style="color:#c1abea">properties&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">SecretsPropertySourceLocator&lt;/span>(&lt;span style="color:#c678dd">this&lt;/span>.&lt;span style="color:#b3d23c">client&lt;/span>, &lt;span style="color:#c1abea">properties&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="获取配置">获取配置&lt;/h3>
&lt;p>获取配置是通过 PropertySourceLocator#locate 方法实现的，最终将获取到属性添加到环境中&lt;/p>
&lt;h4 id="configmap">ConfigMap&lt;/h4>
&lt;ul>
&lt;li>ConfigMapPropertySourceLocator#locate&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e5c07b">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">PropertySource&lt;/span> &lt;span style="color:#00b1f7">locate&lt;/span>(&lt;span style="color:#c1abea">Environment&lt;/span> &lt;span style="color:#c1abea">environment&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c678dd">if&lt;/span> (&lt;span style="color:#c1abea">environment&lt;/span> &lt;span style="color:#c678dd">instanceof&lt;/span> &lt;span style="color:#c1abea">ConfigurableEnvironment&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c1abea">ConfigurableEnvironment&lt;/span> &lt;span style="color:#c1abea">env&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> (&lt;span style="color:#c1abea">ConfigurableEnvironment&lt;/span>) &lt;span style="color:#c1abea">environment&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c1abea">List&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">ConfigMapConfigProperties&lt;/span>.&lt;span style="color:#b3d23c">NormalizedSource&lt;/span>&lt;span style="color:#c7bf54">&amp;gt;&lt;/span> &lt;span style="color:#c1abea">sources&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c678dd">this&lt;/span>.&lt;span style="color:#b3d23c">properties&lt;/span>.&lt;span style="color:#b3d23c">determineSources&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c1abea">CompositePropertySource&lt;/span> &lt;span style="color:#c1abea">composite&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">CompositePropertySource&lt;/span>(&lt;span style="color:#98c379">&amp;#34;composite-configmap&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c678dd">if&lt;/span> (&lt;span style="color:#c678dd">this&lt;/span>.&lt;span style="color:#b3d23c">properties&lt;/span>.&lt;span style="color:#b3d23c">isEnableApi&lt;/span>()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#c1abea">sources&lt;/span>.&lt;span style="color:#b3d23c">forEach&lt;/span>(&lt;span style="color:#c1abea">s&lt;/span> &lt;span style="color:#c7bf54">-&amp;gt;&lt;/span> &lt;span style="color:#c1abea">composite&lt;/span>.&lt;span style="color:#b3d23c">addFirstPropertySource&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>					&lt;span style="color:#c1abea">getMapPropertySourceForSingleConfigMap&lt;/span>(&lt;span style="color:#c1abea">env&lt;/span>, &lt;span style="color:#c1abea">s&lt;/span>)));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#8a93a5;font-style:italic">// 将配置添加的容器环境中&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c1abea">addPropertySourcesFromPaths&lt;/span>(&lt;span style="color:#c1abea">environment&lt;/span>, &lt;span style="color:#c1abea">composite&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c1abea">composite&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#b756ff;font-weight:bold">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>真正向 Kubernetes 发起请求的是通过调用 &lt;code>getMapPropertySourceForSingleConfigMap&lt;/code> 方法，创建&lt;code>ConfigMapPropertySource&lt;/code>实例的时候，会根据 &lt;code>getData&lt;/code> 方法，从 ConfigMap 获取属性解析并添加到环境中&lt;/p></description></item><item><title>Spring Cloud Consul 服务注册和发现</title><link>https://blog.hellowood.dev/posts/spring-cloud-consul-%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C%E5%92%8C%E5%8F%91%E7%8E%B0/</link><pubDate>Sun, 20 Sep 2020 22:27:16 +0000</pubDate><guid>https://blog.hellowood.dev/posts/spring-cloud-consul-%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C%E5%92%8C%E5%8F%91%E7%8E%B0/</guid><description>&lt;p>Spring Cloud Kubernetes 使用，可以通过引入 &lt;code>org.springframework.cloud:spring-cloud-starter-consul-discovery&lt;/code>，这个 starter 依赖于 &lt;code>org.springframework.cloud:spring-cloud-consul-core&lt;/code> 和 &lt;code>org.springframework.cloud:spring-cloud-consul-discovery&lt;/code>&lt;/p>
&lt;h2 id="consul-的核心概念">Consul 的核心概念&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>server
集群的核心节点，用于和 agent 通讯，保存服务的信息&lt;/p>
&lt;/li>
&lt;li>
&lt;p>agent
集群节点的守护进程，用于服务注册等行为，但不保存数据&lt;/p>
&lt;/li>
&lt;li>
&lt;p>catalog
集群服务通信的接口&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="初始化-kubernetes-client">初始化 Kubernetes Client&lt;/h2>
&lt;h3 id="初始化-consul-依赖">初始化 Consul 依赖&lt;/h3>
&lt;p>相关 Consul 核心依赖的初始化是通过 &lt;code>org.springframework.cloud.consul.ConsulAutoConfiguration&lt;/code>实现的&lt;/p>
&lt;ul>
&lt;li>初始化 ConsulClient&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e5c07b">@Bean&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e5c07b">@ConditionalOnMissingBean&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">ConsulClient&lt;/span> &lt;span style="color:#00b1f7">consulClient&lt;/span>(&lt;span style="color:#c1abea">ConsulProperties&lt;/span> &lt;span style="color:#c1abea">consulProperties&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c678dd">final&lt;/span> &lt;span style="color:#ef8383">int&lt;/span> &lt;span style="color:#c1abea">agentPort&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">consulProperties&lt;/span>.&lt;span style="color:#b3d23c">getPort&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c678dd">final&lt;/span> &lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">agentHost&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c7bf54">!&lt;/span>&lt;span style="color:#c1abea">StringUtils&lt;/span>.&lt;span style="color:#b3d23c">isEmpty&lt;/span>(&lt;span style="color:#c1abea">consulProperties&lt;/span>.&lt;span style="color:#b3d23c">getScheme&lt;/span>())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c7bf54">?&lt;/span> &lt;span style="color:#c1abea">consulProperties&lt;/span>.&lt;span style="color:#b3d23c">getScheme&lt;/span>() &lt;span style="color:#c7bf54">+&lt;/span> &lt;span style="color:#98c379">&amp;#34;://&amp;#34;&lt;/span> &lt;span style="color:#c7bf54">+&lt;/span> &lt;span style="color:#c1abea">consulProperties&lt;/span>.&lt;span style="color:#b3d23c">getHost&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			: &lt;span style="color:#c1abea">consulProperties&lt;/span>.&lt;span style="color:#b3d23c">getHost&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c678dd">if&lt;/span> (&lt;span style="color:#c1abea">consulProperties&lt;/span>.&lt;span style="color:#b3d23c">getTls&lt;/span>() &lt;span style="color:#c7bf54">!=&lt;/span> &lt;span style="color:#b756ff;font-weight:bold">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c1abea">ConsulProperties&lt;/span>.&lt;span style="color:#b3d23c">TLSConfig&lt;/span> &lt;span style="color:#c1abea">tls&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">consulProperties&lt;/span>.&lt;span style="color:#b3d23c">getTls&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c1abea">TLSConfig&lt;/span> &lt;span style="color:#c1abea">tlsConfig&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">TLSConfig&lt;/span>(&lt;span style="color:#c1abea">tls&lt;/span>.&lt;span style="color:#b3d23c">getKeyStoreInstanceType&lt;/span>(),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#c1abea">tls&lt;/span>.&lt;span style="color:#b3d23c">getCertificatePath&lt;/span>(), &lt;span style="color:#c1abea">tls&lt;/span>.&lt;span style="color:#b3d23c">getCertificatePassword&lt;/span>(),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#c1abea">tls&lt;/span>.&lt;span style="color:#b3d23c">getKeyStorePath&lt;/span>(), &lt;span style="color:#c1abea">tls&lt;/span>.&lt;span style="color:#b3d23c">getKeyStorePassword&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">ConsulClient&lt;/span>(&lt;span style="color:#c1abea">agentHost&lt;/span>, &lt;span style="color:#c1abea">agentPort&lt;/span>, &lt;span style="color:#c1abea">tlsConfig&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">ConsulClient&lt;/span>(&lt;span style="color:#c1abea">agentHost&lt;/span>, &lt;span style="color:#c1abea">agentPort&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="服务注册">服务注册&lt;/h2>
&lt;h3 id="初始化-bean">初始化 Bean&lt;/h3>
&lt;p>相关 Bean 的初始化是在 &lt;code>org.springframework.cloud.consul.serviceregistry.ConsulAutoServiceRegistrationAutoConfiguration&lt;/code> 中完成的&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8a93a5;font-style:italic">// 自动注册&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e5c07b">@Bean&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e5c07b">@ConditionalOnMissingBean&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">ConsulAutoServiceRegistration&lt;/span> &lt;span style="color:#00b1f7">consulAutoServiceRegistration&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c1abea">ConsulServiceRegistry&lt;/span> &lt;span style="color:#c1abea">registry&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c1abea">AutoServiceRegistrationProperties&lt;/span> &lt;span style="color:#c1abea">autoServiceRegistrationProperties&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c1abea">ConsulDiscoveryProperties&lt;/span> &lt;span style="color:#c1abea">properties&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c1abea">ConsulAutoRegistration&lt;/span> &lt;span style="color:#c1abea">consulRegistration&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">ConsulAutoServiceRegistration&lt;/span>(&lt;span style="color:#c1abea">registry&lt;/span>, &lt;span style="color:#c1abea">autoServiceRegistrationProperties&lt;/span>, &lt;span style="color:#c1abea">properties&lt;/span>, &lt;span style="color:#c1abea">consulRegistration&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#8a93a5;font-style:italic">// 启动事件监听器&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e5c07b">@Bean&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">ConsulAutoServiceRegistrationListener&lt;/span> &lt;span style="color:#00b1f7">consulAutoServiceRegistrationListener&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c1abea">ConsulAutoServiceRegistration&lt;/span> &lt;span style="color:#c1abea">registration&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">ConsulAutoServiceRegistrationListener&lt;/span>(&lt;span style="color:#c1abea">registration&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e5c07b">@Bean&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e5c07b">@ConditionalOnMissingBean&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">ConsulAutoRegistration&lt;/span> &lt;span style="color:#00b1f7">consulRegistration&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c1abea">AutoServiceRegistrationProperties&lt;/span> &lt;span style="color:#c1abea">autoServiceRegistrationProperties&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c1abea">ConsulDiscoveryProperties&lt;/span> &lt;span style="color:#c1abea">properties&lt;/span>, &lt;span style="color:#c1abea">ApplicationContext&lt;/span> &lt;span style="color:#c1abea">applicationContext&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c1abea">ObjectProvider&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">List&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">ConsulRegistrationCustomizer&lt;/span>&lt;span style="color:#c7bf54">&amp;gt;&amp;gt;&lt;/span> &lt;span style="color:#c1abea">registrationCustomizers&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c1abea">ObjectProvider&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">List&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">ConsulManagementRegistrationCustomizer&lt;/span>&lt;span style="color:#c7bf54">&amp;gt;&amp;gt;&lt;/span> &lt;span style="color:#c1abea">managementRegistrationCustomizers&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c1abea">HeartbeatProperties&lt;/span> &lt;span style="color:#c1abea">heartbeatProperties&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c1abea">ConsulAutoRegistration&lt;/span>.&lt;span style="color:#b3d23c">registration&lt;/span>(&lt;span style="color:#c1abea">autoServiceRegistrationProperties&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c1abea">properties&lt;/span>, &lt;span style="color:#c1abea">applicationContext&lt;/span>, &lt;span style="color:#c1abea">registrationCustomizers&lt;/span>.&lt;span style="color:#b3d23c">getIfAvailable&lt;/span>(),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c1abea">managementRegistrationCustomizers&lt;/span>.&lt;span style="color:#b3d23c">getIfAvailable&lt;/span>(), &lt;span style="color:#c1abea">heartbeatProperties&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="注册流程">注册流程&lt;/h3>
&lt;ul>
&lt;li>当监听到 &lt;code>WebServerInitializedEvent&lt;/code> 事件时触发注册&lt;/li>
&lt;/ul>
&lt;p>&lt;code>ConsulAutoServiceRegistrationListener&lt;/code> 类实现了 &lt;code>SmartApplicationListener&lt;/code>接口&lt;/p></description></item><item><title>Spring Cloud Kubernetes 服务注册和发现</title><link>https://blog.hellowood.dev/posts/spring-cloud-kubernetes-%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C%E5%92%8C%E5%8F%91%E7%8E%B0/</link><pubDate>Sun, 20 Sep 2020 22:26:03 +0000</pubDate><guid>https://blog.hellowood.dev/posts/spring-cloud-kubernetes-%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C%E5%92%8C%E5%8F%91%E7%8E%B0/</guid><description>&lt;p>Spring Cloud Kubernetes 使用，可以通过引入 &lt;code>org.springframework.cloud:spring-cloud-starter-kubernetes&lt;/code>，这个 starter 依赖于 &lt;code>org.springframework.cloud:spring-cloud-kubernetes-core&lt;/code> 和 &lt;code>org.springframework.cloud:spring-cloud-kubernetes-discovery&lt;/code>&lt;/p>
&lt;h2 id="初始化-kubernetes-client">初始化 Kubernetes Client&lt;/h2>
&lt;h3 id="初始化环境配置">初始化环境配置&lt;/h3>
&lt;p>环境初始化是通过 &lt;code>org.springframework.cloud.kubernetes.profile.KubernetesProfileEnvironmentPostProcessor&lt;/code>类实现的，当环境初始化完成时，会检查 Kubernetes 是否开启，如果开启则会判断 Profile 是否注入到容器中，没有时将会注入 Profile 到容器中&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e5c07b">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#ef8383">void&lt;/span> &lt;span style="color:#00b1f7">postProcessEnvironment&lt;/span>(&lt;span style="color:#c1abea">ConfigurableEnvironment&lt;/span> &lt;span style="color:#c1abea">environment&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	 &lt;span style="color:#c1abea">SpringApplication&lt;/span> &lt;span style="color:#c1abea">application&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#8a93a5;font-style:italic">// 判断是否启用 kubernetes，默认为 true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c678dd">final&lt;/span> &lt;span style="color:#ef8383">boolean&lt;/span> &lt;span style="color:#c1abea">kubernetesEnabled&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">environment&lt;/span>.&lt;span style="color:#b3d23c">getProperty&lt;/span>(&lt;span style="color:#98c379">&amp;#34;spring.cloud.kubernetes.enabled&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">Boolean&lt;/span>.&lt;span style="color:#b3d23c">class&lt;/span>, &lt;span style="color:#b756ff;font-weight:bold">true&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c678dd">if&lt;/span> (&lt;span style="color:#c7bf54">!&lt;/span>&lt;span style="color:#c1abea">kubernetesEnabled&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c678dd">return&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#8a93a5;font-style:italic">// 如果在 Kubernetes 中&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c678dd">if&lt;/span> (&lt;span style="color:#c1abea">isInsideKubernetes&lt;/span>()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#8a93a5;font-style:italic">// 判断是否存在 Kubernetes 环境的配置，如果不存在，则添加到环境变量中&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c678dd">if&lt;/span> (&lt;span style="color:#c1abea">hasKubernetesProfile&lt;/span>(&lt;span style="color:#c1abea">environment&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#8a93a5;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			} &lt;span style="color:#c678dd">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#c1abea">environment&lt;/span>.&lt;span style="color:#b3d23c">addActiveProfile&lt;/span>(&lt;span style="color:#c1abea">KUBERNETES_PROFILE&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		} &lt;span style="color:#c678dd">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#8a93a5;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="初始化-kubernetes-依赖">初始化 Kubernetes 依赖&lt;/h3>
&lt;p>相关 Kubernetes 核心依赖的初始化是通过 &lt;code>org.springframework.cloud.kubernetes.KubernetesAutoConfiguration&lt;/code>实现的&lt;/p></description></item><item><title>Spring Cloud Gateway 使用 Kubernetes 作为服务发现</title><link>https://blog.hellowood.dev/posts/spring-cloud-gateway-%E4%BD%BF%E7%94%A8-kubernetes-%E4%BD%9C%E4%B8%BA%E6%9C%8D%E5%8A%A1%E5%8F%91%E7%8E%B0/</link><pubDate>Sun, 20 Sep 2020 22:25:04 +0000</pubDate><guid>https://blog.hellowood.dev/posts/spring-cloud-gateway-%E4%BD%BF%E7%94%A8-kubernetes-%E4%BD%9C%E4%B8%BA%E6%9C%8D%E5%8A%A1%E5%8F%91%E7%8E%B0/</guid><description>&lt;p>Spring Cloud Gateway 作为网关，通过用于执行一些通用逻辑后做请求转发，后端可能涉及到多个服务，每个服务又有多个实例，调用服务实例就需要动态的更新，可以通过注册中心来实现，如果部署在K8S集群中，可以直接使用K8S实现服务发现&lt;/p>
&lt;h2 id="应用">应用&lt;/h2>
&lt;h3 id="gateway">Gateway&lt;/h3>
&lt;h4 id="添加依赖">添加依赖&lt;/h4>
&lt;ul>
&lt;li>build.gradle&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-groovy" data-lang="groovy">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">plugins&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">id&lt;/span> &lt;span style="color:#98c379">&amp;#39;org.springframework.boot&amp;#39;&lt;/span> &lt;span style="color:#c1abea">version&lt;/span> &lt;span style="color:#98c379">&amp;#39;2.2.6.RELEASE&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">id&lt;/span> &lt;span style="color:#98c379">&amp;#39;io.spring.dependency-management&amp;#39;&lt;/span> &lt;span style="color:#c1abea">version&lt;/span> &lt;span style="color:#98c379">&amp;#39;1.0.9.RELEASE&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">id&lt;/span> &lt;span style="color:#98c379">&amp;#39;java&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">ext&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">set&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;springCloudVersion&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">,&lt;/span> &lt;span style="color:#63c381">&amp;#34;Hoxton.SR1&amp;#34;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">set&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;springKubernetesVersion&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">,&lt;/span> &lt;span style="color:#63c381">&amp;#34;1.1.2.RELEASE&amp;#34;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">dependencies&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">implementation&lt;/span> &lt;span style="color:#98c379">&amp;#39;org.springframework.cloud:spring-cloud-starter-gateway&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">implementation&lt;/span> &lt;span style="color:#98c379">&amp;#39;org.springframework.cloud:spring-cloud-kubernetes-discovery&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">implementation&lt;/span> &lt;span style="color:#98c379">&amp;#39;org.springframework.boot:spring-boot-starter-actuator&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">testImplementation&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;org.springframework.boot:spring-boot-starter-test&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">exclude&lt;/span> &lt;span style="color:#f5a40d">group:&lt;/span> &lt;span style="color:#98c379">&amp;#39;org.junit.vintage&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">,&lt;/span> &lt;span style="color:#f5a40d">module:&lt;/span> &lt;span style="color:#98c379">&amp;#39;junit-vintage-engine&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">dependencyManagement&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">imports&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">mavenBom&lt;/span> &lt;span style="color:#63c381">&amp;#34;org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">mavenBom&lt;/span> &lt;span style="color:#63c381">&amp;#34;org.springframework.cloud:spring-cloud-kubernetes-dependencies:${springKubernetesVersion}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>如果是需要客户端实现负载均衡，依赖是&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-groovy" data-lang="groovy">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">implementation&lt;/span> &lt;span style="color:#98c379">&amp;#39;org.springframework.cloud:spring-cloud-starter-gateway&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">implementation&lt;/span> &lt;span style="color:#98c379">&amp;#39;org.springframework.cloud:spring-cloud-starter-kubernetes-all&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">implementation&lt;/span> &lt;span style="color:#98c379">&amp;#39;org.springframework.cloud:spring-cloud-starter-netflix-ribbon&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="添加路由配置">添加路由配置&lt;/h4>
&lt;ul>
&lt;li>bootstrap.yaml&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">spring&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">cloud&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">kubernetes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">discovery&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">catalogServicesWatchDelay&lt;/span>: &lt;span style="color:#d19a66">5000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">client&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">master-url&lt;/span>: &lt;span style="color:#98c379">https://kubernetes.docker.internal:6443&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">ca-cert-data&lt;/span>: &lt;span style="color:#98c379">xxx&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">namespace&lt;/span>: &lt;span style="color:#98c379">default&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>applicaiton.yaml&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">spring&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">application.name&lt;/span>: &lt;span style="color:#98c379">gateway&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">cloud&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">gateway&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">discovery&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">locator&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">enabled&lt;/span>: &lt;span style="color:#b756ff;font-weight:bold">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">url-expression&lt;/span>: &lt;span style="color:#63c381">&amp;#34;&amp;#39;http://&amp;#39;+serviceId+&amp;#39;:&amp;#39;+port&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">lower-case-service-id&lt;/span>: &lt;span style="color:#b756ff;font-weight:bold">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">management&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">endpoints&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">web&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">exposure&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">include&lt;/span>: &lt;span style="color:#63c381">&amp;#34;*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>配置 &lt;code>url-expression&lt;/code> 目的是为了在转发的时候直接转发到 Kubernetes 中相应的 Service 上去，默认的表达式为 &lt;code>&amp;quot;'lb://'+serviceId&amp;quot;&lt;/code>，这种适用于通过 Consul 或者 Eureka，最终是根据服务的IP和端口访问，&lt;code>spring-cloud-kubernetes&lt;/code>没有实现&lt;code>com.netflix.loadbalancer.AbstractServerList&lt;/code>，所以不会进行IP转换，最终是通过服务名称查找Service 实现调用，所以不需要负载均衡&lt;/p></description></item><item><title>Spring Cloud Gateway 使用 Kubernetes 实现负载均衡</title><link>https://blog.hellowood.dev/posts/spring-cloud-gateway-%E4%BD%BF%E7%94%A8-kubernetes-%E5%AE%9E%E7%8E%B0%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/</link><pubDate>Sun, 20 Sep 2020 22:23:18 +0000</pubDate><guid>https://blog.hellowood.dev/posts/spring-cloud-gateway-%E4%BD%BF%E7%94%A8-kubernetes-%E5%AE%9E%E7%8E%B0%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/</guid><description>&lt;p>在使用 Spring Cloud Gateway 作为服务服务发现时，可能会遇到 Gateway 并没有部署在服务所在的 Kubernetes 集群中，或者存在网络隔离，无法直接通过 Service Name 访问到相应的服务，这时候就需要通过 Service 的 IP 访问，但是，&lt;code>spring-cloud-kubernetes-discovery &lt;/code>没有像 &lt;code>spring-cloud-consul-discovery&lt;/code>一样实现服务负载均衡的接口，所以默认只会访问某个服务固定的 IP；这样就需要使用负载均衡的依赖&lt;/p>
&lt;h3 id="添加依赖">添加依赖&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-groovy" data-lang="groovy">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">implementation&lt;/span> &lt;span style="color:#98c379">&amp;#39;org.springframework.cloud:spring-cloud-starter-gateway&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">implementation&lt;/span> &lt;span style="color:#98c379">&amp;#39;org.springframework.cloud:spring-cloud-starter-kubernetes-all&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">implementation&lt;/span> &lt;span style="color:#98c379">&amp;#39;org.springframework.cloud:spring-cloud-starter-netflix-ribbon&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>spring-cloud-starter-kubernetes-all&lt;/code>包含 Kubernetes 负载均衡的实现&lt;/p>
&lt;h3 id="添加配置">添加配置&lt;/h3>
&lt;ul>
&lt;li>bootstrap.yaml&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">spring&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">cloud&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">kubernetes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">discovery&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">catalogServicesWatchDelay&lt;/span>: &lt;span style="color:#d19a66">5000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">client&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">master-url&lt;/span>: &lt;span style="color:#98c379">https://localhost:60002&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">ca-cert-data&lt;/span>: &lt;span style="color:#98c379">xxxx&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">namespace&lt;/span>: &lt;span style="color:#98c379">develop&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>applicaiton.yaml&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">spring&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">application&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">name&lt;/span>: &lt;span style="color:#98c379">gateway&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">cloud&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">gateway&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">discovery&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">locator&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">enabled&lt;/span>: &lt;span style="color:#b756ff;font-weight:bold">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">lower-case-service-id&lt;/span>: &lt;span style="color:#b756ff;font-weight:bold">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">management&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">endpoints&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">web&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">exposure&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">include&lt;/span>: &lt;span style="color:#63c381">&amp;#34;*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Spring Cloud 使用 Kubernetes 作为配置中心 - 使用加密配置</title><link>https://blog.hellowood.dev/posts/spring-cloud-%E4%BD%BF%E7%94%A8-kubernetes-%E4%BD%9C%E4%B8%BA%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83-%E4%BD%BF%E7%94%A8%E5%8A%A0%E5%AF%86%E9%85%8D%E7%BD%AE/</link><pubDate>Sun, 08 Sep 2019 19:18:09 +0000</pubDate><guid>https://blog.hellowood.dev/posts/spring-cloud-%E4%BD%BF%E7%94%A8-kubernetes-%E4%BD%9C%E4%B8%BA%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83-%E4%BD%BF%E7%94%A8%E5%8A%A0%E5%AF%86%E9%85%8D%E7%BD%AE/</guid><description>&lt;blockquote>
&lt;p>Spring Cloud 可以通过使用 Kubernetes 的 Secrets 作为加密配置&lt;/p>
&lt;/blockquote>
&lt;h2 id="创建应用">创建应用&lt;/h2>
&lt;h3 id="添加依赖">添加依赖&lt;/h3>
&lt;ul>
&lt;li>build.gradle&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-groovy" data-lang="groovy">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">dependencies&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#c1abea">implementation&lt;/span> &lt;span style="color:#98c379">&amp;#39;org.springframework.cloud:spring-cloud-starter-kubernetes-config&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="添加配置">添加配置&lt;/h3>
&lt;h4 id="编码">编码&lt;/h4>
&lt;p>内容通过 Base64 编码后添加到 Kubernetes 中&lt;/p>
&lt;ul>
&lt;li>secrets.yaml&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apiVersion: v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Secret
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: secrets-service
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace: default
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>data:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> url: amRiYzpteXNxbDovL2xvY2FsaG9zdDozMzA2L3NlYXRhP3VzZVVuaWNvZGU9dHJ1ZSZjaGFyYWN0ZXJFbmNvZGluZz11dGY4JmFsbG93TXVsdGlRdWVyaWVzPXRydWUmdXNlU1NMPWZhbHNl
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> username: aGVsbG93b29k
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> password: MTIzNDU2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>将Secrets 添加到 Kubernetes 中&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>kubectl apply -f secrets.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="applicationproperties">application.properties&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-properties" data-lang="properties">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.application.name&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">secrets-service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">server.port&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">8081&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">management.endpoint.restart.enabled&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic"># Secret Config&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.cloud.kubernetes.secrets.enabled&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.cloud.kubernetes.secrets.name&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">secrets-service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.cloud.kubernetes.secrets.namespace&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">default&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.cloud.kubernetes.reload.monitoring-secrets&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic"># DataSource Config&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.url&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">${DB_URL}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.username&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">${DB_USERNAME}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.password&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">${DB_PASSWORD}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>spring.cloud.kubernetes.secrets.enabled&lt;/code>默认是关闭的，所以需要主动开启&lt;/li>
&lt;li>&lt;code>spring.cloud.kubernetes.secrets.name&lt;/code>默认和&lt;code>spring.application.name&lt;/code>一致&lt;/li>
&lt;li>&lt;code>spring.cloud.kubernetes.secrets.namespace&lt;/code>指定 Namespace&lt;/li>
&lt;li>&lt;code>spring.cloud.kubernetes.reload.monitoring-secrets&lt;/code>监听配置更新事件&lt;/li>
&lt;/ul>
&lt;h3 id="添加接口">添加接口&lt;/h3>
&lt;ul>
&lt;li>ConfigProperties.java&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">@Data&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">@Component&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">@ConfigurationProperties&lt;/span>(&lt;span style="color:#c1abea">prefix&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;spring.datasource&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c678dd">class&lt;/span> &lt;span style="color:#76a9f9">ConfigProperties&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">private&lt;/span> &lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">url&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">private&lt;/span> &lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">username&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">private&lt;/span> &lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">password&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>ConfigMapController.java&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">@RestController&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">@Slf4j&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c678dd">class&lt;/span> &lt;span style="color:#76a9f9">SecretsController&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Autowired&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">private&lt;/span> &lt;span style="color:#c1abea">ConfigProperties&lt;/span> &lt;span style="color:#c1abea">configProperties&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@GetMapping&lt;/span>(&lt;span style="color:#98c379">&amp;#34;/db&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#00b1f7">config&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c1abea">String&lt;/span>.&lt;span style="color:#b3d23c">format&lt;/span>(&lt;span style="color:#98c379">&amp;#34;url:%s\nusername:%s\npassword:%s&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">configProperties&lt;/span>.&lt;span style="color:#b3d23c">getUrl&lt;/span>(),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">configProperties&lt;/span>.&lt;span style="color:#b3d23c">getUsername&lt;/span>(),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">configProperties&lt;/span>.&lt;span style="color:#b3d23c">getPassword&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="部署应用">部署应用&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>构建并上传镜像&lt;/p></description></item><item><title>Spring Cloud 使用 Kubernetes 作为配置中心</title><link>https://blog.hellowood.dev/posts/spring-cloud-%E4%BD%BF%E7%94%A8-kubernetes-%E4%BD%9C%E4%B8%BA%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83/</link><pubDate>Sun, 08 Sep 2019 19:15:46 +0000</pubDate><guid>https://blog.hellowood.dev/posts/spring-cloud-%E4%BD%BF%E7%94%A8-kubernetes-%E4%BD%9C%E4%B8%BA%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83/</guid><description>&lt;blockquote>
&lt;p>Spring Cloud 可以通过使用 Kubernetes 的 ConfigMap 作为配置中心，实现配置的拉取和刷新&lt;/p>
&lt;/blockquote>
&lt;h2 id="创建应用">创建应用&lt;/h2>
&lt;h3 id="添加依赖">添加依赖&lt;/h3>
&lt;ul>
&lt;li>build.gradle&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-groovy" data-lang="groovy">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">dependencies&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#c1abea">implementation&lt;/span> &lt;span style="color:#98c379">&amp;#39;org.springframework.cloud:spring-cloud-starter-kubernetes-config&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="添加配置">添加配置&lt;/h3>
&lt;h4 id="configmap">ConfigMap&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">kind&lt;/span>: &lt;span style="color:#98c379">ConfigMap&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">apiVersion&lt;/span>: &lt;span style="color:#98c379">v1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">metadata&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">name&lt;/span>: &lt;span style="color:#98c379">config-map-service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">data&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">application.yaml&lt;/span>: |-&lt;span style="color:#7e97c3">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7e97c3"> spring:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7e97c3"> profiles: dev
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7e97c3"> config:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7e97c3"> applicationVersion: dev-0.0.1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7e97c3"> ---
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7e97c3"> spring:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7e97c3"> profiles: prod
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7e97c3"> config:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7e97c3"> applicationVersion: prod-0.0.1&lt;/span> 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>ConfigMap的名称要和应用名称一致，否则需要指定相应的名称；应用的配置信息可以使用&lt;code>application.yaml|properties&lt;/code>作为 key，需要注意的是环境配置是&lt;code>spring.profiles&lt;/code>，而不是&lt;code>spring.profiles.active&lt;/code>，否则只会使用最后一行的配置&lt;/p>
&lt;p>通过以下命令将 ConfigMap 添加到 Kubernetes 中&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>kubectl apply -f config-map.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="applicationproperties">application.properties&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-properties" data-lang="properties">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.application.name&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">config-map-service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.profiles.active&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">${PROFILE:dev}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">management.endpoint.restart.enabled&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic"># Reload Config&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.cloud.kubernetes.reload.enabled&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.cloud.kubernetes.reload.mode&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">polling&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.cloud.kubernetes.reload.period&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">5000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.cloud.kubernetes.reload.strategy&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">refresh&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>
&lt;p>&lt;code>spring.profiles.active=${PROFILE:dev}&lt;/code>用于获取 Deployment 传递的参数来决定使用什么配置&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>spring.cloud.kubernetes.reload.enabled&lt;/code>默认是关闭的，所以需要主动开启&lt;/p></description></item><item><title>Spring Cloud 使用 Kubernetes 作为注册中心</title><link>https://blog.hellowood.dev/posts/spring-cloud-%E4%BD%BF%E7%94%A8-kubernetes-%E4%BD%9C%E4%B8%BA%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83/</link><pubDate>Sun, 08 Sep 2019 19:12:29 +0000</pubDate><guid>https://blog.hellowood.dev/posts/spring-cloud-%E4%BD%BF%E7%94%A8-kubernetes-%E4%BD%9C%E4%B8%BA%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83/</guid><description>&lt;blockquote>
&lt;p>Spring Cloud 可以使用 Kubernetes 作为注册中心，实现服务注册和发现&lt;/p>
&lt;/blockquote>
&lt;p>创建两个应用，Consumer 和 Provider，Provider 提供一个 REST 接口供 Consumer 调用&lt;/p>
&lt;h2 id="provider">Provider&lt;/h2>
&lt;h3 id="添加依赖">添加依赖&lt;/h3>
&lt;ul>
&lt;li>build.gradle&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-groovy" data-lang="groovy">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">dependencies&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">compile&lt;/span> &lt;span style="color:#00b1f7">project&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#63c381">&amp;#34;:discovery/common&amp;#34;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">implementation&lt;/span> &lt;span style="color:#98c379">&amp;#39;org.springframework.boot:spring-boot-starter-actuator&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">implementation&lt;/span> &lt;span style="color:#98c379">&amp;#39;org.springframework.boot:spring-boot-starter-web&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">implementation&lt;/span> &lt;span style="color:#98c379">&amp;#39;org.springframework.cloud:spring-cloud-starter-kubernetes-all&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">compileOnly&lt;/span> &lt;span style="color:#98c379">&amp;#39;org.projectlombok:lombok&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">annotationProcessor&lt;/span> &lt;span style="color:#98c379">&amp;#39;org.projectlombok:lombok&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">testImplementation&lt;/span> &lt;span style="color:#98c379">&amp;#39;org.springframework.boot:spring-boot-starter-test&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="添加配置">添加配置&lt;/h3>
&lt;ul>
&lt;li>application.properties&lt;/li>
&lt;/ul>
&lt;p>指定服务的名称，用于实现调用&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-properties" data-lang="properties">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.application.name&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">provider-service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">server.port&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">8082&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>ProviderApplication.java&lt;/li>
&lt;/ul>
&lt;p>添加 &lt;code>@EnableDiscoveryClient&lt;/code>启用服务发现&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">@SpringBootApplication&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">@EnableDiscoveryClient&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c678dd">class&lt;/span> &lt;span style="color:#76a9f9">ProviderApplication&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c678dd">static&lt;/span> &lt;span style="color:#ef8383">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span>(&lt;span style="color:#c1abea">String&lt;/span>&lt;span style="color:#c7bf54">[]&lt;/span> &lt;span style="color:#c1abea">args&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">SpringApplication&lt;/span>.&lt;span style="color:#b3d23c">run&lt;/span>(&lt;span style="color:#c1abea">ProviderApplication&lt;/span>.&lt;span style="color:#b3d23c">class&lt;/span>, &lt;span style="color:#c1abea">args&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="添加接口">添加接口&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@GetMapping&lt;/span>(&lt;span style="color:#98c379">&amp;#34;/ping&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@ResponseBody&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#00b1f7">ping&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c1abea">InetAddress&lt;/span>.&lt;span style="color:#b3d23c">getLocalHost&lt;/span>().&lt;span style="color:#b3d23c">getHostName&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#c678dd">catch&lt;/span> (&lt;span style="color:#c1abea">UnknownHostException&lt;/span> &lt;span style="color:#c1abea">e&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#98c379">&amp;#34;Pong&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="部署到-kubernetes">部署到 Kubernetes&lt;/h3>
&lt;ul>
&lt;li>Dockerfile&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">FROM&lt;/span>&lt;span style="color:#98c379"> openjdk:8-jdk-alpine&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">VOLUME&lt;/span>&lt;span style="color:#98c379"> /tmp&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">ENV&lt;/span> &lt;span style="color:#dcaeea">TZ&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>Asia/Shanghai
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">RUN&lt;/span> ln -snf /usr/share/zoneinfo/&lt;span style="color:#dcaeea">$TZ&lt;/span> /etc/localtime &lt;span style="color:#c7bf54">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#ef8383">echo&lt;/span> &lt;span style="color:#dcaeea">$TZ&lt;/span> &amp;gt; /etc/timezone
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">ARG&lt;/span> JAR_FILE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">ADD&lt;/span> discovery/provider/build/libs/provider-0.0.1-SNAPSHOT.jar app.jar
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">ENTRYPOINT&lt;/span> [&lt;span style="color:#63c381">&amp;#34;java&amp;#34;&lt;/span>,&lt;span style="color:#63c381">&amp;#34;-Djava.security.egd=file:/dev/./urandom&amp;#34;&lt;/span>, &lt;span style="color:#63c381">&amp;#34;-Duser.timezone=GMT+08&amp;#34;&lt;/span>, &lt;span style="color:#63c381">&amp;#34;-jar&amp;#34;&lt;/span>,&lt;span style="color:#63c381">&amp;#34;/app.jar&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>构建并上传镜像&lt;/p></description></item><item><title>Spring Cloud 监控服务器下 IP/URL 不正确导致无法注册的解决方法</title><link>https://blog.hellowood.dev/posts/spring-cloud-%E7%9B%91%E6%8E%A7%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8B-ip-url-%E4%B8%8D%E6%AD%A3%E7%A1%AE%E5%AF%BC%E8%87%B4%E6%97%A0%E6%B3%95%E6%B3%A8%E5%86%8C%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</link><pubDate>Mon, 01 Jan 2018 11:51:23 +0000</pubDate><guid>https://blog.hellowood.dev/posts/spring-cloud-%E7%9B%91%E6%8E%A7%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8B-ip-url-%E4%B8%8D%E6%AD%A3%E7%A1%AE%E5%AF%BC%E8%87%B4%E6%97%A0%E6%B3%95%E6%B3%A8%E5%86%8C%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</guid><description>&lt;blockquote>
&lt;h2 id="本项目仅用到了-spring-cloud并没有使用-eureka">本项目仅用到了 Spring Cloud，并没有使用 Eureka&lt;/h2>
&lt;/blockquote>
&lt;blockquote>
&lt;p>在使用 Spring Cloud 对 Spring Boot 应用通过 Spring Admin 进行监控的时候，当 Admin Server 和被监控的应用都在本地启动的时候没有任何问题，但是当部署到 Server 上之后，Client 在注册到 Admin Server 上时 IP 地址不正确，发现是因为 Server 有内网和外网 IP，但是在应用注册的时候用了内网的 IP，Admin Server 访问该内网 IP 失败，所以应用无法注册&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>因为没有使用 Eureka，所以配置时需要用 Spring Cloud 的配置来处理&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>使用 Eureka 请参考 &lt;a href="http://www.jianshu.com/p/fa1e9c8e4f47">http://www.jianshu.com/p/fa1e9c8e4f47&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h2 id="配置">配置&lt;/h2>
&lt;ul>
&lt;li>修改配置文件，添加以下内容&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>spring.boot.admin.client.service-base-url=http://${your_ip}:${your_port}
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="说明">说明&lt;/h2>
&lt;ul>
&lt;li>当没有任何配置的时候，会使用&lt;code>http://bogon:9999/&lt;/code>注册&lt;/li>
&lt;li>当 Client 加入了&lt;code>spring.boot.admin.client.prefer-ip=true&lt;/code>的时候会以所得到的 IP 注册，此时 IP 为内网 IP，如果部署到服务器上将会无法注册&lt;/li>
&lt;li>当 Client 配置为&lt;code>spring.boot.admin.client.service-base-url=http://${your_ip}:${your_port}&lt;/code>时将会以所配置的地址进行注册&lt;/li>
&lt;/ul></description></item></channel></rss>