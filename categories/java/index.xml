<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Java on HelloWood</title><link>https://blog.hellowood.dev/categories/java/</link><description>Recent content in Java on HelloWood</description><generator>Hugo</generator><language>cn</language><lastBuildDate>Mon, 16 Sep 2024 09:02:47 +0800</lastBuildDate><atom:link href="https://blog.hellowood.dev/categories/java/index.xml" rel="self" type="application/rss+xml"/><item><title>Spring Cloud 使用 Consul 作为配置中心</title><link>https://blog.hellowood.dev/posts/spring-cloud-%E4%BD%BF%E7%94%A8-consul-%E4%BD%9C%E4%B8%BA%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83/</link><pubDate>Sun, 20 Sep 2020 22:28:50 +0000</pubDate><guid>https://blog.hellowood.dev/posts/spring-cloud-%E4%BD%BF%E7%94%A8-consul-%E4%BD%9C%E4%B8%BA%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83/</guid><description>&lt;h2 id="加载配置">加载配置&lt;/h2>
&lt;p>加载配置是通过 &lt;code>ConsulPropertySourceLocator&lt;/code> 来实现的，该类是 &lt;code>PropertySourceLocator&lt;/code>接口的实现类&lt;/p>
&lt;h3 id="bean-初始化">Bean 初始化&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#e5c07b">@Bean&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">ConsulPropertySourceLocator&lt;/span> &lt;span style="color:#00b1f7">consulPropertySourceLocator&lt;/span>(&lt;span style="color:#c1abea">ConsulConfigProperties&lt;/span> &lt;span style="color:#c1abea">consulConfigProperties&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">ConsulPropertySourceLocator&lt;/span>(&lt;span style="color:#c678dd">this&lt;/span>.&lt;span style="color:#b3d23c">consul&lt;/span>, &lt;span style="color:#c1abea">consulConfigProperties&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="获取配置">获取配置&lt;/h3>
&lt;p>获取配置是通过 PropertySourceLocator#locate 方法实现的，最终将获取到属性添加到环境中&lt;/p>
&lt;ul>
&lt;li>ConsulPropertySourceLocator#locate&lt;/li>
&lt;/ul>
&lt;p>获取配置时，根据应用名称，路径，环境及配置类型拼接相应的路径，然后调用 Consul 获取 KV 值的接口，获取相应的配置，根据类型解析后放入环境中&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e5c07b">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e5c07b">@Retryable&lt;/span>(&lt;span style="color:#c1abea">interceptor&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;consulRetryInterceptor&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">PropertySource&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;?&amp;gt;&lt;/span> &lt;span style="color:#c1abea">locate&lt;/span>(&lt;span style="color:#c1abea">Environment&lt;/span> &lt;span style="color:#c1abea">environment&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c678dd">if&lt;/span> (&lt;span style="color:#c1abea">environment&lt;/span> &lt;span style="color:#c678dd">instanceof&lt;/span> &lt;span style="color:#c1abea">ConfigurableEnvironment&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c1abea">ConfigurableEnvironment&lt;/span> &lt;span style="color:#c1abea">env&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> (&lt;span style="color:#c1abea">ConfigurableEnvironment&lt;/span>) &lt;span style="color:#c1abea">environment&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">appName&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c678dd">this&lt;/span>.&lt;span style="color:#b3d23c">properties&lt;/span>.&lt;span style="color:#b3d23c">getName&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c678dd">if&lt;/span> (&lt;span style="color:#c1abea">appName&lt;/span> &lt;span style="color:#c7bf54">==&lt;/span> &lt;span style="color:#b756ff;font-weight:bold">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#c1abea">appName&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">env&lt;/span>.&lt;span style="color:#b3d23c">getProperty&lt;/span>(&lt;span style="color:#98c379">&amp;#34;spring.application.name&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c1abea">List&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">String&lt;/span>&lt;span style="color:#c7bf54">&amp;gt;&lt;/span> &lt;span style="color:#c1abea">profiles&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">Arrays&lt;/span>.&lt;span style="color:#b3d23c">asList&lt;/span>(&lt;span style="color:#c1abea">env&lt;/span>.&lt;span style="color:#b3d23c">getActiveProfiles&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">prefix&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c678dd">this&lt;/span>.&lt;span style="color:#b3d23c">properties&lt;/span>.&lt;span style="color:#b3d23c">getPrefix&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c1abea">List&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">String&lt;/span>&lt;span style="color:#c7bf54">&amp;gt;&lt;/span> &lt;span style="color:#c1abea">suffixes&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">ArrayList&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&amp;gt;&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#8a93a5;font-style:italic">// 不是文件类型的时候，后缀为 /，否则就是配置文件的后缀&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c678dd">if&lt;/span> (&lt;span style="color:#c678dd">this&lt;/span>.&lt;span style="color:#b3d23c">properties&lt;/span>.&lt;span style="color:#b3d23c">getFormat&lt;/span>() &lt;span style="color:#c7bf54">!=&lt;/span> &lt;span style="color:#c1abea">FILES&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#c1abea">suffixes&lt;/span>.&lt;span style="color:#b3d23c">add&lt;/span>(&lt;span style="color:#98c379">&amp;#34;/&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			} &lt;span style="color:#c678dd">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#c1abea">suffixes&lt;/span>.&lt;span style="color:#b3d23c">add&lt;/span>(&lt;span style="color:#98c379">&amp;#34;.yml&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#c1abea">suffixes&lt;/span>.&lt;span style="color:#b3d23c">add&lt;/span>(&lt;span style="color:#98c379">&amp;#34;.yaml&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#c1abea">suffixes&lt;/span>.&lt;span style="color:#b3d23c">add&lt;/span>(&lt;span style="color:#98c379">&amp;#34;.properties&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#8a93a5;font-style:italic">// 路径&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">defaultContext&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">getContext&lt;/span>(&lt;span style="color:#c1abea">prefix&lt;/span>, &lt;span style="color:#c678dd">this&lt;/span>.&lt;span style="color:#b3d23c">properties&lt;/span>.&lt;span style="color:#b3d23c">getDefaultContext&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c678dd">for&lt;/span> (&lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">suffix&lt;/span> : &lt;span style="color:#c1abea">suffixes&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#c678dd">this&lt;/span>.&lt;span style="color:#b3d23c">contexts&lt;/span>.&lt;span style="color:#b3d23c">add&lt;/span>(&lt;span style="color:#c1abea">defaultContext&lt;/span> &lt;span style="color:#c7bf54">+&lt;/span> &lt;span style="color:#c1abea">suffix&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#8a93a5;font-style:italic">// 追加环境及文件类型&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c678dd">for&lt;/span> (&lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">suffix&lt;/span> : &lt;span style="color:#c1abea">suffixes&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#c1abea">addProfiles&lt;/span>(&lt;span style="color:#c678dd">this&lt;/span>.&lt;span style="color:#b3d23c">contexts&lt;/span>, &lt;span style="color:#c1abea">defaultContext&lt;/span>, &lt;span style="color:#c1abea">profiles&lt;/span>, &lt;span style="color:#c1abea">suffix&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">baseContext&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">getContext&lt;/span>(&lt;span style="color:#c1abea">prefix&lt;/span>, &lt;span style="color:#c1abea">appName&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#8a93a5;font-style:italic">// 应用名称前缀&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c678dd">for&lt;/span> (&lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">suffix&lt;/span> : &lt;span style="color:#c1abea">suffixes&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#c678dd">this&lt;/span>.&lt;span style="color:#b3d23c">contexts&lt;/span>.&lt;span style="color:#b3d23c">add&lt;/span>(&lt;span style="color:#c1abea">baseContext&lt;/span> &lt;span style="color:#c7bf54">+&lt;/span> &lt;span style="color:#c1abea">suffix&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c678dd">for&lt;/span> (&lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">suffix&lt;/span> : &lt;span style="color:#c1abea">suffixes&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#c1abea">addProfiles&lt;/span>(&lt;span style="color:#c678dd">this&lt;/span>.&lt;span style="color:#b3d23c">contexts&lt;/span>, &lt;span style="color:#c1abea">baseContext&lt;/span>, &lt;span style="color:#c1abea">profiles&lt;/span>, &lt;span style="color:#c1abea">suffix&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c1abea">Collections&lt;/span>.&lt;span style="color:#b3d23c">reverse&lt;/span>(&lt;span style="color:#c678dd">this&lt;/span>.&lt;span style="color:#b3d23c">contexts&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c1abea">CompositePropertySource&lt;/span> &lt;span style="color:#c1abea">composite&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">CompositePropertySource&lt;/span>(&lt;span style="color:#98c379">&amp;#34;consul&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c678dd">for&lt;/span> (&lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">propertySourceContext&lt;/span> : &lt;span style="color:#c678dd">this&lt;/span>.&lt;span style="color:#b3d23c">contexts&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#c678dd">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>					&lt;span style="color:#c1abea">ConsulPropertySource&lt;/span> &lt;span style="color:#c1abea">propertySource&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#b756ff;font-weight:bold">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>					&lt;span style="color:#c678dd">if&lt;/span> (&lt;span style="color:#c678dd">this&lt;/span>.&lt;span style="color:#b3d23c">properties&lt;/span>.&lt;span style="color:#b3d23c">getFormat&lt;/span>() &lt;span style="color:#c7bf54">==&lt;/span> &lt;span style="color:#c1abea">FILES&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>						&lt;span style="color:#8a93a5;font-style:italic">// 获取值&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>						&lt;span style="color:#c1abea">Response&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">GetValue&lt;/span>&lt;span style="color:#c7bf54">&amp;gt;&lt;/span> &lt;span style="color:#c1abea">response&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c678dd">this&lt;/span>.&lt;span style="color:#b3d23c">consul&lt;/span>.&lt;span style="color:#b3d23c">getKVValue&lt;/span>(&lt;span style="color:#c1abea">propertySourceContext&lt;/span>, &lt;span style="color:#c678dd">this&lt;/span>.&lt;span style="color:#b3d23c">properties&lt;/span>.&lt;span style="color:#b3d23c">getAclToken&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>						&lt;span style="color:#8a93a5;font-style:italic">// 添加当前索引&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>						&lt;span style="color:#c1abea">addIndex&lt;/span>(&lt;span style="color:#c1abea">propertySourceContext&lt;/span>, &lt;span style="color:#c1abea">response&lt;/span>.&lt;span style="color:#b3d23c">getConsulIndex&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>						&lt;span style="color:#8a93a5;font-style:italic">// 如果值不为空，则更新值并初始化&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>						&lt;span style="color:#c678dd">if&lt;/span> (&lt;span style="color:#c1abea">response&lt;/span>.&lt;span style="color:#b3d23c">getValue&lt;/span>() &lt;span style="color:#c7bf54">!=&lt;/span> &lt;span style="color:#b756ff;font-weight:bold">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>							&lt;span style="color:#c1abea">ConsulFilesPropertySource&lt;/span> &lt;span style="color:#c1abea">filesPropertySource&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">ConsulFilesPropertySource&lt;/span>(&lt;span style="color:#c1abea">propertySourceContext&lt;/span>, &lt;span style="color:#c678dd">this&lt;/span>.&lt;span style="color:#b3d23c">consul&lt;/span>, &lt;span style="color:#c678dd">this&lt;/span>.&lt;span style="color:#b3d23c">properties&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>							&lt;span style="color:#8a93a5;font-style:italic">// 解析配置内容&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>							&lt;span style="color:#c1abea">filesPropertySource&lt;/span>.&lt;span style="color:#b3d23c">init&lt;/span>(&lt;span style="color:#c1abea">response&lt;/span>.&lt;span style="color:#b3d23c">getValue&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>							&lt;span style="color:#c1abea">propertySource&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">filesPropertySource&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>						}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>					} &lt;span style="color:#c678dd">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>						&lt;span style="color:#c1abea">propertySource&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">create&lt;/span>(&lt;span style="color:#c1abea">propertySourceContext&lt;/span>, &lt;span style="color:#c678dd">this&lt;/span>.&lt;span style="color:#b3d23c">contextIndex&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>					}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>					&lt;span style="color:#c678dd">if&lt;/span> (&lt;span style="color:#c1abea">propertySource&lt;/span> &lt;span style="color:#c7bf54">!=&lt;/span> &lt;span style="color:#b756ff;font-weight:bold">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>						&lt;span style="color:#c1abea">composite&lt;/span>.&lt;span style="color:#b3d23c">addPropertySource&lt;/span>(&lt;span style="color:#c1abea">propertySource&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>					}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				} &lt;span style="color:#c678dd">catch&lt;/span> (&lt;span style="color:#c1abea">Exception&lt;/span> &lt;span style="color:#c1abea">e&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>					&lt;span style="color:#c678dd">if&lt;/span> (&lt;span style="color:#c678dd">this&lt;/span>.&lt;span style="color:#b3d23c">properties&lt;/span>.&lt;span style="color:#b3d23c">isFailFast&lt;/span>()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>						&lt;span style="color:#c1abea">log&lt;/span>.&lt;span style="color:#b3d23c">error&lt;/span>(&lt;span style="color:#98c379">&amp;#34;Fail fast is set and there was an error reading configuration from consul.&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>						&lt;span style="color:#c1abea">ReflectionUtils&lt;/span>.&lt;span style="color:#b3d23c">rethrowRuntimeException&lt;/span>(&lt;span style="color:#c1abea">e&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>					} &lt;span style="color:#c678dd">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>						&lt;span style="color:#c1abea">log&lt;/span>.&lt;span style="color:#b3d23c">warn&lt;/span>(&lt;span style="color:#98c379">&amp;#34;Unable to load consul config from &amp;#34;&lt;/span> &lt;span style="color:#c7bf54">+&lt;/span> &lt;span style="color:#c1abea">propertySourceContext&lt;/span>, &lt;span style="color:#c1abea">e&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>					}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c1abea">composite&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#b756ff;font-weight:bold">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="监听配置">监听配置&lt;/h2>
&lt;p>Consul 监听配置是通过定时任务实现的，&lt;/p></description></item><item><title>Spring Cloud 使用 Kubernetes 作为配置中心</title><link>https://blog.hellowood.dev/posts/spring-cloud-%E4%BD%BF%E7%94%A8-kubernetes-%E4%BD%9C%E4%B8%BA%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83-1/</link><pubDate>Sun, 20 Sep 2020 22:28:15 +0000</pubDate><guid>https://blog.hellowood.dev/posts/spring-cloud-%E4%BD%BF%E7%94%A8-kubernetes-%E4%BD%9C%E4%B8%BA%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83-1/</guid><description>&lt;p>Spring Cloud 支持使用 Kubernetes 作为配置中心，通过 ConfigMap 或 Secret，将配置添加到应用中&lt;/p>
&lt;h2 id="加载配置">加载配置&lt;/h2>
&lt;p>加载配置是通过 PropertySourceLocator 来实现的，ConfigMap 使用 &lt;code>ConfigMapPropertySourceLocator&lt;/code> 加载，Secret 使用 &lt;code>SecretsPropertySourceLocator&lt;/code>加载&lt;/p>
&lt;h3 id="bean-初始化">Bean 初始化&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#e5c07b">@Bean&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#e5c07b">@ConditionalOnProperty&lt;/span>(&lt;span style="color:#c1abea">name&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;spring.cloud.kubernetes.config.enabled&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">matchIfMissing&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#b756ff;font-weight:bold">true&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">ConfigMapPropertySourceLocator&lt;/span> &lt;span style="color:#00b1f7">configMapPropertySourceLocator&lt;/span>(&lt;span style="color:#c1abea">ConfigMapConfigProperties&lt;/span> &lt;span style="color:#c1abea">properties&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">ConfigMapPropertySourceLocator&lt;/span>(&lt;span style="color:#c678dd">this&lt;/span>.&lt;span style="color:#b3d23c">client&lt;/span>, &lt;span style="color:#c1abea">properties&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#e5c07b">@Bean&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#e5c07b">@ConditionalOnProperty&lt;/span>(&lt;span style="color:#c1abea">name&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;spring.cloud.kubernetes.secrets.enabled&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">matchIfMissing&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#b756ff;font-weight:bold">true&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">SecretsPropertySourceLocator&lt;/span> &lt;span style="color:#00b1f7">secretsPropertySourceLocator&lt;/span>(&lt;span style="color:#c1abea">SecretsConfigProperties&lt;/span> &lt;span style="color:#c1abea">properties&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">SecretsPropertySourceLocator&lt;/span>(&lt;span style="color:#c678dd">this&lt;/span>.&lt;span style="color:#b3d23c">client&lt;/span>, &lt;span style="color:#c1abea">properties&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="获取配置">获取配置&lt;/h3>
&lt;p>获取配置是通过 PropertySourceLocator#locate 方法实现的，最终将获取到属性添加到环境中&lt;/p>
&lt;h4 id="configmap">ConfigMap&lt;/h4>
&lt;ul>
&lt;li>ConfigMapPropertySourceLocator#locate&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e5c07b">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">PropertySource&lt;/span> &lt;span style="color:#00b1f7">locate&lt;/span>(&lt;span style="color:#c1abea">Environment&lt;/span> &lt;span style="color:#c1abea">environment&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c678dd">if&lt;/span> (&lt;span style="color:#c1abea">environment&lt;/span> &lt;span style="color:#c678dd">instanceof&lt;/span> &lt;span style="color:#c1abea">ConfigurableEnvironment&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c1abea">ConfigurableEnvironment&lt;/span> &lt;span style="color:#c1abea">env&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> (&lt;span style="color:#c1abea">ConfigurableEnvironment&lt;/span>) &lt;span style="color:#c1abea">environment&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c1abea">List&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">ConfigMapConfigProperties&lt;/span>.&lt;span style="color:#b3d23c">NormalizedSource&lt;/span>&lt;span style="color:#c7bf54">&amp;gt;&lt;/span> &lt;span style="color:#c1abea">sources&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c678dd">this&lt;/span>.&lt;span style="color:#b3d23c">properties&lt;/span>.&lt;span style="color:#b3d23c">determineSources&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c1abea">CompositePropertySource&lt;/span> &lt;span style="color:#c1abea">composite&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">CompositePropertySource&lt;/span>(&lt;span style="color:#98c379">&amp;#34;composite-configmap&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c678dd">if&lt;/span> (&lt;span style="color:#c678dd">this&lt;/span>.&lt;span style="color:#b3d23c">properties&lt;/span>.&lt;span style="color:#b3d23c">isEnableApi&lt;/span>()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#c1abea">sources&lt;/span>.&lt;span style="color:#b3d23c">forEach&lt;/span>(&lt;span style="color:#c1abea">s&lt;/span> &lt;span style="color:#c7bf54">-&amp;gt;&lt;/span> &lt;span style="color:#c1abea">composite&lt;/span>.&lt;span style="color:#b3d23c">addFirstPropertySource&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>					&lt;span style="color:#c1abea">getMapPropertySourceForSingleConfigMap&lt;/span>(&lt;span style="color:#c1abea">env&lt;/span>, &lt;span style="color:#c1abea">s&lt;/span>)));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#8a93a5;font-style:italic">// 将配置添加的容器环境中&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c1abea">addPropertySourcesFromPaths&lt;/span>(&lt;span style="color:#c1abea">environment&lt;/span>, &lt;span style="color:#c1abea">composite&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c1abea">composite&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#b756ff;font-weight:bold">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>真正向 Kubernetes 发起请求的是通过调用 &lt;code>getMapPropertySourceForSingleConfigMap&lt;/code> 方法，创建&lt;code>ConfigMapPropertySource&lt;/code>实例的时候，会根据 &lt;code>getData&lt;/code> 方法，从 ConfigMap 获取属性解析并添加到环境中&lt;/p></description></item><item><title>Spring Cloud Consul 服务注册和发现</title><link>https://blog.hellowood.dev/posts/spring-cloud-consul-%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C%E5%92%8C%E5%8F%91%E7%8E%B0/</link><pubDate>Sun, 20 Sep 2020 22:27:16 +0000</pubDate><guid>https://blog.hellowood.dev/posts/spring-cloud-consul-%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C%E5%92%8C%E5%8F%91%E7%8E%B0/</guid><description>&lt;p>Spring Cloud Kubernetes 使用，可以通过引入 &lt;code>org.springframework.cloud:spring-cloud-starter-consul-discovery&lt;/code>，这个 starter 依赖于 &lt;code>org.springframework.cloud:spring-cloud-consul-core&lt;/code> 和 &lt;code>org.springframework.cloud:spring-cloud-consul-discovery&lt;/code>&lt;/p>
&lt;h2 id="consul-的核心概念">Consul 的核心概念&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>server
集群的核心节点，用于和 agent 通讯，保存服务的信息&lt;/p>
&lt;/li>
&lt;li>
&lt;p>agent
集群节点的守护进程，用于服务注册等行为，但不保存数据&lt;/p>
&lt;/li>
&lt;li>
&lt;p>catalog
集群服务通信的接口&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="初始化-kubernetes-client">初始化 Kubernetes Client&lt;/h2>
&lt;h3 id="初始化-consul-依赖">初始化 Consul 依赖&lt;/h3>
&lt;p>相关 Consul 核心依赖的初始化是通过 &lt;code>org.springframework.cloud.consul.ConsulAutoConfiguration&lt;/code>实现的&lt;/p>
&lt;ul>
&lt;li>初始化 ConsulClient&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e5c07b">@Bean&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e5c07b">@ConditionalOnMissingBean&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">ConsulClient&lt;/span> &lt;span style="color:#00b1f7">consulClient&lt;/span>(&lt;span style="color:#c1abea">ConsulProperties&lt;/span> &lt;span style="color:#c1abea">consulProperties&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c678dd">final&lt;/span> &lt;span style="color:#ef8383">int&lt;/span> &lt;span style="color:#c1abea">agentPort&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">consulProperties&lt;/span>.&lt;span style="color:#b3d23c">getPort&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c678dd">final&lt;/span> &lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">agentHost&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c7bf54">!&lt;/span>&lt;span style="color:#c1abea">StringUtils&lt;/span>.&lt;span style="color:#b3d23c">isEmpty&lt;/span>(&lt;span style="color:#c1abea">consulProperties&lt;/span>.&lt;span style="color:#b3d23c">getScheme&lt;/span>())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c7bf54">?&lt;/span> &lt;span style="color:#c1abea">consulProperties&lt;/span>.&lt;span style="color:#b3d23c">getScheme&lt;/span>() &lt;span style="color:#c7bf54">+&lt;/span> &lt;span style="color:#98c379">&amp;#34;://&amp;#34;&lt;/span> &lt;span style="color:#c7bf54">+&lt;/span> &lt;span style="color:#c1abea">consulProperties&lt;/span>.&lt;span style="color:#b3d23c">getHost&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			: &lt;span style="color:#c1abea">consulProperties&lt;/span>.&lt;span style="color:#b3d23c">getHost&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c678dd">if&lt;/span> (&lt;span style="color:#c1abea">consulProperties&lt;/span>.&lt;span style="color:#b3d23c">getTls&lt;/span>() &lt;span style="color:#c7bf54">!=&lt;/span> &lt;span style="color:#b756ff;font-weight:bold">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c1abea">ConsulProperties&lt;/span>.&lt;span style="color:#b3d23c">TLSConfig&lt;/span> &lt;span style="color:#c1abea">tls&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">consulProperties&lt;/span>.&lt;span style="color:#b3d23c">getTls&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c1abea">TLSConfig&lt;/span> &lt;span style="color:#c1abea">tlsConfig&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">TLSConfig&lt;/span>(&lt;span style="color:#c1abea">tls&lt;/span>.&lt;span style="color:#b3d23c">getKeyStoreInstanceType&lt;/span>(),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#c1abea">tls&lt;/span>.&lt;span style="color:#b3d23c">getCertificatePath&lt;/span>(), &lt;span style="color:#c1abea">tls&lt;/span>.&lt;span style="color:#b3d23c">getCertificatePassword&lt;/span>(),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#c1abea">tls&lt;/span>.&lt;span style="color:#b3d23c">getKeyStorePath&lt;/span>(), &lt;span style="color:#c1abea">tls&lt;/span>.&lt;span style="color:#b3d23c">getKeyStorePassword&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">ConsulClient&lt;/span>(&lt;span style="color:#c1abea">agentHost&lt;/span>, &lt;span style="color:#c1abea">agentPort&lt;/span>, &lt;span style="color:#c1abea">tlsConfig&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">ConsulClient&lt;/span>(&lt;span style="color:#c1abea">agentHost&lt;/span>, &lt;span style="color:#c1abea">agentPort&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="服务注册">服务注册&lt;/h2>
&lt;h3 id="初始化-bean">初始化 Bean&lt;/h3>
&lt;p>相关 Bean 的初始化是在 &lt;code>org.springframework.cloud.consul.serviceregistry.ConsulAutoServiceRegistrationAutoConfiguration&lt;/code> 中完成的&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8a93a5;font-style:italic">// 自动注册&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e5c07b">@Bean&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e5c07b">@ConditionalOnMissingBean&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">ConsulAutoServiceRegistration&lt;/span> &lt;span style="color:#00b1f7">consulAutoServiceRegistration&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c1abea">ConsulServiceRegistry&lt;/span> &lt;span style="color:#c1abea">registry&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c1abea">AutoServiceRegistrationProperties&lt;/span> &lt;span style="color:#c1abea">autoServiceRegistrationProperties&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c1abea">ConsulDiscoveryProperties&lt;/span> &lt;span style="color:#c1abea">properties&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c1abea">ConsulAutoRegistration&lt;/span> &lt;span style="color:#c1abea">consulRegistration&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">ConsulAutoServiceRegistration&lt;/span>(&lt;span style="color:#c1abea">registry&lt;/span>, &lt;span style="color:#c1abea">autoServiceRegistrationProperties&lt;/span>, &lt;span style="color:#c1abea">properties&lt;/span>, &lt;span style="color:#c1abea">consulRegistration&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#8a93a5;font-style:italic">// 启动事件监听器&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e5c07b">@Bean&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">ConsulAutoServiceRegistrationListener&lt;/span> &lt;span style="color:#00b1f7">consulAutoServiceRegistrationListener&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c1abea">ConsulAutoServiceRegistration&lt;/span> &lt;span style="color:#c1abea">registration&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">ConsulAutoServiceRegistrationListener&lt;/span>(&lt;span style="color:#c1abea">registration&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e5c07b">@Bean&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e5c07b">@ConditionalOnMissingBean&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">ConsulAutoRegistration&lt;/span> &lt;span style="color:#00b1f7">consulRegistration&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c1abea">AutoServiceRegistrationProperties&lt;/span> &lt;span style="color:#c1abea">autoServiceRegistrationProperties&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c1abea">ConsulDiscoveryProperties&lt;/span> &lt;span style="color:#c1abea">properties&lt;/span>, &lt;span style="color:#c1abea">ApplicationContext&lt;/span> &lt;span style="color:#c1abea">applicationContext&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c1abea">ObjectProvider&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">List&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">ConsulRegistrationCustomizer&lt;/span>&lt;span style="color:#c7bf54">&amp;gt;&amp;gt;&lt;/span> &lt;span style="color:#c1abea">registrationCustomizers&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c1abea">ObjectProvider&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">List&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">ConsulManagementRegistrationCustomizer&lt;/span>&lt;span style="color:#c7bf54">&amp;gt;&amp;gt;&lt;/span> &lt;span style="color:#c1abea">managementRegistrationCustomizers&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c1abea">HeartbeatProperties&lt;/span> &lt;span style="color:#c1abea">heartbeatProperties&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c1abea">ConsulAutoRegistration&lt;/span>.&lt;span style="color:#b3d23c">registration&lt;/span>(&lt;span style="color:#c1abea">autoServiceRegistrationProperties&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c1abea">properties&lt;/span>, &lt;span style="color:#c1abea">applicationContext&lt;/span>, &lt;span style="color:#c1abea">registrationCustomizers&lt;/span>.&lt;span style="color:#b3d23c">getIfAvailable&lt;/span>(),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c1abea">managementRegistrationCustomizers&lt;/span>.&lt;span style="color:#b3d23c">getIfAvailable&lt;/span>(), &lt;span style="color:#c1abea">heartbeatProperties&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="注册流程">注册流程&lt;/h3>
&lt;ul>
&lt;li>当监听到 &lt;code>WebServerInitializedEvent&lt;/code> 事件时触发注册&lt;/li>
&lt;/ul>
&lt;p>&lt;code>ConsulAutoServiceRegistrationListener&lt;/code> 类实现了 &lt;code>SmartApplicationListener&lt;/code>接口&lt;/p></description></item><item><title>Spring Cloud Kubernetes 服务注册和发现</title><link>https://blog.hellowood.dev/posts/spring-cloud-kubernetes-%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C%E5%92%8C%E5%8F%91%E7%8E%B0/</link><pubDate>Sun, 20 Sep 2020 22:26:03 +0000</pubDate><guid>https://blog.hellowood.dev/posts/spring-cloud-kubernetes-%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C%E5%92%8C%E5%8F%91%E7%8E%B0/</guid><description>&lt;p>Spring Cloud Kubernetes 使用，可以通过引入 &lt;code>org.springframework.cloud:spring-cloud-starter-kubernetes&lt;/code>，这个 starter 依赖于 &lt;code>org.springframework.cloud:spring-cloud-kubernetes-core&lt;/code> 和 &lt;code>org.springframework.cloud:spring-cloud-kubernetes-discovery&lt;/code>&lt;/p>
&lt;h2 id="初始化-kubernetes-client">初始化 Kubernetes Client&lt;/h2>
&lt;h3 id="初始化环境配置">初始化环境配置&lt;/h3>
&lt;p>环境初始化是通过 &lt;code>org.springframework.cloud.kubernetes.profile.KubernetesProfileEnvironmentPostProcessor&lt;/code>类实现的，当环境初始化完成时，会检查 Kubernetes 是否开启，如果开启则会判断 Profile 是否注入到容器中，没有时将会注入 Profile 到容器中&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e5c07b">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#ef8383">void&lt;/span> &lt;span style="color:#00b1f7">postProcessEnvironment&lt;/span>(&lt;span style="color:#c1abea">ConfigurableEnvironment&lt;/span> &lt;span style="color:#c1abea">environment&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	 &lt;span style="color:#c1abea">SpringApplication&lt;/span> &lt;span style="color:#c1abea">application&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#8a93a5;font-style:italic">// 判断是否启用 kubernetes，默认为 true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c678dd">final&lt;/span> &lt;span style="color:#ef8383">boolean&lt;/span> &lt;span style="color:#c1abea">kubernetesEnabled&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">environment&lt;/span>.&lt;span style="color:#b3d23c">getProperty&lt;/span>(&lt;span style="color:#98c379">&amp;#34;spring.cloud.kubernetes.enabled&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">Boolean&lt;/span>.&lt;span style="color:#b3d23c">class&lt;/span>, &lt;span style="color:#b756ff;font-weight:bold">true&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c678dd">if&lt;/span> (&lt;span style="color:#c7bf54">!&lt;/span>&lt;span style="color:#c1abea">kubernetesEnabled&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c678dd">return&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#8a93a5;font-style:italic">// 如果在 Kubernetes 中&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#c678dd">if&lt;/span> (&lt;span style="color:#c1abea">isInsideKubernetes&lt;/span>()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#8a93a5;font-style:italic">// 判断是否存在 Kubernetes 环境的配置，如果不存在，则添加到环境变量中&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#c678dd">if&lt;/span> (&lt;span style="color:#c1abea">hasKubernetesProfile&lt;/span>(&lt;span style="color:#c1abea">environment&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#8a93a5;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			} &lt;span style="color:#c678dd">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#c1abea">environment&lt;/span>.&lt;span style="color:#b3d23c">addActiveProfile&lt;/span>(&lt;span style="color:#c1abea">KUBERNETES_PROFILE&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		} &lt;span style="color:#c678dd">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#8a93a5;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="初始化-kubernetes-依赖">初始化 Kubernetes 依赖&lt;/h3>
&lt;p>相关 Kubernetes 核心依赖的初始化是通过 &lt;code>org.springframework.cloud.kubernetes.KubernetesAutoConfiguration&lt;/code>实现的&lt;/p></description></item><item><title>Spring Cloud Gateway 使用 Kubernetes 作为服务发现</title><link>https://blog.hellowood.dev/posts/spring-cloud-gateway-%E4%BD%BF%E7%94%A8-kubernetes-%E4%BD%9C%E4%B8%BA%E6%9C%8D%E5%8A%A1%E5%8F%91%E7%8E%B0/</link><pubDate>Sun, 20 Sep 2020 22:25:04 +0000</pubDate><guid>https://blog.hellowood.dev/posts/spring-cloud-gateway-%E4%BD%BF%E7%94%A8-kubernetes-%E4%BD%9C%E4%B8%BA%E6%9C%8D%E5%8A%A1%E5%8F%91%E7%8E%B0/</guid><description>&lt;p>Spring Cloud Gateway 作为网关，通过用于执行一些通用逻辑后做请求转发，后端可能涉及到多个服务，每个服务又有多个实例，调用服务实例就需要动态的更新，可以通过注册中心来实现，如果部署在K8S集群中，可以直接使用K8S实现服务发现&lt;/p>
&lt;h2 id="应用">应用&lt;/h2>
&lt;h3 id="gateway">Gateway&lt;/h3>
&lt;h4 id="添加依赖">添加依赖&lt;/h4>
&lt;ul>
&lt;li>build.gradle&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-groovy" data-lang="groovy">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">plugins&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">id&lt;/span> &lt;span style="color:#98c379">&amp;#39;org.springframework.boot&amp;#39;&lt;/span> &lt;span style="color:#c1abea">version&lt;/span> &lt;span style="color:#98c379">&amp;#39;2.2.6.RELEASE&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">id&lt;/span> &lt;span style="color:#98c379">&amp;#39;io.spring.dependency-management&amp;#39;&lt;/span> &lt;span style="color:#c1abea">version&lt;/span> &lt;span style="color:#98c379">&amp;#39;1.0.9.RELEASE&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">id&lt;/span> &lt;span style="color:#98c379">&amp;#39;java&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">ext&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">set&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;springCloudVersion&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">,&lt;/span> &lt;span style="color:#63c381">&amp;#34;Hoxton.SR1&amp;#34;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">set&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;springKubernetesVersion&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">,&lt;/span> &lt;span style="color:#63c381">&amp;#34;1.1.2.RELEASE&amp;#34;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">dependencies&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">implementation&lt;/span> &lt;span style="color:#98c379">&amp;#39;org.springframework.cloud:spring-cloud-starter-gateway&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">implementation&lt;/span> &lt;span style="color:#98c379">&amp;#39;org.springframework.cloud:spring-cloud-kubernetes-discovery&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">implementation&lt;/span> &lt;span style="color:#98c379">&amp;#39;org.springframework.boot:spring-boot-starter-actuator&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">testImplementation&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;org.springframework.boot:spring-boot-starter-test&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">exclude&lt;/span> &lt;span style="color:#f5a40d">group:&lt;/span> &lt;span style="color:#98c379">&amp;#39;org.junit.vintage&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">,&lt;/span> &lt;span style="color:#f5a40d">module:&lt;/span> &lt;span style="color:#98c379">&amp;#39;junit-vintage-engine&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">dependencyManagement&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">imports&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">mavenBom&lt;/span> &lt;span style="color:#63c381">&amp;#34;org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">mavenBom&lt;/span> &lt;span style="color:#63c381">&amp;#34;org.springframework.cloud:spring-cloud-kubernetes-dependencies:${springKubernetesVersion}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>如果是需要客户端实现负载均衡，依赖是&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-groovy" data-lang="groovy">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">implementation&lt;/span> &lt;span style="color:#98c379">&amp;#39;org.springframework.cloud:spring-cloud-starter-gateway&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">implementation&lt;/span> &lt;span style="color:#98c379">&amp;#39;org.springframework.cloud:spring-cloud-starter-kubernetes-all&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">implementation&lt;/span> &lt;span style="color:#98c379">&amp;#39;org.springframework.cloud:spring-cloud-starter-netflix-ribbon&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="添加路由配置">添加路由配置&lt;/h4>
&lt;ul>
&lt;li>bootstrap.yaml&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">spring&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">cloud&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">kubernetes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">discovery&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">catalogServicesWatchDelay&lt;/span>: &lt;span style="color:#d19a66">5000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">client&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">master-url&lt;/span>: &lt;span style="color:#98c379">https://kubernetes.docker.internal:6443&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">ca-cert-data&lt;/span>: &lt;span style="color:#98c379">xxx&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">namespace&lt;/span>: &lt;span style="color:#98c379">default&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>applicaiton.yaml&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">spring&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">application.name&lt;/span>: &lt;span style="color:#98c379">gateway&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">cloud&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">gateway&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">discovery&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">locator&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">enabled&lt;/span>: &lt;span style="color:#b756ff;font-weight:bold">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">url-expression&lt;/span>: &lt;span style="color:#63c381">&amp;#34;&amp;#39;http://&amp;#39;+serviceId+&amp;#39;:&amp;#39;+port&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">lower-case-service-id&lt;/span>: &lt;span style="color:#b756ff;font-weight:bold">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">management&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">endpoints&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">web&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">exposure&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">include&lt;/span>: &lt;span style="color:#63c381">&amp;#34;*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>配置 &lt;code>url-expression&lt;/code> 目的是为了在转发的时候直接转发到 Kubernetes 中相应的 Service 上去，默认的表达式为 &lt;code>&amp;quot;'lb://'+serviceId&amp;quot;&lt;/code>，这种适用于通过 Consul 或者 Eureka，最终是根据服务的IP和端口访问，&lt;code>spring-cloud-kubernetes&lt;/code>没有实现&lt;code>com.netflix.loadbalancer.AbstractServerList&lt;/code>，所以不会进行IP转换，最终是通过服务名称查找Service 实现调用，所以不需要负载均衡&lt;/p></description></item><item><title>Spring Cloud Gateway 使用 Kubernetes 实现负载均衡</title><link>https://blog.hellowood.dev/posts/spring-cloud-gateway-%E4%BD%BF%E7%94%A8-kubernetes-%E5%AE%9E%E7%8E%B0%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/</link><pubDate>Sun, 20 Sep 2020 22:23:18 +0000</pubDate><guid>https://blog.hellowood.dev/posts/spring-cloud-gateway-%E4%BD%BF%E7%94%A8-kubernetes-%E5%AE%9E%E7%8E%B0%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/</guid><description>&lt;p>在使用 Spring Cloud Gateway 作为服务服务发现时，可能会遇到 Gateway 并没有部署在服务所在的 Kubernetes 集群中，或者存在网络隔离，无法直接通过 Service Name 访问到相应的服务，这时候就需要通过 Service 的 IP 访问，但是，&lt;code>spring-cloud-kubernetes-discovery &lt;/code>没有像 &lt;code>spring-cloud-consul-discovery&lt;/code>一样实现服务负载均衡的接口，所以默认只会访问某个服务固定的 IP；这样就需要使用负载均衡的依赖&lt;/p>
&lt;h3 id="添加依赖">添加依赖&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-groovy" data-lang="groovy">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">implementation&lt;/span> &lt;span style="color:#98c379">&amp;#39;org.springframework.cloud:spring-cloud-starter-gateway&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">implementation&lt;/span> &lt;span style="color:#98c379">&amp;#39;org.springframework.cloud:spring-cloud-starter-kubernetes-all&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">implementation&lt;/span> &lt;span style="color:#98c379">&amp;#39;org.springframework.cloud:spring-cloud-starter-netflix-ribbon&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>spring-cloud-starter-kubernetes-all&lt;/code>包含 Kubernetes 负载均衡的实现&lt;/p>
&lt;h3 id="添加配置">添加配置&lt;/h3>
&lt;ul>
&lt;li>bootstrap.yaml&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">spring&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">cloud&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">kubernetes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">discovery&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">catalogServicesWatchDelay&lt;/span>: &lt;span style="color:#d19a66">5000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">client&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">master-url&lt;/span>: &lt;span style="color:#98c379">https://localhost:60002&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">ca-cert-data&lt;/span>: &lt;span style="color:#98c379">xxxx&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">namespace&lt;/span>: &lt;span style="color:#98c379">develop&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>applicaiton.yaml&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">spring&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">application&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">name&lt;/span>: &lt;span style="color:#98c379">gateway&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">cloud&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">gateway&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">discovery&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">locator&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">enabled&lt;/span>: &lt;span style="color:#b756ff;font-weight:bold">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">lower-case-service-id&lt;/span>: &lt;span style="color:#b756ff;font-weight:bold">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">management&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">endpoints&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">web&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">exposure&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">include&lt;/span>: &lt;span style="color:#63c381">&amp;#34;*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Spring Boot 中使用Spring Cloud Stream</title><link>https://blog.hellowood.dev/posts/spring-boot-%E4%B8%AD%E4%BD%BF%E7%94%A8spring-cloud-stream/</link><pubDate>Sun, 08 Sep 2019 18:50:09 +0000</pubDate><guid>https://blog.hellowood.dev/posts/spring-boot-%E4%B8%AD%E4%BD%BF%E7%94%A8spring-cloud-stream/</guid><description>&lt;blockquote>
&lt;p>&lt;a href="https://spring.io/projects/spring-cloud-stream">Spring Cloud Stream&lt;/a> 用于构建高可扩展的使用消息系统连接的事件驱动服务的框架&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>Binder: 负责提供与外部消息系统集成的组件&lt;/li>
&lt;li>Binding: 提供外部消息系统与应用之间桥接的生产者和消费者&lt;/li>
&lt;li>Message: 生产者和消费者与外部消息系统之间通信的数据结构&lt;/li>
&lt;/ul>
&lt;h2 id="构建应用">构建应用&lt;/h2>
&lt;p>假设一个点咖啡场景：调用下单接口后，需要通知店员制作咖啡，待制作完成后，需要更新订单状态为完成，并通知客户；假设有两个服务，一个是订单服务(Order Service)，一个是店员服务(Waiter Service)&lt;/p>
&lt;p>使用 RabbitMQ 作为MQ 服务&lt;/p>
&lt;h3 id="order-service">Order Service&lt;/h3>
&lt;h5 id="添加依赖">添加依赖&lt;/h5>
&lt;ul>
&lt;li>build.gradle&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-gradle" data-lang="gradle">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">dependencies&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">implementation&lt;/span> &lt;span style="color:#98c379">&amp;#39;org.springframework.boot:spring-boot-starter-web&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">implementation&lt;/span> &lt;span style="color:#98c379">&amp;#39;org.springframework.cloud:spring-cloud-stream-binder-rabbit&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">compileOnly&lt;/span> &lt;span style="color:#98c379">&amp;#39;org.projectlombok:lombok&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">annotationProcessor&lt;/span> &lt;span style="color:#98c379">&amp;#39;org.projectlombok:lombok&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">testImplementation&lt;/span> &lt;span style="color:#98c379">&amp;#39;org.springframework.boot:spring-boot-starter-test&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">testImplementation&lt;/span> &lt;span style="color:#98c379">&amp;#39;org.springframework.cloud:spring-cloud-stream-test-support&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h5 id="添加配置">添加配置&lt;/h5>
&lt;ul>
&lt;li>application.properties&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-properties" data-lang="properties">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.application.name&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">producer&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">server.port&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">8082&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.rabbitmq.host&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">localhost&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.rabbitmq.port&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">5672&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.rabbitmq.username&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">guest&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.rabbitmq.password&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">guest&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h5 id="binding">Binding&lt;/h5>
&lt;ul>
&lt;li>OrderBinding&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c678dd">interface&lt;/span> &lt;span style="color:#76a9f9">OrderBinding&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">NEW_ORDERS&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;newOrders&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">FINISHED_ORDERS&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;finishedOrders&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Input&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">SubscribableChannel&lt;/span> &lt;span style="color:#00b1f7">finishedOrders&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Output&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">MessageChannel&lt;/span> &lt;span style="color:#00b1f7">newOrders&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>@Input&lt;/code>用于指定订阅消息Topic，当有该 Topic 的消息时会调用监听该消息的处理器
&lt;code>@Output&lt;/code>用于指定发送消息Topic，可以通过该MessageChannel发送消息&lt;/p>
&lt;h5 id="发送消息">发送消息&lt;/h5>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">@RestController&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c678dd">class&lt;/span> &lt;span style="color:#76a9f9">OrderController&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Autowired&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">private&lt;/span> &lt;span style="color:#c1abea">OrderBinding&lt;/span> &lt;span style="color:#c1abea">orderBinding&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@GetMapping&lt;/span>(&lt;span style="color:#98c379">&amp;#34;/newOrder&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">Object&lt;/span> &lt;span style="color:#00b1f7">sendMessage&lt;/span>(&lt;span style="color:#c1abea">Long&lt;/span> &lt;span style="color:#c1abea">orderId&lt;/span>, &lt;span style="color:#c1abea">Long&lt;/span> &lt;span style="color:#c1abea">userId&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">OrderVO&lt;/span> &lt;span style="color:#c1abea">orderVO&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">OrderVO&lt;/span>.&lt;span style="color:#b3d23c">builder&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#b3d23c">orderId&lt;/span>(&lt;span style="color:#c1abea">orderId&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#b3d23c">userId&lt;/span>(&lt;span style="color:#c1abea">userId&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#b3d23c">build&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ef8383">boolean&lt;/span> &lt;span style="color:#c1abea">result&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">orderBinding&lt;/span>.&lt;span style="color:#b3d23c">newOrders&lt;/span>().&lt;span style="color:#b3d23c">send&lt;/span>(&lt;span style="color:#c1abea">MessageBuilder&lt;/span>.&lt;span style="color:#b3d23c">withPayload&lt;/span>(&lt;span style="color:#c1abea">orderVO&lt;/span>).&lt;span style="color:#b3d23c">build&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">HashMap&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">String&lt;/span>, &lt;span style="color:#c1abea">String&lt;/span>&lt;span style="color:#c7bf54">&amp;gt;&lt;/span>() {{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">put&lt;/span>(&lt;span style="color:#98c379">&amp;#34;message&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">result&lt;/span> &lt;span style="color:#c7bf54">?&lt;/span> &lt;span style="color:#98c379">&amp;#34;下单成功&amp;#34;&lt;/span> : &lt;span style="color:#98c379">&amp;#34;下单失败&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>发送消息可以通过注入 Binding 对象，或者注入 &lt;code>MessageChannel&lt;/code>对象时指定 Bean 来实现&lt;/p></description></item><item><title>Spring Boot 中使用 WebSocket</title><link>https://blog.hellowood.dev/posts/spring-boot-%E4%B8%AD%E4%BD%BF%E7%94%A8-websocket/</link><pubDate>Sun, 08 Sep 2019 18:48:25 +0000</pubDate><guid>https://blog.hellowood.dev/posts/spring-boot-%E4%B8%AD%E4%BD%BF%E7%94%A8-websocket/</guid><description>&lt;blockquote>
&lt;p>WebSocket 是一种长连接技术，可以实现服务端和客户端的双向通信，服务端可以主动推送信息给客户端&lt;/p>
&lt;/blockquote>
&lt;h2 id="构建应用">构建应用&lt;/h2>
&lt;h3 id="添加依赖">添加依赖&lt;/h3>
&lt;ul>
&lt;li>build.gradle&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-gradle" data-lang="gradle">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">dependencies&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">compile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#63c381">&amp;#34;org.springframework.boot:spring-boot-starter-websocket&amp;#34;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">compile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#63c381">&amp;#34;org.webjars:webjars-locator-core&amp;#34;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">compile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#63c381">&amp;#34;org.webjars:sockjs-client:1.0.2&amp;#34;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">compile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#63c381">&amp;#34;org.webjars:stomp-websocket:2.3.3&amp;#34;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">compile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#63c381">&amp;#34;org.webjars:bootstrap:3.3.7&amp;#34;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">compile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#63c381">&amp;#34;org.webjars:jquery:3.1.0&amp;#34;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">testCompile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#63c381">&amp;#34;org.springframework.boot:spring-boot-starter-test&amp;#34;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="配置">配置&lt;/h3>
&lt;ul>
&lt;li>WebSocketConfig.java&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">@Configuration&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">@EnableWebSocketMessageBroker&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c678dd">class&lt;/span> &lt;span style="color:#76a9f9">WebSocketConfig&lt;/span> &lt;span style="color:#c678dd">implements&lt;/span> &lt;span style="color:#c1abea">WebSocketMessageBrokerConfigurer&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#ef8383">void&lt;/span> &lt;span style="color:#00b1f7">configureMessageBroker&lt;/span>(&lt;span style="color:#c1abea">MessageBrokerRegistry&lt;/span> &lt;span style="color:#c1abea">registry&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">registry&lt;/span>.&lt;span style="color:#b3d23c">enableSimpleBroker&lt;/span>(&lt;span style="color:#98c379">&amp;#34;/topic&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">registry&lt;/span>.&lt;span style="color:#b3d23c">setApplicationDestinationPrefixes&lt;/span>(&lt;span style="color:#98c379">&amp;#34;/app&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#ef8383">void&lt;/span> &lt;span style="color:#00b1f7">registerStompEndpoints&lt;/span>(&lt;span style="color:#c1abea">StompEndpointRegistry&lt;/span> &lt;span style="color:#c1abea">registry&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">registry&lt;/span>.&lt;span style="color:#b3d23c">addEndpoint&lt;/span>(&lt;span style="color:#98c379">&amp;#34;/socket&amp;#34;&lt;/span>).&lt;span style="color:#b3d23c">withSockJS&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>其中&lt;code>/topic&lt;/code> 是用于推送给客户端的消息路径前缀；&lt;code>/app&lt;/code>是用于请求服务端的消息路径前缀， &lt;code>/socket&lt;/code>用于客户端建立连接&lt;/p>
&lt;p>SockJS用于提供浏览器兼容性，当浏览器不支持 WebSocket 时，就会尝试降级为HTTP流或者长轮询的方式以实现和 WebSocket 相同的效果，参考 &lt;a href="https://docs.spring.io/spring/docs/5.1.8.RELEASE/spring-framework-reference/web.html#websocket-fallback">4.3. SockJS Fallback&lt;/a>&lt;/p>
&lt;h3 id="群发消息">群发消息&lt;/h3>
&lt;p>群发消息可以将消息发送给所有订阅了该消息的客户端，可以通过 &lt;code>@SendTo&lt;/code>或&lt;code>org.springframework.messaging.simp.SimpMessagingTemplate#convertAndSend&lt;/code>发送&lt;/p>
&lt;h4 id="服务端">服务端&lt;/h4>
&lt;ul>
&lt;li>通过注解实现&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@MessageMapping&lt;/span>(&lt;span style="color:#98c379">&amp;#34;/message/broadcast&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@SendTo&lt;/span>(&lt;span style="color:#98c379">&amp;#34;/response/message&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">Message&lt;/span> &lt;span style="color:#00b1f7">broadcastMessage&lt;/span>(&lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">title&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">log&lt;/span>.&lt;span style="color:#b3d23c">info&lt;/span>(&lt;span style="color:#98c379">&amp;#34;Receive new broadcast message from socket, title is :&amp;#34;&lt;/span> &lt;span style="color:#c7bf54">+&lt;/span> &lt;span style="color:#c1abea">title&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c1abea">Message&lt;/span>.&lt;span style="color:#b3d23c">builder&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#b3d23c">title&lt;/span>(&lt;span style="color:#c1abea">title&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#b3d23c">content&lt;/span>(&lt;span style="color:#98c379">&amp;#34;Socket Broadcast:&amp;#34;&lt;/span> &lt;span style="color:#c7bf54">+&lt;/span> &lt;span style="color:#c1abea">title&lt;/span> &lt;span style="color:#c7bf54">+&lt;/span> &lt;span style="color:#98c379">&amp;#34; content!&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#b3d23c">createTime&lt;/span>(&lt;span style="color:#c1abea">LocalDateTime&lt;/span>.&lt;span style="color:#b3d23c">now&lt;/span>())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#b3d23c">build&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>通过 REST接口调用方法实现&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Autowired&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">private&lt;/span> &lt;span style="color:#c1abea">SimpMessagingTemplate&lt;/span> &lt;span style="color:#c1abea">simpMessagingTemplate&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@GetMapping&lt;/span>(&lt;span style="color:#98c379">&amp;#34;/message/broadcast&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@ResponseBody&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#ef8383">void&lt;/span> &lt;span style="color:#00b1f7">sendBroadcastMessage&lt;/span>(&lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">title&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">log&lt;/span>.&lt;span style="color:#b3d23c">info&lt;/span>(&lt;span style="color:#98c379">&amp;#34;Receive new broadcast message from REST interface, title is :&amp;#34;&lt;/span> &lt;span style="color:#c7bf54">+&lt;/span> &lt;span style="color:#c1abea">title&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">Message&lt;/span> &lt;span style="color:#c1abea">message&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">Message&lt;/span>.&lt;span style="color:#b3d23c">builder&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#b3d23c">title&lt;/span>(&lt;span style="color:#c1abea">title&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#b3d23c">content&lt;/span>(&lt;span style="color:#98c379">&amp;#34;REST Broadcast:&amp;#34;&lt;/span> &lt;span style="color:#c7bf54">+&lt;/span> &lt;span style="color:#c1abea">title&lt;/span> &lt;span style="color:#c7bf54">+&lt;/span> &lt;span style="color:#98c379">&amp;#34; content!&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#b3d23c">createTime&lt;/span>(&lt;span style="color:#c1abea">LocalDateTime&lt;/span>.&lt;span style="color:#b3d23c">now&lt;/span>())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#b3d23c">build&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">simpMessagingTemplate&lt;/span>.&lt;span style="color:#b3d23c">convertAndSend&lt;/span>(&lt;span style="color:#98c379">&amp;#34;/response/message&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">message&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="客户端">客户端&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">function&lt;/span> &lt;span style="color:#c1abea">connect&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">var&lt;/span> &lt;span style="color:#c1abea">socket&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">SockJS&lt;/span>(&lt;span style="color:#63c381">&amp;#34;/socket&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">stompClient&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">Stomp&lt;/span>.&lt;span style="color:#c1abea">over&lt;/span>(&lt;span style="color:#c1abea">socket&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">stompClient&lt;/span>.&lt;span style="color:#c1abea">connect&lt;/span>({}, &lt;span style="color:#c678dd">function&lt;/span> (&lt;span style="color:#c1abea">frame&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">stompClient&lt;/span>.&lt;span style="color:#c1abea">subscribe&lt;/span>(&lt;span style="color:#63c381">&amp;#34;/response/message&amp;#34;&lt;/span>, &lt;span style="color:#c678dd">function&lt;/span> (&lt;span style="color:#c1abea">message&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">console&lt;/span>.&lt;span style="color:#c1abea">log&lt;/span>(&lt;span style="color:#63c381">&amp;#34;Receive message from server:&amp;#34;&lt;/span> &lt;span style="color:#c7bf54">+&lt;/span> &lt;span style="color:#c1abea">message&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">function&lt;/span> &lt;span style="color:#c1abea">sendMessage&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">stompClient&lt;/span>.&lt;span style="color:#c1abea">send&lt;/span>(&lt;span style="color:#63c381">&amp;#34;/request/message/broadcast&amp;#34;&lt;/span>, {}, &lt;span style="color:#63c381">&amp;#34;Message&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="测试">测试&lt;/h4>
&lt;ul>
&lt;li>启动应用，用两个不同的浏览器访问 &lt;a href="localhost:8080">localhost:8080&lt;/a>&lt;/li>
&lt;li>广播消息建立连接，并发送消息，此时可以看到两个浏览器都收到了刚才发送的消息&lt;/li>
&lt;li>通过 REST 接口：&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>curl &lt;span style="color:#98c379">&amp;#39;localhost:8080/message/broadcast?title=hello&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="发送给指定客户端">发送给指定客户端&lt;/h3>
&lt;p>群发消息可以将消息发送给所有订阅了该消息的客户端，可以通过 &lt;code>@SendToUser&lt;/code>或&lt;code>org.springframework.messaging.simp.SimpMessagingTemplate#convertAndSendToUser&lt;/code>发送&lt;/p></description></item><item><title>Spring Boot 中自定义异常处理</title><link>https://blog.hellowood.dev/posts/spring-boot-%E4%B8%AD%E8%87%AA%E5%AE%9A%E4%B9%89%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/</link><pubDate>Sun, 08 Sep 2019 18:47:12 +0000</pubDate><guid>https://blog.hellowood.dev/posts/spring-boot-%E4%B8%AD%E8%87%AA%E5%AE%9A%E4%B9%89%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/</guid><description>&lt;ul>
&lt;li>项目地址&lt;a href="https://github.com/helloworlde/SpringBootCollection/tree/master/SpringBoot-Exception">https://github.com/helloworlde/SpringBootCollection/tree/master/SpringBoot-Exception&lt;/a>&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>Spring Boot 中提供了默认的异常处理，但是对于应用来说，这些信息并不应该直接返回或者不够明确，需要结合自己的情况进行定制
自定义处理异常有两种方式:&lt;/p>
&lt;ul>
&lt;li>&lt;code>org.springframework.web.servlet.HandlerExceptionResolver#resolveException&lt;/code>方法&lt;/li>
&lt;li>&lt;code>org.springframework.web.bind.annotation.RestControllerAdvice&lt;/code>或&lt;code>org.springframework.web.bind.annotation.ControllerAdvice&lt;/code>和&lt;code>org.springframework.web.bind.annotation.ExceptionHandler&lt;/code>注解来实现&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;blockquote>
&lt;p>当两种方式都实现时，&lt;code>HandlerExceptionResolver&lt;/code>要先于&lt;code>ControllerAdvice&lt;/code>执行&lt;/p>
&lt;/blockquote>
&lt;h2 id="使用-handlerexceptionresolver-处理异常">使用 HandlerExceptionResolver 处理异常&lt;/h2>
&lt;ul>
&lt;li>CustomExceptionHandlerResolver.java&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c678dd">class&lt;/span> &lt;span style="color:#76a9f9">CustomExceptionHandlerResolver&lt;/span> &lt;span style="color:#c678dd">implements&lt;/span> &lt;span style="color:#c1abea">HandlerExceptionResolver&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">private&lt;/span> &lt;span style="color:#c678dd">static&lt;/span> &lt;span style="color:#c678dd">final&lt;/span> &lt;span style="color:#c1abea">ObjectMapper&lt;/span> &lt;span style="color:#c1abea">OBJECT_MAPPER&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">static&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">OBJECT_MAPPER&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">ObjectMapper&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">OBJECT_MAPPER&lt;/span>.&lt;span style="color:#b3d23c">configure&lt;/span>(&lt;span style="color:#c1abea">JsonParser&lt;/span>.&lt;span style="color:#b3d23c">Feature&lt;/span>.&lt;span style="color:#b3d23c">ALLOW_SINGLE_QUOTES&lt;/span>, &lt;span style="color:#b756ff;font-weight:bold">true&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">OBJECT_MAPPER&lt;/span>.&lt;span style="color:#b3d23c">configure&lt;/span>(&lt;span style="color:#c1abea">JsonParser&lt;/span>.&lt;span style="color:#b3d23c">Feature&lt;/span>.&lt;span style="color:#b3d23c">ALLOW_UNQUOTED_FIELD_NAMES&lt;/span>, &lt;span style="color:#b756ff;font-weight:bold">true&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">OBJECT_MAPPER&lt;/span>.&lt;span style="color:#b3d23c">setDateFormat&lt;/span>(&lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">SimpleDateFormat&lt;/span>(&lt;span style="color:#98c379">&amp;#34;yyyy-MM-dd HH:mm:ss&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">ModelAndView&lt;/span> &lt;span style="color:#00b1f7">resolveException&lt;/span>(&lt;span style="color:#c1abea">HttpServletRequest&lt;/span> &lt;span style="color:#c1abea">httpServletRequest&lt;/span>, &lt;span style="color:#c1abea">HttpServletResponse&lt;/span> &lt;span style="color:#c1abea">httpServletResponse&lt;/span>, &lt;span style="color:#c1abea">Object&lt;/span> &lt;span style="color:#c1abea">o&lt;/span>, &lt;span style="color:#c1abea">Exception&lt;/span> &lt;span style="color:#c1abea">e&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">message&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;服务器错误&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">if&lt;/span> (&lt;span style="color:#c1abea">o&lt;/span> &lt;span style="color:#c678dd">instanceof&lt;/span> &lt;span style="color:#c1abea">HandlerMethod&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">if&lt;/span> (&lt;span style="color:#c1abea">e&lt;/span> &lt;span style="color:#c678dd">instanceof&lt;/span> &lt;span style="color:#c1abea">IllegalArgumentException&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">message&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;参数错误&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#c678dd">else&lt;/span> &lt;span style="color:#c678dd">if&lt;/span> (&lt;span style="color:#c1abea">e&lt;/span> &lt;span style="color:#c678dd">instanceof&lt;/span> &lt;span style="color:#c1abea">SecurityException&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">message&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;不允许访问&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#c678dd">else&lt;/span> &lt;span style="color:#c678dd">if&lt;/span> (&lt;span style="color:#c1abea">e&lt;/span> &lt;span style="color:#c678dd">instanceof&lt;/span> &lt;span style="color:#c1abea">NullPointerException&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">message&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;空指针异常&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#c678dd">else&lt;/span> &lt;span style="color:#c678dd">if&lt;/span> (&lt;span style="color:#c1abea">e&lt;/span> &lt;span style="color:#c678dd">instanceof&lt;/span> &lt;span style="color:#c1abea">NoHandlerFoundException&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">message&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;未找到相应资源&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#c678dd">else&lt;/span> &lt;span style="color:#c678dd">if&lt;/span> (&lt;span style="color:#c1abea">e&lt;/span> &lt;span style="color:#c678dd">instanceof&lt;/span> &lt;span style="color:#c1abea">HttpMediaTypeNotSupportedException&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">message&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;请求类型不支持&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">httpServletResponse&lt;/span>.&lt;span style="color:#b3d23c">setCharacterEncoding&lt;/span>(&lt;span style="color:#c1abea">StandardCharsets&lt;/span>.&lt;span style="color:#b3d23c">UTF_8&lt;/span>.&lt;span style="color:#b3d23c">name&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">httpServletResponse&lt;/span>.&lt;span style="color:#b3d23c">setContentType&lt;/span>(&lt;span style="color:#c1abea">MediaType&lt;/span>.&lt;span style="color:#b3d23c">APPLICATION_JSON_UTF8_VALUE&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">httpServletResponse&lt;/span>.&lt;span style="color:#b3d23c">getWriter&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#b3d23c">write&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">OBJECT_MAPPER&lt;/span>.&lt;span style="color:#b3d23c">writeValueAsString&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">CustomResponseContent&lt;/span>.&lt;span style="color:#b3d23c">builder&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#b3d23c">code&lt;/span>(&lt;span style="color:#c1abea">500&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#b3d23c">status&lt;/span>(&lt;span style="color:#98c379">&amp;#34;fail&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#b3d23c">message&lt;/span>(&lt;span style="color:#c1abea">message&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#b3d23c">build&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#c678dd">catch&lt;/span> (&lt;span style="color:#c1abea">IOException&lt;/span> &lt;span style="color:#c1abea">ex&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">ex&lt;/span>.&lt;span style="color:#b3d23c">printStackTrace&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">ModelAndView&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>还需要将该配置添加到应用中&lt;/p></description></item><item><title>Spring Boot 中自定义接口返回格式</title><link>https://blog.hellowood.dev/posts/spring-boot-%E4%B8%AD%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A5%E5%8F%A3%E8%BF%94%E5%9B%9E%E6%A0%BC%E5%BC%8F/</link><pubDate>Sun, 08 Sep 2019 18:45:24 +0000</pubDate><guid>https://blog.hellowood.dev/posts/spring-boot-%E4%B8%AD%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A5%E5%8F%A3%E8%BF%94%E5%9B%9E%E6%A0%BC%E5%BC%8F/</guid><description>&lt;blockquote>
&lt;p>Spring Boot 项目中提供的 REST 接口往往需要封装状态或者其他附加的内容返回给客户端，如果每个接口都用一些工具类来处理很繁琐，会增加很多重复代码，还有可能漏掉导致客户端无法解析；用切面也可以实现，但是 SpringBoot 提供了处理的接口&lt;/p>
&lt;/blockquote>
&lt;h3 id="项目地址">项目地址&lt;/h3>
&lt;p>&lt;a href="https://github.com/helloworlde/SpringBootCollection/tree/master/SpringBoot-CustomResponse">https://github.com/helloworlde/SpringBootCollection/tree/master/SpringBoot-CustomResponse&lt;/a>&lt;/p>
&lt;h3 id="添加自定义注解">添加自定义注解&lt;/h3>
&lt;ul>
&lt;li>CustomResponse.java&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">java.lang.annotation.*&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">@Target&lt;/span>(&lt;span style="color:#c1abea">ElementType&lt;/span>.&lt;span style="color:#b3d23c">METHOD&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">@Retention&lt;/span>(&lt;span style="color:#c1abea">RetentionPolicy&lt;/span>.&lt;span style="color:#b3d23c">RUNTIME&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">@Documented&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#e5c07b">@interface&lt;/span> &lt;span style="color:#c1abea">CustomResponse&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="消息内容">消息内容&lt;/h3>
&lt;p>封装返回内容的实体&lt;/p>
&lt;ul>
&lt;li>CustomResponseContent.java&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">@Data&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">@Builder&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">@NoArgsConstructor&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">@AllArgsConstructor&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c678dd">class&lt;/span> &lt;span style="color:#76a9f9">CustomResponseContent&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">private&lt;/span> &lt;span style="color:#c1abea">Integer&lt;/span> &lt;span style="color:#c1abea">code&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">private&lt;/span> &lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">status&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">private&lt;/span> &lt;span style="color:#c1abea">Object&lt;/span> &lt;span style="color:#c1abea">data&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">private&lt;/span> &lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">message&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="返回内容处理器">返回内容处理器&lt;/h3>
&lt;p>用于封装返回内容&lt;/p>
&lt;ul>
&lt;li>CustomResponseReturnValueHandler.java&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c678dd">class&lt;/span> &lt;span style="color:#76a9f9">CustomResponseReturnValueHandler&lt;/span> &lt;span style="color:#c678dd">implements&lt;/span> &lt;span style="color:#c1abea">HandlerMethodReturnValueHandler&lt;/span>, &lt;span style="color:#c1abea">AsyncHandlerMethodReturnValueHandler&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">private&lt;/span> &lt;span style="color:#c678dd">static&lt;/span> &lt;span style="color:#c678dd">final&lt;/span> &lt;span style="color:#c1abea">ObjectMapper&lt;/span> &lt;span style="color:#c1abea">objectMapper&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">static&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">objectMapper&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">ObjectMapper&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">objectMapper&lt;/span>.&lt;span style="color:#b3d23c">configure&lt;/span>(&lt;span style="color:#c1abea">JsonParser&lt;/span>.&lt;span style="color:#b3d23c">Feature&lt;/span>.&lt;span style="color:#b3d23c">ALLOW_SINGLE_QUOTES&lt;/span>, &lt;span style="color:#b756ff;font-weight:bold">true&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">objectMapper&lt;/span>.&lt;span style="color:#b3d23c">configure&lt;/span>(&lt;span style="color:#c1abea">JsonParser&lt;/span>.&lt;span style="color:#b3d23c">Feature&lt;/span>.&lt;span style="color:#b3d23c">ALLOW_UNQUOTED_FIELD_NAMES&lt;/span>, &lt;span style="color:#b756ff;font-weight:bold">true&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">objectMapper&lt;/span>.&lt;span style="color:#b3d23c">setDateFormat&lt;/span>(&lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">SimpleDateFormat&lt;/span>(&lt;span style="color:#98c379">&amp;#34;yyyy-MM-dd HH:mm:ss&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#ef8383">boolean&lt;/span> &lt;span style="color:#00b1f7">isAsyncReturnValue&lt;/span>(&lt;span style="color:#c1abea">Object&lt;/span> &lt;span style="color:#c1abea">o&lt;/span>, &lt;span style="color:#c1abea">MethodParameter&lt;/span> &lt;span style="color:#c1abea">methodParameter&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c1abea">supportsReturnType&lt;/span>(&lt;span style="color:#c1abea">methodParameter&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#ef8383">boolean&lt;/span> &lt;span style="color:#00b1f7">supportsReturnType&lt;/span>(&lt;span style="color:#c1abea">MethodParameter&lt;/span> &lt;span style="color:#c1abea">methodParameter&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c1abea">methodParameter&lt;/span>.&lt;span style="color:#b3d23c">getAnnotatedElement&lt;/span>().&lt;span style="color:#b3d23c">getAnnotation&lt;/span>(&lt;span style="color:#c1abea">CustomResponse&lt;/span>.&lt;span style="color:#b3d23c">class&lt;/span>) &lt;span style="color:#c7bf54">!=&lt;/span> &lt;span style="color:#b756ff;font-weight:bold">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#ef8383">void&lt;/span> &lt;span style="color:#00b1f7">handleReturnValue&lt;/span>(&lt;span style="color:#c1abea">Object&lt;/span> &lt;span style="color:#c1abea">data&lt;/span>, &lt;span style="color:#c1abea">MethodParameter&lt;/span> &lt;span style="color:#c1abea">methodParameter&lt;/span>, &lt;span style="color:#c1abea">ModelAndViewContainer&lt;/span> &lt;span style="color:#c1abea">modelAndViewContainer&lt;/span>, &lt;span style="color:#c1abea">NativeWebRequest&lt;/span> &lt;span style="color:#c1abea">nativeWebRequest&lt;/span>) &lt;span style="color:#c678dd">throws&lt;/span> &lt;span style="color:#c1abea">Exception&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">modelAndViewContainer&lt;/span>.&lt;span style="color:#b3d23c">setRequestHandled&lt;/span>(&lt;span style="color:#b756ff;font-weight:bold">true&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">HttpServletResponse&lt;/span> &lt;span style="color:#c1abea">response&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">nativeWebRequest&lt;/span>.&lt;span style="color:#b3d23c">getNativeResponse&lt;/span>(&lt;span style="color:#c1abea">HttpServletResponse&lt;/span>.&lt;span style="color:#b3d23c">class&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">response&lt;/span>.&lt;span style="color:#b3d23c">setContentType&lt;/span>(&lt;span style="color:#c1abea">MediaType&lt;/span>.&lt;span style="color:#b3d23c">APPLICATION_JSON_UTF8_VALUE&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">message&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;操作成功&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">status&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;success&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">if&lt;/span> ((&lt;span style="color:#c1abea">data&lt;/span> &lt;span style="color:#c678dd">instanceof&lt;/span> &lt;span style="color:#c1abea">Boolean&lt;/span>) &lt;span style="color:#c7bf54">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#c7bf54">!&lt;/span>((&lt;span style="color:#c1abea">Boolean&lt;/span>) &lt;span style="color:#c1abea">data&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">message&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;操作失败&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">status&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;fail&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">CustomResponseContent&lt;/span> &lt;span style="color:#c1abea">responseContent&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">CustomResponseContent&lt;/span>.&lt;span style="color:#b3d23c">builder&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#b3d23c">code&lt;/span>(&lt;span style="color:#c1abea">response&lt;/span>.&lt;span style="color:#b3d23c">getStatus&lt;/span>())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#b3d23c">status&lt;/span>(&lt;span style="color:#c1abea">status&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#b3d23c">message&lt;/span>(&lt;span style="color:#c1abea">message&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#b3d23c">data&lt;/span>(&lt;span style="color:#c1abea">data&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#b3d23c">build&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">response&lt;/span>.&lt;span style="color:#b3d23c">getWriter&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#b3d23c">write&lt;/span>(&lt;span style="color:#c1abea">objectMapper&lt;/span>.&lt;span style="color:#b3d23c">writeValueAsString&lt;/span>(&lt;span style="color:#c1abea">responseContent&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="添加配置">添加配置&lt;/h3>
&lt;p>将返回值处理器添加到应用中&lt;/p></description></item><item><title>MyBatis 查询错误：java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String</title><link>https://blog.hellowood.dev/posts/mybatis-%E6%9F%A5%E8%AF%A2%E9%94%99%E8%AF%AFjava-lang-illegalargumentexception-invalid-comparison-java-util-date-and-java-lang-string/</link><pubDate>Fri, 29 Mar 2019 21:17:57 +0000</pubDate><guid>https://blog.hellowood.dev/posts/mybatis-%E6%9F%A5%E8%AF%A2%E9%94%99%E8%AF%AFjava-lang-illegalargumentexception-invalid-comparison-java-util-date-and-java-lang-string/</guid><description>&lt;p>项目中用 MyBatis Plus 替换了 MyBatis，原来的 MyBatis版本是 &lt;code>3.2.8&lt;/code>, MyBatis Plus 的版本是 &lt;code>3.1.0&lt;/code>，是基于 MyBatis &lt;code>3.5.0&lt;/code>开发的，测试没啥问题，上线之后有一些功能不能使用，排查日志发现错误&lt;code>Error querying database. Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String&lt;/code>&lt;/p>
&lt;p>很快就定位到问题，是因为传入的 Date 在 XML 中使用了 &lt;code>date != null and date != ''&lt;/code>这样的判断引起的，删除&lt;code>date != ''&lt;/code>这个判断就好了&lt;/p>
&lt;ul>
&lt;li>异常信息&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">Caused&lt;/span> &lt;span style="color:#c1abea">by&lt;/span>: &lt;span style="color:#c1abea">org&lt;/span>.&lt;span style="color:#b3d23c">apache&lt;/span>.&lt;span style="color:#b3d23c">ibatis&lt;/span>.&lt;span style="color:#b3d23c">exceptions&lt;/span>.&lt;span style="color:#b3d23c">PersistenceException&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>### &lt;span style="color:#c1abea">Error&lt;/span> &lt;span style="color:#c1abea">querying&lt;/span> &lt;span style="color:#c1abea">database&lt;/span>. &lt;span style="color:#c1abea">Cause&lt;/span>: &lt;span style="color:#c1abea">java&lt;/span>.&lt;span style="color:#b3d23c">lang&lt;/span>.&lt;span style="color:#b3d23c">IllegalArgumentException&lt;/span>: &lt;span style="color:#c1abea">invalid&lt;/span> &lt;span style="color:#c1abea">comparison&lt;/span>: &lt;span style="color:#c1abea">java&lt;/span>.&lt;span style="color:#b3d23c">util&lt;/span>.&lt;span style="color:#b3d23c">Date&lt;/span> &lt;span style="color:#c1abea">and&lt;/span> &lt;span style="color:#c1abea">java&lt;/span>.&lt;span style="color:#b3d23c">lang&lt;/span>.&lt;span style="color:#b3d23c">String&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>### &lt;span style="color:#c1abea">Cause&lt;/span>: &lt;span style="color:#c1abea">java&lt;/span>.&lt;span style="color:#b3d23c">lang&lt;/span>.&lt;span style="color:#b3d23c">IllegalArgumentException&lt;/span>: &lt;span style="color:#c1abea">invalid&lt;/span> &lt;span style="color:#c1abea">comparison&lt;/span>: &lt;span style="color:#c1abea">java&lt;/span>.&lt;span style="color:#b3d23c">util&lt;/span>.&lt;span style="color:#b3d23c">Date&lt;/span> &lt;span style="color:#c1abea">and&lt;/span> &lt;span style="color:#c1abea">java&lt;/span>.&lt;span style="color:#b3d23c">lang&lt;/span>.&lt;span style="color:#b3d23c">String&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">at&lt;/span> &lt;span style="color:#c1abea">org&lt;/span>.&lt;span style="color:#b3d23c">apache&lt;/span>.&lt;span style="color:#b3d23c">ibatis&lt;/span>.&lt;span style="color:#b3d23c">exceptions&lt;/span>.&lt;span style="color:#b3d23c">ExceptionFactory&lt;/span>.&lt;span style="color:#b3d23c">wrapException&lt;/span>(&lt;span style="color:#c1abea">ExceptionFactory&lt;/span>.&lt;span style="color:#b3d23c">java&lt;/span>:&lt;span style="color:#c1abea">30&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">at&lt;/span> &lt;span style="color:#c1abea">org&lt;/span>.&lt;span style="color:#b3d23c">apache&lt;/span>.&lt;span style="color:#b3d23c">ibatis&lt;/span>.&lt;span style="color:#b3d23c">session&lt;/span>.&lt;span style="color:#b3d23c">defaults&lt;/span>.&lt;span style="color:#b3d23c">DefaultSqlSession&lt;/span>.&lt;span style="color:#b3d23c">selectList&lt;/span>(&lt;span style="color:#c1abea">DefaultSqlSession&lt;/span>.&lt;span style="color:#b3d23c">java&lt;/span>:&lt;span style="color:#c1abea">150&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">at&lt;/span> &lt;span style="color:#c1abea">org&lt;/span>.&lt;span style="color:#b3d23c">apache&lt;/span>.&lt;span style="color:#b3d23c">ibatis&lt;/span>.&lt;span style="color:#b3d23c">session&lt;/span>.&lt;span style="color:#b3d23c">defaults&lt;/span>.&lt;span style="color:#b3d23c">DefaultSqlSession&lt;/span>.&lt;span style="color:#b3d23c">selectList&lt;/span>(&lt;span style="color:#c1abea">DefaultSqlSession&lt;/span>.&lt;span style="color:#b3d23c">java&lt;/span>:&lt;span style="color:#c1abea">141&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">at&lt;/span> &lt;span style="color:#c1abea">org&lt;/span>.&lt;span style="color:#b3d23c">apache&lt;/span>.&lt;span style="color:#b3d23c">ibatis&lt;/span>.&lt;span style="color:#b3d23c">session&lt;/span>.&lt;span style="color:#b3d23c">defaults&lt;/span>.&lt;span style="color:#b3d23c">DefaultSqlSession&lt;/span>.&lt;span style="color:#b3d23c">selectOne&lt;/span>(&lt;span style="color:#c1abea">DefaultSqlSession&lt;/span>.&lt;span style="color:#b3d23c">java&lt;/span>:&lt;span style="color:#c1abea">77&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">at&lt;/span> &lt;span style="color:#c1abea">sun&lt;/span>.&lt;span style="color:#b3d23c">reflect&lt;/span>.&lt;span style="color:#b3d23c">NativeMethodAccessorImpl&lt;/span>.&lt;span style="color:#b3d23c">invoke0&lt;/span>(&lt;span style="color:#c1abea">Native&lt;/span> &lt;span style="color:#c1abea">Method&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">at&lt;/span> &lt;span style="color:#c1abea">sun&lt;/span>.&lt;span style="color:#b3d23c">reflect&lt;/span>.&lt;span style="color:#b3d23c">NativeMethodAccessorImpl&lt;/span>.&lt;span style="color:#b3d23c">invoke&lt;/span>(&lt;span style="color:#c1abea">NativeMethodAccessorImpl&lt;/span>.&lt;span style="color:#b3d23c">java&lt;/span>:&lt;span style="color:#c1abea">62&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">at&lt;/span> &lt;span style="color:#c1abea">sun&lt;/span>.&lt;span style="color:#b3d23c">reflect&lt;/span>.&lt;span style="color:#b3d23c">DelegatingMethodAccessorImpl&lt;/span>.&lt;span style="color:#b3d23c">invoke&lt;/span>(&lt;span style="color:#c1abea">DelegatingMethodAccessorImpl&lt;/span>.&lt;span style="color:#b3d23c">java&lt;/span>:&lt;span style="color:#c1abea">43&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">at&lt;/span> &lt;span style="color:#c1abea">java&lt;/span>.&lt;span style="color:#b3d23c">lang&lt;/span>.&lt;span style="color:#b3d23c">reflect&lt;/span>.&lt;span style="color:#b3d23c">Method&lt;/span>.&lt;span style="color:#b3d23c">invoke&lt;/span>(&lt;span style="color:#c1abea">Method&lt;/span>.&lt;span style="color:#b3d23c">java&lt;/span>:&lt;span style="color:#c1abea">498&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">at&lt;/span> &lt;span style="color:#c1abea">org&lt;/span>.&lt;span style="color:#b3d23c">mybatis&lt;/span>.&lt;span style="color:#b3d23c">spring&lt;/span>.&lt;span style="color:#b3d23c">SqlSessionTemplate$SqlSessionInterceptor&lt;/span>.&lt;span style="color:#b3d23c">invoke&lt;/span>(&lt;span style="color:#c1abea">SqlSessionTemplate&lt;/span>.&lt;span style="color:#b3d23c">java&lt;/span>:&lt;span style="color:#c1abea">433&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ... &lt;span style="color:#c1abea">98&lt;/span> &lt;span style="color:#c1abea">more&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="问题复现">问题复现&lt;/h3>
&lt;ul>
&lt;li>ServiceImpl&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">testDao&lt;/span>.&lt;span style="color:#b3d23c">getDate&lt;/span>(&lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">Date&lt;/span>());
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Dao&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">Date&lt;/span> &lt;span style="color:#00b1f7">test&lt;/span>(&lt;span style="color:#e5c07b">@Param&lt;/span>(&lt;span style="color:#98c379">&amp;#34;date&amp;#34;&lt;/span>) &lt;span style="color:#c1abea">Date&lt;/span> &lt;span style="color:#c1abea">date&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>XML&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;lt;select&lt;/span> &lt;span style="color:#b3d23c">id=&lt;/span>&lt;span style="color:#98c379">&amp;#34;test&amp;#34;&lt;/span> &lt;span style="color:#b3d23c">resultType=&lt;/span>&lt;span style="color:#98c379">&amp;#34;java.util.Date&amp;#34;&lt;/span>&lt;span style="color:#e06c75">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;lt;if&lt;/span> &lt;span style="color:#b3d23c">test=&lt;/span>&lt;span style="color:#98c379">&amp;#34;date != null and date !=&amp;#39;&amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#e06c75">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SELECT
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> #{date} AS now
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> FROM dual
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;lt;/if&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;lt;if&lt;/span> &lt;span style="color:#b3d23c">test=&lt;/span>&lt;span style="color:#98c379">&amp;#34; date== null&amp;#34;&lt;/span>&lt;span style="color:#e06c75">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SELECT
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> date_add(now(), INTERVAL 1 DAY_HOUR) AS now
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> FROM dual
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;lt;/if&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;lt;/select&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>经过debug，发现 MyBatis 3.3之前和3.3之后的判断逻辑不一样&lt;/p></description></item><item><title>Spring Boot 配置 HTTPS 访问</title><link>https://blog.hellowood.dev/posts/spring-boot-%E9%85%8D%E7%BD%AE-https-%E8%AE%BF%E9%97%AE/</link><pubDate>Mon, 31 Dec 2018 22:42:17 +0000</pubDate><guid>https://blog.hellowood.dev/posts/spring-boot-%E9%85%8D%E7%BD%AE-https-%E8%AE%BF%E9%97%AE/</guid><description>&lt;ul>
&lt;li>&lt;a href="https://github.com/helloworlde/SpringBootCollection/tree/master/SpringBoot-Https">相关代码&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="生成证书">生成证书&lt;/h2>
&lt;ul>
&lt;li>创建新证书&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>keytool -genkeypair -alias hellowood -keyalg RSA -keysize &lt;span style="color:#d19a66">2048&lt;/span> -storetype PKCS12 -keystore hellowood.p12 -validity &lt;span style="color:#d19a66">3650&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>输入密钥库口令:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>再次输入新口令:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>您的名字与姓氏是什么?
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c7bf54">[&lt;/span>Unknown&lt;span style="color:#c7bf54">]&lt;/span>: HellWood
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>您的组织单位名称是什么?
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c7bf54">[&lt;/span>Unknown&lt;span style="color:#c7bf54">]&lt;/span>: HelloWood
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>您的组织名称是什么?
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c7bf54">[&lt;/span>Unknown&lt;span style="color:#c7bf54">]&lt;/span>: HelloWood
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>您所在的城市或区域名称是什么?
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c7bf54">[&lt;/span>Unknown&lt;span style="color:#c7bf54">]&lt;/span>: BJ
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>您所在的省/市/自治区名称是什么?
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c7bf54">[&lt;/span>Unknown&lt;span style="color:#c7bf54">]&lt;/span>: BJ
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>该单位的双字母国家/地区代码是什么?
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c7bf54">[&lt;/span>Unknown&lt;span style="color:#c7bf54">]&lt;/span>: CN
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#dcaeea">CN&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>HellWood, &lt;span style="color:#dcaeea">OU&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>HelloWood, &lt;span style="color:#dcaeea">O&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>HelloWood, &lt;span style="color:#dcaeea">L&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>BJ, &lt;span style="color:#dcaeea">ST&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>BJ, &lt;span style="color:#dcaeea">C&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>CN是否正确?
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c7bf54">[&lt;/span>否&lt;span style="color:#c7bf54">]&lt;/span>: y
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这样就生成了 &lt;code>hellowood.p12&lt;/code>这个证书&lt;/p>
&lt;ul>
&lt;li>如果已经有一个证书，可以将该证书转换为 PKCS格式&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>keytool -import -alias hellowood -file hellowood.crt -keystore hellowood.p12
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>// 或
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>keytool -importkeystore -srckeystore hellowood.jks -destkeystore hellowood.p12 -deststoretype pkcs12
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="配置-https">配置 HTTPS&lt;/h2>
&lt;ul>
&lt;li>将 &lt;code>hellowood.p12&lt;/code> 添加到 &lt;code>resources/&lt;/code>下&lt;/li>
&lt;li>application.properties&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-properties" data-lang="properties">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic"># SSL config&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">server.ssl.key-store-type&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">PKCS12&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">server.ssl.key-store&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">classpath:hellowood.p12&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">server.ssl.key-store-password&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">123456&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">server.ssl.key-alias&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">hellowood&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">server.ssl.enabled&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>添加接口&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">@RestController&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c678dd">class&lt;/span> &lt;span style="color:#76a9f9">BaseController&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@GetMapping&lt;/span>(&lt;span style="color:#98c379">&amp;#34;/&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#00b1f7">root&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#98c379">&amp;#34;HelloWood&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>启动应用，会看到日志中有提示应用使用 HTTPS 启动&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>2018-12-31 21:54:07.940 INFO 24001 --- [ main] o.s.b.w.embedded.tomcat.TomcatWebServer : Tomcat started on port(s): 8080 (https) with context path &amp;#39;&amp;#39;
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>访问 &lt;code>http://localhost:8080&lt;/code>，会提示需要使用 HTTPS 进行访问&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>curl http://localhost:8080/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Bad Request
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>This combination of host and port requires TLS.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>访问 &lt;code>https://localhost:8080&lt;/code>，会成功返回 HelloWood&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span> curl --insecure https://localhost:8080
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> HelloWood%
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="重定向-http-到-https">重定向 HTTP 到 HTTPS&lt;/h2>
&lt;ul>
&lt;li>修改端口，添加 HTTP 端口 (application.properties)&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code class="language-dsconfig" data-lang="dsconfig">server.port=8443
server.port.http=8080
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>添加重定向配置&lt;code>ConnectorConfig.java&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">org.apache.catalina.Context&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">org.apache.catalina.connector.Connector&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">org.apache.coyote.http11.Http11NioProtocol&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">org.apache.tomcat.util.descriptor.web.SecurityCollection&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">org.apache.tomcat.util.descriptor.web.SecurityConstraint&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">org.springframework.beans.factory.annotation.Value&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">org.springframework.boot.web.servlet.server.ServletWebServerFactory&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">org.springframework.context.annotation.Bean&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">org.springframework.context.annotation.Configuration&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">@Configuration&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c678dd">class&lt;/span> &lt;span style="color:#76a9f9">ConnectorConfig&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Value&lt;/span>(&lt;span style="color:#98c379">&amp;#34;${server.port.http}&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">private&lt;/span> &lt;span style="color:#ef8383">int&lt;/span> &lt;span style="color:#c1abea">serverPortHttp&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Value&lt;/span>(&lt;span style="color:#98c379">&amp;#34;${server.port}&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">private&lt;/span> &lt;span style="color:#ef8383">int&lt;/span> &lt;span style="color:#c1abea">serverPortHttps&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Bean&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">ServletWebServerFactory&lt;/span> &lt;span style="color:#00b1f7">servletWebServerFactory&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">TomcatServletWebServerFactory&lt;/span> &lt;span style="color:#c1abea">factory&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">TomcatServletWebServerFactory&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">protected&lt;/span> &lt;span style="color:#ef8383">void&lt;/span> &lt;span style="color:#00b1f7">postProcessContext&lt;/span>(&lt;span style="color:#c1abea">Context&lt;/span> &lt;span style="color:#c1abea">context&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">SecurityConstraint&lt;/span> &lt;span style="color:#c1abea">securityConstraint&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">SecurityConstraint&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">securityConstraint&lt;/span>.&lt;span style="color:#b3d23c">setUserConstraint&lt;/span>(&lt;span style="color:#98c379">&amp;#34;CONFIDENTIAL&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">SecurityCollection&lt;/span> &lt;span style="color:#c1abea">securityCollection&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">SecurityCollection&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">securityCollection&lt;/span>.&lt;span style="color:#b3d23c">addPattern&lt;/span>(&lt;span style="color:#98c379">&amp;#34;/*&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">securityConstraint&lt;/span>.&lt;span style="color:#b3d23c">addCollection&lt;/span>(&lt;span style="color:#c1abea">securityCollection&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">context&lt;/span>.&lt;span style="color:#b3d23c">addConstraint&lt;/span>(&lt;span style="color:#c1abea">securityConstraint&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">factory&lt;/span>.&lt;span style="color:#b3d23c">addAdditionalTomcatConnectors&lt;/span>(&lt;span style="color:#c1abea">redirectConnector&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c1abea">factory&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">private&lt;/span> &lt;span style="color:#c1abea">Connector&lt;/span> &lt;span style="color:#00b1f7">redirectConnector&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">Connector&lt;/span> &lt;span style="color:#c1abea">connector&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">Connector&lt;/span>(&lt;span style="color:#c1abea">Http11NioProtocol&lt;/span>.&lt;span style="color:#b3d23c">class&lt;/span>.&lt;span style="color:#b3d23c">getName&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">connector&lt;/span>.&lt;span style="color:#b3d23c">setScheme&lt;/span>(&lt;span style="color:#98c379">&amp;#34;http&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">connector&lt;/span>.&lt;span style="color:#b3d23c">setPort&lt;/span>(&lt;span style="color:#c1abea">serverPortHttp&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">connector&lt;/span>.&lt;span style="color:#b3d23c">setSecure&lt;/span>(&lt;span style="color:#b756ff;font-weight:bold">false&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">connector&lt;/span>.&lt;span style="color:#b3d23c">setRedirectPort&lt;/span>(&lt;span style="color:#c1abea">serverPortHttps&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c1abea">connector&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>再次启动应用，看到日志中有 HTTP 和 HTTPS 的端口信息&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-verilog" data-lang="verilog">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d19a66">2018&lt;/span>&lt;span style="color:#c7bf54">-&lt;/span>&lt;span style="color:#d19a66">12&lt;/span>&lt;span style="color:#c7bf54">-&lt;/span>&lt;span style="color:#d19a66">31&lt;/span> &lt;span style="color:#d19a66">22&lt;/span>&lt;span style="color:#c7bf54">:&lt;/span>&lt;span style="color:#d19a66">17&lt;/span>&lt;span style="color:#c7bf54">:&lt;/span>&lt;span style="color:#d19a66">47.113&lt;/span> &lt;span style="color:#c1abea">INFO&lt;/span> &lt;span style="color:#d19a66">24612&lt;/span> &lt;span style="color:#c7bf54">---&lt;/span> [ &lt;span style="color:#c1abea">main&lt;/span>] &lt;span style="color:#c1abea">o&lt;/span>.&lt;span style="color:#c1abea">s&lt;/span>.&lt;span style="color:#c1abea">b&lt;/span>.&lt;span style="color:#c1abea">w&lt;/span>.&lt;span style="color:#c1abea">embedded&lt;/span>.&lt;span style="color:#c1abea">tomcat&lt;/span>.&lt;span style="color:#c1abea">TomcatWebServer&lt;/span> &lt;span style="color:#c7bf54">:&lt;/span> &lt;span style="color:#c1abea">Tomcat&lt;/span> &lt;span style="color:#c1abea">started&lt;/span> &lt;span style="color:#c1abea">on&lt;/span> &lt;span style="color:#c1abea">port&lt;/span>(&lt;span style="color:#c1abea">s&lt;/span>)&lt;span style="color:#c7bf54">:&lt;/span> &lt;span style="color:#d19a66">8443&lt;/span> (&lt;span style="color:#c1abea">https&lt;/span>) &lt;span style="color:#d19a66">8080&lt;/span> (&lt;span style="color:#c1abea">http&lt;/span>) &lt;span style="color:#c1abea">with&lt;/span> &lt;span style="color:#c1abea">context&lt;/span> &lt;span style="color:#c1abea">path&lt;/span> &amp;#39;&amp;#39;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>访问 &lt;code>http://localhost:8080&lt;/code>，将会被重定向到&lt;code>https://localhost:8443&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>curl -v http://localhost:8080
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>* Rebuilt URL to: http://localhost:8080/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>* Trying ::1...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>* TCP_NODELAY &lt;span style="color:#ef8383">set&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>* Connected to localhost &lt;span style="color:#c7bf54">(&lt;/span>::1&lt;span style="color:#c7bf54">)&lt;/span> port &lt;span style="color:#d19a66">8080&lt;/span> &lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">#0)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt; GET / HTTP/1.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt; Host: localhost:8080
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt; User-Agent: curl/7.54.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt; Accept: */*
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt; HTTP/1.1 &lt;span style="color:#d19a66">302&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt; Cache-Control: private
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt; Expires: Thu, &lt;span style="color:#d19a66">01&lt;/span> Jan &lt;span style="color:#d19a66">1970&lt;/span> 00:00:00 GMT
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt; Location: https://localhost:8443/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt; Content-Length: &lt;span style="color:#d19a66">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt; type: post
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>date: Mon, &lt;span style="color:#d19a66">31&lt;/span> Dec &lt;span style="color:#d19a66">2018&lt;/span> 14:31:44 GMT
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>* Connection &lt;span style="color:#8a93a5;font-style:italic">#0 to host localhost left intact&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>访问 &lt;code>https://localhost:8443&lt;/code>正常返回&lt;code>HelloWood&lt;/code>&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>curl https://localhost:8443 --insecure
HelloWood%
&lt;/code>&lt;/pre></description></item><item><title>SpringBoot 中 Spring Security 403 自定义返回消息</title><link>https://blog.hellowood.dev/posts/springboot-%E4%B8%AD-spring-security-403-%E8%87%AA%E5%AE%9A%E4%B9%89%E8%BF%94%E5%9B%9E%E6%B6%88%E6%81%AF/</link><pubDate>Mon, 24 Dec 2018 21:15:25 +0000</pubDate><guid>https://blog.hellowood.dev/posts/springboot-%E4%B8%AD-spring-security-403-%E8%87%AA%E5%AE%9A%E4%B9%89%E8%BF%94%E5%9B%9E%E6%B6%88%E6%81%AF/</guid><description>&lt;ul>
&lt;li>自定义处理类 CustomAccessDeniedHandler&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>import com.fasterxml.jackson.databind.ObjectMapper;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.security.access.AccessDeniedException;
import org.springframework.security.web.access.AccessDeniedHandler;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;

public class CustomAccessDeniedHandler implements AccessDeniedHandler {

 @Override
 public void handle(HttpServletRequest request, HttpServletResponse response, AccessDeniedException accessDeniedException) throws IOException, ServletException {
 response.setContentType(MediaType.APPLICATION_JSON_UTF8_VALUE);
 response.setStatus(HttpStatus.FORBIDDEN.value());
 response.getWriter().write(new ObjectMapper().writeValueAsString(new CustomResponse(&amp;#34;Session Invalid&amp;#34;, null)));
 }

 static class CustomResponse {
 private String message;
 private Object data;

 CustomResponse(String message, Object data) {
 this.message = message;
 this.data = data;
 }

 public String getMessage() {
 return message;
 }

 public void setMessage(String message) {
 this.message = message;
 }

 public Object getData() {
 return data;
 }

 public void setData(Object data) {
 this.data = data;
 }
 }
}
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>在Spring Security 配置中添加配置&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>
import org.springframework.context.annotation.Bean;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;
import org.springframework.security.web.access.AccessDeniedHandler;

@EnableWebSecurity
public class SecurityConfig extends WebSecurityConfigurerAdapter {

 @Override
 protected void configure(HttpSecurity http) throws Exception {
 http.authorizeRequests()
 .antMatchers(&amp;#34;/&amp;#34;,
 &amp;#34;/index.html&amp;#34;,
 &amp;#34;/**/favicon.ico&amp;#34;,
 &amp;#34;/login&amp;#34;,
 &amp;#34;/logout&amp;#34;,
 &amp;#34;/index&amp;#34;,
 &amp;#34;/error&amp;#34;)
 .permitAll();

 http.authorizeRequests()
 .anyRequest()
 .authenticated()
 .and()
 .exceptionHandling().accessDeniedHandler(accessDeniedHandler());
 }

 @Bean
 public AccessDeniedHandler accessDeniedHandler() {
 return new CustomAccessDeniedHandler();
 }
}
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>返回值&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>{&amp;#34;message&amp;#34;:&amp;#34;Session Invalid&amp;#34;,&amp;#34;data&amp;#34;:null}
&lt;/code>&lt;/pre></description></item><item><title>Java 中计算字符串表达式的值</title><link>https://blog.hellowood.dev/posts/java-%E4%B8%AD%E8%AE%A1%E7%AE%97%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E5%80%BC/</link><pubDate>Sat, 25 Aug 2018 10:55:46 +0000</pubDate><guid>https://blog.hellowood.dev/posts/java-%E4%B8%AD%E8%AE%A1%E7%AE%97%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E5%80%BC/</guid><description>&lt;blockquote>
&lt;p>在 Java 中计算字符串数值表达式可以用 &lt;code>javax.script.ScriptEngine#eval(java.lang.String)&lt;/code>，通过调用 JavaScript 来计算&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">javax.script.ScriptEngine&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">javax.script.ScriptEngineManager&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">javax.script.ScriptException&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c678dd">class&lt;/span> &lt;span style="color:#76a9f9">ExpressionCalculate&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c678dd">static&lt;/span> &lt;span style="color:#ef8383">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span>(&lt;span style="color:#c1abea">String&lt;/span>&lt;span style="color:#c7bf54">[]&lt;/span> &lt;span style="color:#c1abea">args&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">ScriptEngineManager&lt;/span> &lt;span style="color:#c1abea">scriptEngineManager&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">ScriptEngineManager&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">ScriptEngine&lt;/span> &lt;span style="color:#c1abea">scriptEngine&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">scriptEngineManager&lt;/span>.&lt;span style="color:#b3d23c">getEngineByName&lt;/span>(&lt;span style="color:#98c379">&amp;#34;nashorn&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">expression&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;10 * 2 + 6 / (3 - 1)&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">result&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">String&lt;/span>.&lt;span style="color:#b3d23c">valueOf&lt;/span>(&lt;span style="color:#c1abea">scriptEngine&lt;/span>.&lt;span style="color:#b3d23c">eval&lt;/span>(&lt;span style="color:#c1abea">expression&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">System&lt;/span>.&lt;span style="color:#b3d23c">out&lt;/span>.&lt;span style="color:#b3d23c">println&lt;/span>(&lt;span style="color:#c1abea">result&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#c678dd">catch&lt;/span> (&lt;span style="color:#c1abea">ScriptException&lt;/span> &lt;span style="color:#c1abea">e&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">e&lt;/span>.&lt;span style="color:#b3d23c">printStackTrace&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>结果： 23&lt;/p></description></item><item><title>使用 Jib 生成 Java Docker 镜像</title><link>https://blog.hellowood.dev/posts/%E4%BD%BF%E7%94%A8-jib-%E7%94%9F%E6%88%90-java-docker-%E9%95%9C%E5%83%8F/</link><pubDate>Mon, 16 Jul 2018 00:17:43 +0000</pubDate><guid>https://blog.hellowood.dev/posts/%E4%BD%BF%E7%94%A8-jib-%E7%94%9F%E6%88%90-java-docker-%E9%95%9C%E5%83%8F/</guid><description>&lt;blockquote>
&lt;p>&lt;a href="https://github.com/GoogleContainerTools/jib">Jib&lt;/a> 是谷歌最新开源的 Java 应用的 Docker 镜像生成工具，可以通过 Gradle 或 Maven 直接生成镜像并上传到仓库而不需要 Dockerfile 文件或者其他插件；Jib 支持将资源文件和类分层打包，可以大幅度提升生成镜像的速度&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>有一些其他的插件也可以通过 Docker 实现生成镜像，如&lt;a href="https://helloworlde.github.io/2018/04/08/Docker-%E6%9E%84%E5%BB%BA-SpringBoot-%E5%BA%94%E7%94%A8/">&lt;code>com.palantir.docker&lt;/code>&lt;/a>等，但是都需要额外配置 Dockerfile, 如果应用仅需要通过 Dockerfile 构建镜像，建议使用 Jib 来提升构建和上传速度&lt;/p>
&lt;/blockquote>
&lt;h2 id="使用">使用&lt;/h2>
&lt;h3 id="添加依赖httpspluginsgradleorgplugincomgooglecloudtoolsjib">&lt;a href="https://plugins.gradle.org/plugin/com.google.cloud.tools.jib">添加依赖&lt;/a>&lt;/h3>
&lt;ul>
&lt;li>Gradle&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-gradle" data-lang="gradle">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">buildscript&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">repositories&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">maven&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span> &lt;span style="color:#c1abea">url&lt;/span> &lt;span style="color:#98c379">&amp;#39;https://plugins.gradle.org/m2/&amp;#39;&lt;/span> &lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">dependencies&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">classpath&lt;/span> &lt;span style="color:#63c381">&amp;#34;gradle.plugin.com.google.cloud.tools:jib-gradle-plugin:0.9.6&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">apply&lt;/span> &lt;span style="color:#f5a40d">plugin:&lt;/span> &lt;span style="color:#63c381">&amp;#34;com.google.cloud.tools.jib&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>或&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-gradle" data-lang="gradle">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">plugins&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">id&lt;/span> &lt;span style="color:#98c379">&amp;#39;com.google.cloud.tools.jib&amp;#39;&lt;/span> &lt;span style="color:#c1abea">version&lt;/span> &lt;span style="color:#98c379">&amp;#39;0.9.6&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="构建镜像">构建镜像&lt;/h3>
&lt;blockquote>
&lt;p>以下方式都需要终端能够访问 &lt;code>gcr.io&lt;/code>或 &lt;code>hub.docker.com&lt;/code>等 Docker Hub 才能成功&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>直接构建并推送到 &lt;a href="https://cloud.google.com/container-registry/">GCR&lt;/a>
通过这种方式构建的镜像会以&lt;code>gcr.io/distroless/java&lt;/code>为底层镜像，编译之后生成镜像，并推送到 Google 容器镜像仓库中：&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-gradle" data-lang="gradle">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">gradle&lt;/span> &lt;span style="color:#c1abea">jib&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>指定推送的容器镜像仓库&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://cloud.google.com/container-registry/">Google Container Center&lt;/a>, &lt;a href="https://aws.amazon.com/ecr/">Amazon Elastic Container Registry&lt;/a>, &lt;a href="https://hub.docker.com/">Docker Hub Registry&lt;/a>之外的 Hub可能会失败，需要先登录到对应的 Docker Hub才可以&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-gradle" data-lang="gradle">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">gradle&lt;/span> &lt;span style="color:#c1abea">jib&lt;/span> &lt;span style="color:#c7bf54">--&lt;/span>&lt;span style="color:#c1abea">image&lt;/span> &lt;span style="color:#c1abea">registry&lt;/span>&lt;span style="color:#c7bf54">.&lt;/span>&lt;span style="color:#b3d23c">hub&lt;/span>&lt;span style="color:#c7bf54">.&lt;/span>&lt;span style="color:#b3d23c">docker&lt;/span>&lt;span style="color:#c7bf54">.&lt;/span>&lt;span style="color:#b3d23c">com&lt;/span>&lt;span style="color:#98c379">/helloworld/&lt;/span>&lt;span style="color:#f5a40d">java:&lt;/span>&lt;span style="color:#c1abea">jib&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>或者在&lt;code>build.gradle&lt;/code>中以下添加之后执行 &lt;code>gradle jib&lt;/code>&lt;/p>
&lt;pre tabindex="0">&lt;code>jib.to.image = &amp;#39;registry.hub.docker.com/helloworld/java:jib&amp;#39;
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>保存在本地
需要本地 Docker 应用已经启动&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>gradle jibDockerBuild
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>&lt;a href="https://github.com/GoogleContainerTools/jib/tree/master/jib-gradle-plugin#extended-usage">自定义基础镜像和参数(build.gradle)&lt;/a>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-gradle" data-lang="gradle">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">jib&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">from&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">image&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#39;registry.hub.docker.com/openjdk:8-jdk-alpine&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">auth&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">username&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#39;username&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">password&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#39;password&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">to&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">image&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#39;registry.hub.docker.com/helloword/java:jib&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">auth&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">username&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#39;username&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">password&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#39;password&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">credHelper&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#39;osxkeychain&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">container&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">jvmFlags&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c7bf54">[&lt;/span>&lt;span style="color:#98c379">&amp;#39;-Djava.security.egd=file:/dev/./urandom&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">,&lt;/span> &lt;span style="color:#98c379">&amp;#39;-Duser.timezone=GMT+08&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">mainClass&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#39;example.jib.MainClass&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">args&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c7bf54">[&lt;/span>&lt;span style="color:#98c379">&amp;#39;test]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379"> ports = [&amp;#39;&lt;/span>&lt;span style="color:#d19a66">8080&lt;/span>&amp;#39;&lt;span style="color:#c7bf54">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;ul>
&lt;li>&lt;code>from&lt;/code>：拉取的镜像的配置，默认为&lt;code>gcr.io/distroless/java&lt;/code>&lt;/li>
&lt;li>&lt;code>to&lt;/code>:要生成的镜像的配置&lt;/li>
&lt;li>&lt;code>image&lt;/code>：拉取或生成的镜像名称&lt;/li>
&lt;li>&lt;code>auth&lt;/code>: 认证信息，分别为用户名和密码&lt;/li>
&lt;li>&lt;a href="https://github.com/GoogleContainerTools/jib/tree/master/jib-gradle-plugin#authentication-methods">&lt;code>credHelper&lt;/code>&lt;/a>：鉴权信息的存放方式，Google 使用 &lt;code>gcr&lt;/code>, AWS使用 &lt;code>ecr-login&lt;/code>, DockerHub 根据平台使用 &lt;code>osxkeychain&lt;/code>, &lt;code>wincred&lt;/code>,&lt;code>secretservice&lt;/code>,&lt;code>pass&lt;/code>中的一种，可以参考 &lt;a href="https://github.com/docker/docker-credential-helpers">docker-credential-helpers&lt;/a>&lt;/li>
&lt;li>&lt;code>container&lt;/code>: 容器的属性&lt;/li>
&lt;li>&lt;code>jvmFlgs&lt;/code>: JVM 容器的参数，和 Dockerfile 的 &lt;code>ENTRYPOINT&lt;/code>作用相同&lt;/li>
&lt;li>&lt;code>mainClass&lt;/code>: 启动类限定名&lt;/li>
&lt;li>&lt;code>args&lt;/code>: &lt;code>main&lt;/code> 方法的传入参数&lt;/li>
&lt;li>&lt;code>ports&lt;/code>: 容器暴露的端口，和 Dockerfile 的&lt;code>EXPOSE&lt;/code>作用相同&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>推荐&lt;code>from&lt;/code> 改为 &lt;code>registry.hub.docker.com/openjdk:8-jdk-alpine&lt;/code>, &lt;code>to&lt;/code>改为 &lt;code>registry.cn-qingdao.aliyuncs.com&lt;/code> 等国内的仓库，同时将 Docker 的镜像源改为&lt;a href="https://registry.docker-cn.com">https://registry.docker-cn.com&lt;/a> 或 &lt;a href="https://docker.mirrors.ustc.edu.cn">https://docker.mirrors.ustc.edu.cn&lt;/a>以减少构建时间&lt;/p></description></item><item><title>SpringBoot 使用 FastJSON 自定义接口返回 JSON 格式</title><link>https://blog.hellowood.dev/posts/springboot-%E4%BD%BF%E7%94%A8-fastjson-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A5%E5%8F%A3%E8%BF%94%E5%9B%9E-json-%E6%A0%BC%E5%BC%8F/</link><pubDate>Tue, 10 Apr 2018 18:50:34 +0000</pubDate><guid>https://blog.hellowood.dev/posts/springboot-%E4%BD%BF%E7%94%A8-fastjson-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A5%E5%8F%A3%E8%BF%94%E5%9B%9E-json-%E6%A0%BC%E5%BC%8F/</guid><description>&lt;p>在 SpringBoot 中如果想要自定义接口返回的值格式，可以通过重写 &lt;code>WebMvcConfigurerAdapter&lt;/code> 类的 &lt;code>configureMessageConverters&lt;/code> 方法实现&lt;/p>
&lt;ul>
&lt;li>添加依赖&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>compile(&amp;#39;com.alibaba:fastjson:1.2.46&amp;#39;)
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>MessageConverter.java&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>import com.alibaba.fastjson.serializer.SerializerFeature;
import com.alibaba.fastjson.support.config.FastJsonConfig;
import com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter;
import org.springframework.http.converter.HttpMessageConverter;
import org.springframework.stereotype.Component;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;

import java.util.List;

@Component
public class MessageConverter extends WebMvcConfigurerAdapter {

 private static final String DATE_TIME_PATTEN = &amp;#34;yyyy-MM-dd HH:mm:ss&amp;#34;;

 @Override
 public void configureMessageConverters(List&amp;lt;HttpMessageConverter&amp;lt;?&amp;gt;&amp;gt; converters) {
 FastJsonHttpMessageConverter fastJsonHttpMessageConverter = new FastJsonHttpMessageConverter();

 FastJsonConfig fastJsonConfig = new FastJsonConfig();
 // 设置空值不返回
 fastJsonConfig.setSerializerFeatures(SerializerFeature.PrettyFormat);
 // 设置日期格式
 fastJsonConfig.setDateFormat(DATE_TIME_PATTEN);
 fastJsonHttpMessageConverter.setFastJsonConfig(fastJsonConfig);

 converters.add(fastJsonHttpMessageConverter);
 }
}
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>如果不想让某个列返回可以在属性上添加 &lt;code>@JSONField(serialize = false)&lt;/code>&lt;/li>
&lt;li>如果想让某个属性返回的值为指定的字符串：&lt;code>@JSONField(name = &amp;quot;custom_field_name&amp;quot;)&lt;/code>&lt;/li>
&lt;/ul></description></item><item><title>Docker 构建 SpringBoot 应用</title><link>https://blog.hellowood.dev/posts/docker-%E6%9E%84%E5%BB%BA-springboot-%E5%BA%94%E7%94%A8/</link><pubDate>Sun, 08 Apr 2018 15:42:39 +0000</pubDate><guid>https://blog.hellowood.dev/posts/docker-%E6%9E%84%E5%BB%BA-springboot-%E5%BA%94%E7%94%A8/</guid><description>&lt;ul>
&lt;li>
&lt;p>启动 Docker，并生成 SpringBoot 应用&lt;/p>
&lt;/li>
&lt;li>
&lt;p>修改 &lt;code>build.gradle&lt;/code> 文件&lt;/p>
&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>buildscript {
 ext {
 springBootVersion = &amp;#39;2.0.0.RELEASE&amp;#39;
 }
 repositories {
 maven { url &amp;#34;https://plugins.gradle.org/m2/&amp;#34; }
 mavenCentral()
 }
 dependencies {
 classpath(&amp;#34;org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}&amp;#34;)
 classpath(&amp;#34;gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.19.2&amp;#34;)
 }
}

apply plugin: &amp;#39;java&amp;#39;
apply plugin: &amp;#39;eclipse&amp;#39;
apply plugin: &amp;#39;org.springframework.boot&amp;#39;
apply plugin: &amp;#39;io.spring.dependency-management&amp;#39;
apply plugin: &amp;#39;com.palantir.docker&amp;#39;

group = &amp;#39;cn.com.hellowood&amp;#39;
sourceCompatibility = 1.8
version = &amp;#39;1.0.0-SNAPSHOT&amp;#39;

repositories {
 mavenCentral()
}

dependencies {
 compile(&amp;#39;org.springframework.boot:spring-boot-starter-web&amp;#39;)
 testCompile(&amp;#39;org.springframework.boot:spring-boot-starter-test&amp;#39;)
}

docker {
 name &amp;#34;${project.group}/${jar.baseName}&amp;#34;
 files jar.archivePath
 buildArgs([&amp;#39;JAR_FILE&amp;#39;: &amp;#34;${jar.archiveName}&amp;#34;])
}
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>添加 &lt;code>Dockerfile&lt;/code>文件&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>FROM openjdk:8-jdk-alpine
VOLUME /tmp
ARG JAR_FILE
ADD ${JAR_FILE} app.jar
ENTRYPOINT [&amp;#34;java&amp;#34;,&amp;#34;-Djava.security.egd=file:/dev/./urandom&amp;#34;,&amp;#34;-jar&amp;#34;,&amp;#34;/app.jar&amp;#34;]
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>构建&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>gradle build docker
&lt;/code>&lt;/pre>&lt;p>此时会生成&lt;code>Docker&lt;/code>镜像&lt;/p></description></item><item><title>SpringBoot-使用 MyBatis 通用 Mapper</title><link>https://blog.hellowood.dev/posts/springboot-%E4%BD%BF%E7%94%A8-mybatis-%E9%80%9A%E7%94%A8-mapper/</link><pubDate>Sun, 08 Apr 2018 15:11:45 +0000</pubDate><guid>https://blog.hellowood.dev/posts/springboot-%E4%BD%BF%E7%94%A8-mybatis-%E9%80%9A%E7%94%A8-mapper/</guid><description>&lt;blockquote>
&lt;p>&lt;a href="https://github.com/abel533/Mapper">通用 Mapper&lt;/a> 是一个开源的 MyBatis 插件，该插件可以使用通用的 MyBatis方法，减少简单的 CRUD，提高开发效率；推荐搭配分页插件 &lt;a href="https://github.com/pagehelper/Mybatis-PageHelper">PageHelper&lt;/a> 一起使用；通用 Mapper 插件虽然没有 &lt;a href="https://github.com/baomidou/mybatis-plus">MyBatis Plus&lt;/a> 强大，但是满足正常项目开发；&lt;/p>
&lt;/blockquote>
&lt;h2 id="添加依赖">添加依赖&lt;/h2>
&lt;ul>
&lt;li>build.gradle&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-gradle" data-lang="gradle">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">compile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;com.github.pagehelper:pagehelper-spring-boot-starter:1.2.3&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">compile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;tk.mybatis:mapper:3.4.2&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="配置">配置&lt;/h2>
&lt;ul>
&lt;li>application.properties&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code># DataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/product?useSSL=false
spring.datasource.username=root
spring.datasource.password=123456

# MyBatis
mybatis.type-aliases-package=cn.com.hellowood.mybatisplus.dao
mybatis.mapper-locations=mappers/**Mapper.xml

# PageHelper
pagehelper.helper-dialect=mysql
pagehelper.reasonable=true
pagehelper.support-methods-arguments=true
pagehelper.params=count=countSql
pagehelper.row-bounds-with-count=true
pagehelper.offset-as-page-num=true
pagehelper.page-size-zero=true

# Log
logging.level.root=info
logging.level.cn.com.hellowood=trace

spring.profiles.active=dev
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>MyBatisConfig.java&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">org.springframework.context.annotation.Bean&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">org.springframework.context.annotation.Configuration&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">tk.mybatis.spring.mapper.MapperScannerConfigurer&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">java.util.Properties&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">@Configuration&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c678dd">class&lt;/span> &lt;span style="color:#76a9f9">MyBatisConfig&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">private&lt;/span> &lt;span style="color:#c678dd">final&lt;/span> &lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">MAPPER_PACKAGE&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;cn.com.hellowood.mapper.dao&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">private&lt;/span> &lt;span style="color:#c678dd">final&lt;/span> &lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">MAPPER_INTERFACE_REFERENCE&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;cn.com.hellowood.mapper.common.CommonMapper&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Bean&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">MapperScannerConfigurer&lt;/span> &lt;span style="color:#00b1f7">mapperScannerConfigurer&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">MapperScannerConfigurer&lt;/span> &lt;span style="color:#c1abea">mapperScannerConfigurer&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">MapperScannerConfigurer&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">mapperScannerConfigurer&lt;/span>.&lt;span style="color:#b3d23c">setSqlSessionFactoryBeanName&lt;/span>(&lt;span style="color:#98c379">&amp;#34;sqlSessionFactoryBean&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">mapperScannerConfigurer&lt;/span>.&lt;span style="color:#b3d23c">setBasePackage&lt;/span>(&lt;span style="color:#c1abea">MAPPER_PACKAGE&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">Properties&lt;/span> &lt;span style="color:#c1abea">properties&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">Properties&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">properties&lt;/span>.&lt;span style="color:#b3d23c">setProperty&lt;/span>(&lt;span style="color:#98c379">&amp;#34;mappers&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">MAPPER_INTERFACE_REFERENCE&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">properties&lt;/span>.&lt;span style="color:#b3d23c">setProperty&lt;/span>(&lt;span style="color:#98c379">&amp;#34;notEmpty&amp;#34;&lt;/span>, &lt;span style="color:#98c379">&amp;#34;false&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">properties&lt;/span>.&lt;span style="color:#b3d23c">setProperty&lt;/span>(&lt;span style="color:#98c379">&amp;#34;IDENTIFY&amp;#34;&lt;/span>, &lt;span style="color:#98c379">&amp;#34;MYSQL&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">mapperScannerConfigurer&lt;/span>.&lt;span style="color:#b3d23c">setProperties&lt;/span>(&lt;span style="color:#c1abea">properties&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c1abea">mapperScannerConfigurer&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>BaseService.java&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">package&lt;/span> &lt;span style="color:#76a9f9">cn.com.hellowood.mapper.service&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">cn.com.hellowood.mapper.common.CommonMapper&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">cn.com.hellowood.mapper.common.CommonService&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">cn.com.hellowood.mapper.utils.ServiceException&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">com.github.pagehelper.PageHelper&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">com.github.pagehelper.PageInfo&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">org.springframework.beans.factory.annotation.Autowired&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">tk.mybatis.mapper.entity.Condition&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">javax.servlet.http.HttpServletRequest&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">java.io.Serializable&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">java.lang.reflect.Field&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">java.lang.reflect.ParameterizedType&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">java.util.List&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c678dd">abstract&lt;/span> &lt;span style="color:#c678dd">class&lt;/span> &lt;span style="color:#76a9f9">BaseService&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">T&lt;/span>&lt;span style="color:#c7bf54">&amp;gt;&lt;/span> &lt;span style="color:#c678dd">implements&lt;/span> &lt;span style="color:#c1abea">CommonService&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">T&lt;/span>&lt;span style="color:#c7bf54">&amp;gt;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">private&lt;/span> &lt;span style="color:#c1abea">Class&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">T&lt;/span>&lt;span style="color:#c7bf54">&amp;gt;&lt;/span> &lt;span style="color:#c1abea">modelClass&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Autowired&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">protected&lt;/span> &lt;span style="color:#c1abea">CommonMapper&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">T&lt;/span>&lt;span style="color:#c7bf54">&amp;gt;&lt;/span> &lt;span style="color:#c1abea">commonMapper&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Autowired&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">HttpServletRequest&lt;/span> &lt;span style="color:#c1abea">request&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#00b1f7">BaseService&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">ParameterizedType&lt;/span> &lt;span style="color:#c1abea">type&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> (&lt;span style="color:#c1abea">ParameterizedType&lt;/span>) &lt;span style="color:#c678dd">this&lt;/span>.&lt;span style="color:#b3d23c">getClass&lt;/span>().&lt;span style="color:#b3d23c">getGenericSuperclass&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">this&lt;/span>.&lt;span style="color:#b3d23c">modelClass&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> (&lt;span style="color:#c1abea">Class&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">T&lt;/span>&lt;span style="color:#c7bf54">&amp;gt;&lt;/span>) &lt;span style="color:#c1abea">type&lt;/span>.&lt;span style="color:#b3d23c">getActualTypeArguments&lt;/span>()&lt;span style="color:#c7bf54">[&lt;/span>&lt;span style="color:#c1abea">0&lt;/span>&lt;span style="color:#c7bf54">]&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">Integer&lt;/span> &lt;span style="color:#00b1f7">save&lt;/span>(&lt;span style="color:#c1abea">T&lt;/span> &lt;span style="color:#c1abea">model&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c1abea">commonMapper&lt;/span>.&lt;span style="color:#b3d23c">insertSelective&lt;/span>(&lt;span style="color:#c1abea">model&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">Integer&lt;/span> &lt;span style="color:#00b1f7">save&lt;/span>(&lt;span style="color:#c1abea">List&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">T&lt;/span>&lt;span style="color:#c7bf54">&amp;gt;&lt;/span> &lt;span style="color:#c1abea">models&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c1abea">commonMapper&lt;/span>.&lt;span style="color:#b3d23c">insertList&lt;/span>(&lt;span style="color:#c1abea">models&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">Integer&lt;/span> &lt;span style="color:#00b1f7">deleteById&lt;/span>(&lt;span style="color:#c1abea">Serializable&lt;/span> &lt;span style="color:#c1abea">id&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c1abea">commonMapper&lt;/span>.&lt;span style="color:#b3d23c">deleteByPrimaryKey&lt;/span>(&lt;span style="color:#c1abea">id&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">Integer&lt;/span> &lt;span style="color:#00b1f7">deleteByIds&lt;/span>(&lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">ids&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c1abea">commonMapper&lt;/span>.&lt;span style="color:#b3d23c">deleteByIds&lt;/span>(&lt;span style="color:#c1abea">ids&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">Integer&lt;/span> &lt;span style="color:#00b1f7">update&lt;/span>(&lt;span style="color:#c1abea">T&lt;/span> &lt;span style="color:#c1abea">model&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c1abea">commonMapper&lt;/span>.&lt;span style="color:#b3d23c">updateByPrimaryKeySelective&lt;/span>(&lt;span style="color:#c1abea">model&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">T&lt;/span> &lt;span style="color:#00b1f7">getById&lt;/span>(&lt;span style="color:#c1abea">Serializable&lt;/span> &lt;span style="color:#c1abea">id&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c1abea">commonMapper&lt;/span>.&lt;span style="color:#b3d23c">selectByPrimaryKey&lt;/span>(&lt;span style="color:#c1abea">id&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">List&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">T&lt;/span>&lt;span style="color:#c7bf54">&amp;gt;&lt;/span> &lt;span style="color:#00b1f7">getByField&lt;/span>(&lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">fieldName&lt;/span>, &lt;span style="color:#c1abea">Object&lt;/span> &lt;span style="color:#c1abea">value&lt;/span>) &lt;span style="color:#c678dd">throws&lt;/span> &lt;span style="color:#c1abea">ServiceException&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">T&lt;/span> &lt;span style="color:#c1abea">model&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">modelClass&lt;/span>.&lt;span style="color:#b3d23c">newInstance&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">Field&lt;/span> &lt;span style="color:#c1abea">field&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">modelClass&lt;/span>.&lt;span style="color:#b3d23c">getDeclaredField&lt;/span>(&lt;span style="color:#c1abea">fieldName&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">field&lt;/span>.&lt;span style="color:#b3d23c">setAccessible&lt;/span>(&lt;span style="color:#b756ff;font-weight:bold">true&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">field&lt;/span>.&lt;span style="color:#b3d23c">set&lt;/span>(&lt;span style="color:#c1abea">model&lt;/span>, &lt;span style="color:#c1abea">value&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c1abea">commonMapper&lt;/span>.&lt;span style="color:#b3d23c">select&lt;/span>(&lt;span style="color:#c1abea">model&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#c678dd">catch&lt;/span> (&lt;span style="color:#c1abea">ReflectiveOperationException&lt;/span> &lt;span style="color:#c1abea">e&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">e&lt;/span>.&lt;span style="color:#b3d23c">printStackTrace&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">throw&lt;/span> &lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">ServiceException&lt;/span>(&lt;span style="color:#c1abea">e&lt;/span>.&lt;span style="color:#b3d23c">getMessage&lt;/span>(), &lt;span style="color:#c1abea">e&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">List&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">T&lt;/span>&lt;span style="color:#c7bf54">&amp;gt;&lt;/span> &lt;span style="color:#00b1f7">getByIds&lt;/span>(&lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">ids&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c1abea">commonMapper&lt;/span>.&lt;span style="color:#b3d23c">selectByIds&lt;/span>(&lt;span style="color:#c1abea">ids&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">List&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">T&lt;/span>&lt;span style="color:#c7bf54">&amp;gt;&lt;/span> &lt;span style="color:#00b1f7">getByCondition&lt;/span>(&lt;span style="color:#c1abea">Condition&lt;/span> &lt;span style="color:#c1abea">condition&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c1abea">commonMapper&lt;/span>.&lt;span style="color:#b3d23c">selectByCondition&lt;/span>(&lt;span style="color:#c1abea">condition&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">List&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">T&lt;/span>&lt;span style="color:#c7bf54">&amp;gt;&lt;/span> &lt;span style="color:#00b1f7">getAll&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c1abea">commonMapper&lt;/span>.&lt;span style="color:#b3d23c">selectAll&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">PageInfo&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">T&lt;/span>&lt;span style="color:#c7bf54">&amp;gt;&lt;/span> &lt;span style="color:#00b1f7">getPage&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">PageHelper&lt;/span>.&lt;span style="color:#b3d23c">startPage&lt;/span>(&lt;span style="color:#c1abea">request&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">List&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">T&lt;/span>&lt;span style="color:#c7bf54">&amp;gt;&lt;/span> &lt;span style="color:#c1abea">list&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">commonMapper&lt;/span>.&lt;span style="color:#b3d23c">selectAll&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">PageInfo&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">T&lt;/span>&lt;span style="color:#c7bf54">&amp;gt;&lt;/span>(&lt;span style="color:#c1abea">list&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>CommonMapper.java&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">package&lt;/span> &lt;span style="color:#76a9f9">cn.com.hellowood.mapper.common&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">tk.mybatis.mapper.common.BaseMapper&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">tk.mybatis.mapper.common.ConditionMapper&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">tk.mybatis.mapper.common.IdsMapper&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">tk.mybatis.mapper.common.special.InsertListMapper&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c678dd">interface&lt;/span> &lt;span style="color:#76a9f9">CommonMapper&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">T&lt;/span>&lt;span style="color:#c7bf54">&amp;gt;&lt;/span> &lt;span style="color:#c678dd">extends&lt;/span> &lt;span style="color:#c1abea">BaseMapper&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">T&lt;/span>&lt;span style="color:#c7bf54">&amp;gt;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">ConditionMapper&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">T&lt;/span>&lt;span style="color:#c7bf54">&amp;gt;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">IdsMapper&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">T&lt;/span>&lt;span style="color:#c7bf54">&amp;gt;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">InsertListMapper&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">T&lt;/span>&lt;span style="color:#c7bf54">&amp;gt;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Product.java&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">package&lt;/span> &lt;span style="color:#76a9f9">cn.com.hellowood.mapper.modal&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">javax.persistence.Column&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">javax.persistence.GeneratedValue&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">javax.persistence.GenerationType&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">javax.persistence.Id&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c678dd">class&lt;/span> &lt;span style="color:#76a9f9">Product&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Id&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@GeneratedValue&lt;/span>(&lt;span style="color:#c1abea">strategy&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">GenerationType&lt;/span>.&lt;span style="color:#b3d23c">IDENTITY&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">private&lt;/span> &lt;span style="color:#c1abea">Integer&lt;/span> &lt;span style="color:#c1abea">id&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Column&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">private&lt;/span> &lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">name&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Column&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">private&lt;/span> &lt;span style="color:#c1abea">Double&lt;/span> &lt;span style="color:#c1abea">price&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8a93a5;font-style:italic">// get, set ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>ProductDao.java&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">package&lt;/span> &lt;span style="color:#76a9f9">cn.com.hellowood.mapper.dao&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">cn.com.hellowood.mapper.common.CommonMapper&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">cn.com.hellowood.mapper.modal.Product&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">org.apache.ibatis.annotations.Mapper&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">@Mapper&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c678dd">interface&lt;/span> &lt;span style="color:#76a9f9">ProductDao&lt;/span> &lt;span style="color:#c678dd">extends&lt;/span> &lt;span style="color:#c1abea">CommonMapper&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">Product&lt;/span>&lt;span style="color:#c7bf54">&amp;gt;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>ProductMapper.xml&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34; ?&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">&amp;lt;!DOCTYPE mapper PUBLIC &amp;#34;-//mybatis.org//DTD Mapper 3.0//EN&amp;#34; &amp;#34;http://mybatis.org/dtd/mybatis-3-mapper.dtd&amp;#34; &amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">&amp;lt;mapper&lt;/span> &lt;span style="color:#b3d23c">namespace=&lt;/span>&lt;span style="color:#98c379">&amp;#34;cn.com.hellowood.mapper.dao.ProductDao&amp;#34;&lt;/span>&lt;span style="color:#e06c75">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;lt;resultMap&lt;/span> &lt;span style="color:#b3d23c">id=&lt;/span>&lt;span style="color:#98c379">&amp;#34;baseResultMap&amp;#34;&lt;/span> &lt;span style="color:#b3d23c">type=&lt;/span>&lt;span style="color:#98c379">&amp;#34;cn.com.hellowood.mapper.modal.Product&amp;#34;&lt;/span>&lt;span style="color:#e06c75">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;lt;id&lt;/span> &lt;span style="color:#b3d23c">column=&lt;/span>&lt;span style="color:#98c379">&amp;#34;id&amp;#34;&lt;/span> &lt;span style="color:#b3d23c">property=&lt;/span>&lt;span style="color:#98c379">&amp;#34;id&amp;#34;&lt;/span> &lt;span style="color:#b3d23c">javaType=&lt;/span>&lt;span style="color:#98c379">&amp;#34;java.lang.Integer&amp;#34;&lt;/span> &lt;span style="color:#b3d23c">jdbcType=&lt;/span>&lt;span style="color:#98c379">&amp;#34;INTEGER&amp;#34;&lt;/span>&lt;span style="color:#e06c75">&amp;gt;&amp;lt;/id&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;lt;result&lt;/span> &lt;span style="color:#b3d23c">column=&lt;/span>&lt;span style="color:#98c379">&amp;#34;name&amp;#34;&lt;/span> &lt;span style="color:#b3d23c">property=&lt;/span>&lt;span style="color:#98c379">&amp;#34;name&amp;#34;&lt;/span> &lt;span style="color:#b3d23c">javaType=&lt;/span>&lt;span style="color:#98c379">&amp;#34;java.lang.String&amp;#34;&lt;/span> &lt;span style="color:#b3d23c">jdbcType=&lt;/span>&lt;span style="color:#98c379">&amp;#34;VARCHAR&amp;#34;&lt;/span>&lt;span style="color:#e06c75">&amp;gt;&amp;lt;/result&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;lt;result&lt;/span> &lt;span style="color:#b3d23c">column=&lt;/span>&lt;span style="color:#98c379">&amp;#34;price&amp;#34;&lt;/span> &lt;span style="color:#b3d23c">property=&lt;/span>&lt;span style="color:#98c379">&amp;#34;price&amp;#34;&lt;/span> &lt;span style="color:#b3d23c">javaType=&lt;/span>&lt;span style="color:#98c379">&amp;#34;java.lang.Double&amp;#34;&lt;/span> &lt;span style="color:#b3d23c">jdbcType=&lt;/span>&lt;span style="color:#98c379">&amp;#34;BIGINT&amp;#34;&lt;/span>&lt;span style="color:#e06c75">&amp;gt;&amp;lt;/result&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;lt;/resultMap&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">&amp;lt;/mapper&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="使用">使用&lt;/h2>
&lt;blockquote>
&lt;p>直接调用 Service 的方法就可以实现正常的单表 CRUD，但是对于多表的操作依然需要写在 XML 里&lt;/p></description></item><item><title>SpringBoot-使用 Spring Session 实现 Session 共享</title><link>https://blog.hellowood.dev/posts/springboot-%E4%BD%BF%E7%94%A8-spring-session-%E5%AE%9E%E7%8E%B0-session-%E5%85%B1%E4%BA%AB/</link><pubDate>Sun, 08 Apr 2018 15:09:41 +0000</pubDate><guid>https://blog.hellowood.dev/posts/springboot-%E4%BD%BF%E7%94%A8-spring-session-%E5%AE%9E%E7%8E%B0-session-%E5%85%B1%E4%BA%AB/</guid><description>&lt;h2 id="通过-redis-共享">通过 Redis 共享&lt;/h2>
&lt;h3 id="配置">配置&lt;/h3>
&lt;ul>
&lt;li>配置并启动 Redis&lt;/li>
&lt;li>添加依赖&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-gradle" data-lang="gradle">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">dependencies&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">compile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;org.springframework.session:spring-session&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">compile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;org.springframework.boot:spring-boot-starter-data-redis&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">compile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;org.springframework.boot:spring-boot-starter-web&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">testCompile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;org.springframework.boot:spring-boot-starter-test&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>添加配置&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>spring.session.store-type=redis
spring.redis.host=localhost
spring.redis.port=6379
spring.redis.database=0
spring.redis.password=123456
&lt;/code>&lt;/pre>&lt;h3 id="使用">使用&lt;/h3>
&lt;ul>
&lt;li>启用 Redis Session&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">org.springframework.boot.SpringApplication&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">org.springframework.boot.autoconfigure.SpringBootApplication&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">org.springframework.session.data.redis.config.annotation.web.http.EnableRedisHttpSession&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">@SpringBootApplication&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">@EnableRedisHttpSession&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c678dd">class&lt;/span> &lt;span style="color:#76a9f9">SessionApplication&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c678dd">static&lt;/span> &lt;span style="color:#ef8383">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span>(&lt;span style="color:#c1abea">String&lt;/span>&lt;span style="color:#c7bf54">[]&lt;/span> &lt;span style="color:#c1abea">args&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">SpringApplication&lt;/span>.&lt;span style="color:#b3d23c">run&lt;/span>(&lt;span style="color:#c1abea">SessionApplication&lt;/span>.&lt;span style="color:#b3d23c">class&lt;/span>, &lt;span style="color:#c1abea">args&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>@EnableRedisHttpSession&lt;/code> 也可以不写，在配置文件里配置 &lt;code>spring.session.store-type=redis&lt;/code> 即可&lt;/p>
&lt;ul>
&lt;li>添加 Controller&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">org.springframework.web.bind.annotation.RequestMapping&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">org.springframework.web.bind.annotation.ResponseBody&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">org.springframework.web.bind.annotation.RestController&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">javax.servlet.http.HttpSession&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">@RestController&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c678dd">class&lt;/span> &lt;span style="color:#76a9f9">SessionController&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@RequestMapping&lt;/span>(&lt;span style="color:#98c379">&amp;#34;/&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@ResponseBody&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#00b1f7">root&lt;/span>(&lt;span style="color:#c1abea">HttpSession&lt;/span> &lt;span style="color:#c1abea">session&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c1abea">session&lt;/span>.&lt;span style="color:#b3d23c">getId&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>访问 &lt;code>http://localhost:8080&lt;/code>, 此时会显示 &lt;code>Session ID&lt;/code>, 重新启动应用，再次访问 &lt;code>http://localhost:8080&lt;/code>，此时 &lt;code>Session ID&lt;/code> 应该和第一次访问一致，说明 &lt;code>Session&lt;/code> 已被正确共享&lt;/p></description></item><item><title>SpringBoot 使用QuartzJob实现任务控制</title><link>https://blog.hellowood.dev/posts/springboot-%E4%BD%BF%E7%94%A8quartzjob%E5%AE%9E%E7%8E%B0%E4%BB%BB%E5%8A%A1%E6%8E%A7%E5%88%B6/</link><pubDate>Mon, 12 Feb 2018 18:22:43 +0000</pubDate><guid>https://blog.hellowood.dev/posts/springboot-%E4%BD%BF%E7%94%A8quartzjob%E5%AE%9E%E7%8E%B0%E4%BB%BB%E5%8A%A1%E6%8E%A7%E5%88%B6/</guid><description>&lt;blockquote>
&lt;p>项目地址&lt;a href="https://github.com/helloworlde/SpringBootCollection/tree/master/SpringBoot-ScheduledJob">https://github.com/helloworlde/SpringBootCollection/tree/master/SpringBoot-ScheduledJob&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>在 SpringBoot 中通过 &lt;code>@Schedule&lt;/code>注解就可以简单的实现定时任务，但是这种方式够灵活，如果想要修改执行状态就必须修改代码；另外一种实现方式是通过 &lt;a href="http://www.quartz-scheduler.org/">&lt;code>Quartz&lt;/code>&lt;/a> 实现任务调度&lt;/p>
&lt;/blockquote>
&lt;h2 id="通过-springboot-实现简单任务">通过 SpringBoot 实现简单任务&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">org.slf4j.Logger&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">org.slf4j.LoggerFactory&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">org.springframework.scheduling.annotation.Scheduled&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import static&lt;/span> &lt;span style="color:#76a9f9">cn.com.hellowood.scheduledjob.utils.ApplicationUtils.currentDateTime&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">@Component&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c678dd">class&lt;/span> &lt;span style="color:#76a9f9">StaticJob&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">private&lt;/span> &lt;span style="color:#c678dd">final&lt;/span> &lt;span style="color:#c1abea">Logger&lt;/span> &lt;span style="color:#c1abea">logger&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">LoggerFactory&lt;/span>.&lt;span style="color:#b3d23c">getLogger&lt;/span>(&lt;span style="color:#c1abea">getClass&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">private&lt;/span> &lt;span style="color:#c678dd">final&lt;/span> &lt;span style="color:#c678dd">static&lt;/span> &lt;span style="color:#ef8383">long&lt;/span> &lt;span style="color:#c1abea">SECOND&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">1000&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8a93a5;font-style:italic">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic"> * fixedDelay: 固定延迟时间执行
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Scheduled&lt;/span>(&lt;span style="color:#c1abea">fixedDelay&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">10&lt;/span> &lt;span style="color:#c7bf54">*&lt;/span> &lt;span style="color:#c1abea">SECOND&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#ef8383">void&lt;/span> &lt;span style="color:#00b1f7">fixedDelayJob&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">logger&lt;/span>.&lt;span style="color:#b3d23c">info&lt;/span>(&lt;span style="color:#98c379">&amp;#34;{}\tfixedDelay&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">currentDateTime&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8a93a5;font-style:italic">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic"> * fixedRate: 固定间隔时间执行
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Scheduled&lt;/span>(&lt;span style="color:#c1abea">fixedRate&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">10&lt;/span> &lt;span style="color:#c7bf54">*&lt;/span> &lt;span style="color:#c1abea">SECOND&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#ef8383">void&lt;/span> &lt;span style="color:#00b1f7">fixedRate&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">logger&lt;/span>.&lt;span style="color:#b3d23c">info&lt;/span>(&lt;span style="color:#98c379">&amp;#34;{}\tfixedRate&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">currentDateTime&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8a93a5;font-style:italic">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic"> * cron: 通过 Cron 表达式控制执行
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Scheduled&lt;/span>(&lt;span style="color:#c1abea">cron&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;*/10 * * * * *&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#ef8383">void&lt;/span> &lt;span style="color:#00b1f7">cron&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">logger&lt;/span>.&lt;span style="color:#b3d23c">info&lt;/span>(&lt;span style="color:#98c379">&amp;#34;{}\tcron&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">currentDateTime&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="springboot-集成-quartz-实现可控的任务">SpringBoot 集成 Quartz 实现可控的任务&lt;/h2>
&lt;blockquote>
&lt;p>在 SpringBoot 的2.0 以上版本直接集成了 Quartz；
本文通过 RESTful 接口 来实现，实现的大概思路是通过实现 &lt;code>org.quartz.Job&lt;/code>接口，在其&lt;code>execute()&lt;/code>中实现自己的逻辑；通过调用 &lt;code>org.quartz.Scheduler&lt;/code>的接口实现任务的创建，运行，暂停，更新，删除功能，核心的代码在 &lt;code>cn.com.hellowood.scheduledjob.job.ScheduleUtil&lt;/code>里&lt;/p></description></item><item><title>SpringBoot 使用 MyBatis PageHelper 分页插件</title><link>https://blog.hellowood.dev/posts/springboot-%E4%BD%BF%E7%94%A8-mybatis-pagehelper-%E5%88%86%E9%A1%B5%E6%8F%92%E4%BB%B6/</link><pubDate>Sat, 03 Feb 2018 11:56:38 +0000</pubDate><guid>https://blog.hellowood.dev/posts/springboot-%E4%BD%BF%E7%94%A8-mybatis-pagehelper-%E5%88%86%E9%A1%B5%E6%8F%92%E4%BB%B6/</guid><description>&lt;blockquote>
&lt;p>&lt;a href="https://github.com/pagehelper/Mybatis-PageHelper">MyBatis PageHelper&lt;/a> 是一个 MyBatis 分页插件，能够比较方便的实现 MyBatis 的分页&lt;/p>
&lt;/blockquote>
&lt;h2 id="添加依赖">添加依赖&lt;/h2>
&lt;ul>
&lt;li>build.gradle&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-gradle" data-lang="gradle">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">compile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;com.github.pagehelper:pagehelper-spring-boot-starter:1.2.3&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="添加配置">添加配置&lt;/h2>
&lt;ul>
&lt;li>application.properties&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>pagehelper.helper-dialect=mysql
pagehelper.reasonable=true
pagehelper.support-methods-arguments=true
pagehelper.params=count=countSql
pagehelper.row-bounds-with-count=true
pagehelper.offset-as-page-num=true
pagehelper.page-size-zero=true
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>&lt;code>pagehelper.helper-dialect&lt;/code> : 指定分页插件使用哪种语言&lt;/li>
&lt;li>&lt;code>pagehelper.offset-as-page-num&lt;/code> : 默认为 &lt;code>false&lt;/code>, 该参数对使用&lt;code>RowBounds&lt;/code>作为分页参数时有效，当为&lt;code>true&lt;/code>时，会将&lt;code>RowBounds&lt;/code>的&lt;code>offset&lt;/code>参数当成&lt;code>pageNum&lt;/code>使用&lt;/li>
&lt;li>&lt;code>pagehelper.row-bounds-with-count&lt;/code> : 默认为&lt;code>false&lt;/code>，该参数对使用&lt;code>RowBounds&lt;/code>作为分页参数时有效，当该参数值为&lt;code>true&lt;/code>时，使用&lt;code>RowBounds&lt;/code>分页会进行&lt;code>count&lt;/code>查询&lt;/li>
&lt;li>&lt;code>pagehelper.page-size-zero&lt;/code> : 默认为&lt;code>false&lt;/code>,当该参数为&lt;code>true&lt;/code>时，如果&lt;code>pageSize=0&lt;/code>或者&lt;code>RowBounds.limit=0&lt;/code>就会查询所有结果&lt;/li>
&lt;li>&lt;code>pagehelper.reasonable&lt;/code> : 分页合理化参数，默认为&lt;code>false&lt;/code>，当该值为&lt;code>true&lt;/code>，&lt;code>pageNum&amp;lt;=0&lt;/code>默认查询第一页，&lt;code>pageNum&amp;gt;pages&lt;/code>时会查询最后一页，&lt;code>false&lt;/code>时直接根据参数进行查询&lt;/li>
&lt;li>&lt;code>pagehelper.params&lt;/code> : 为了支持&lt;code>startPage(Object params)&lt;/code>方法，增加该参数来配置参数映射，用于从对象中根据属性名取值，可以配置&lt;code>pageNum,pageSize,pageSizeZero, reasonable&lt;/code>, 不配置映射是使用默认值， 默认值为&lt;code>pageNum=pageNum;pageSize=pageSize;count=countSql;reasonable=reasonable;pageSizeZero=pageSizeZero&lt;/code>&lt;/li>
&lt;li>&lt;code>pagehelper.support-methods-arguments&lt;/code> : 支持通过 &lt;code>Mapper&lt;/code>接口参数来传递分页参数，默认为&lt;code>false&lt;/code>, 分页插件会从查询方法的参数中根据&lt;code>params&lt;/code>配置的字段中取值，查找到合适的就进行分页&lt;/li>
&lt;li>&lt;code>pagehelper.auto-runtime-dialect&lt;/code> : 默认为&lt;code>false&lt;/code>, 为&lt;code>true&lt;/code>时允许在运行时根据多数据源自动识别对应的方言进行分页&lt;/li>
&lt;li>&lt;code>pagehelper.close-conn&lt;/code> : 默认为&lt;code>true&lt;/code>, 当使用运行是动态数据源或者没有设置&lt;code>helperDialect&lt;/code>属性自动获取数据库类型时，会自动获取一个数据库连接，通过该属性来设置是否关闭获取的这个连接，默认为&lt;code>true&lt;/code>关闭，&lt;code>false&lt;/code>不会自动关闭&lt;/li>
&lt;/ul>
&lt;h2 id="使用">使用&lt;/h2>
&lt;ul>
&lt;li>Product.java&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c678dd">class&lt;/span> &lt;span style="color:#76a9f9">Product&lt;/span> &lt;span style="color:#c678dd">implements&lt;/span> &lt;span style="color:#c1abea">Serializable&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">private&lt;/span> &lt;span style="color:#ef8383">long&lt;/span> &lt;span style="color:#c1abea">id&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">private&lt;/span> &lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">name&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">private&lt;/span> &lt;span style="color:#ef8383">long&lt;/span> &lt;span style="color:#c1abea">price&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">private&lt;/span> &lt;span style="color:#c1abea">Integer&lt;/span> &lt;span style="color:#c1abea">pageNum&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">private&lt;/span> &lt;span style="color:#c1abea">Integer&lt;/span> &lt;span style="color:#c1abea">pageSize&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8a93a5;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>ProductMapper.xml&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">&amp;lt;resultMap&lt;/span> &lt;span style="color:#b3d23c">id=&lt;/span>&lt;span style="color:#98c379">&amp;#34;baseResultMap&amp;#34;&lt;/span> &lt;span style="color:#b3d23c">type=&lt;/span>&lt;span style="color:#98c379">&amp;#34;cn.com.hellowood.mybatis.modal.Product&amp;#34;&lt;/span>&lt;span style="color:#e06c75">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;lt;id&lt;/span> &lt;span style="color:#b3d23c">column=&lt;/span>&lt;span style="color:#98c379">&amp;#34;id&amp;#34;&lt;/span> &lt;span style="color:#b3d23c">property=&lt;/span>&lt;span style="color:#98c379">&amp;#34;id&amp;#34;&lt;/span> &lt;span style="color:#b3d23c">javaType=&lt;/span>&lt;span style="color:#98c379">&amp;#34;java.lang.Long&amp;#34;&lt;/span> &lt;span style="color:#b3d23c">jdbcType=&lt;/span>&lt;span style="color:#98c379">&amp;#34;INTEGER&amp;#34;&lt;/span>&lt;span style="color:#e06c75">&amp;gt;&amp;lt;/id&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;lt;result&lt;/span> &lt;span style="color:#b3d23c">column=&lt;/span>&lt;span style="color:#98c379">&amp;#34;name&amp;#34;&lt;/span> &lt;span style="color:#b3d23c">property=&lt;/span>&lt;span style="color:#98c379">&amp;#34;name&amp;#34;&lt;/span> &lt;span style="color:#b3d23c">javaType=&lt;/span>&lt;span style="color:#98c379">&amp;#34;java.lang.String&amp;#34;&lt;/span> &lt;span style="color:#b3d23c">jdbcType=&lt;/span>&lt;span style="color:#98c379">&amp;#34;VARCHAR&amp;#34;&lt;/span>&lt;span style="color:#e06c75">&amp;gt;&amp;lt;/result&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;lt;result&lt;/span> &lt;span style="color:#b3d23c">column=&lt;/span>&lt;span style="color:#98c379">&amp;#34;price&amp;#34;&lt;/span> &lt;span style="color:#b3d23c">property=&lt;/span>&lt;span style="color:#98c379">&amp;#34;price&amp;#34;&lt;/span> &lt;span style="color:#b3d23c">javaType=&lt;/span>&lt;span style="color:#98c379">&amp;#34;java.lang.Long&amp;#34;&lt;/span> &lt;span style="color:#b3d23c">jdbcType=&lt;/span>&lt;span style="color:#98c379">&amp;#34;BIGINT&amp;#34;&lt;/span>&lt;span style="color:#e06c75">&amp;gt;&amp;lt;/result&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">&amp;lt;/resultMap&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="使用pagehelperstartpage或-pagehelperoffsetpage">使用&lt;code>PageHelper.startPage()&lt;/code>或 &lt;code>PageHelper.offsetPage()&lt;/code>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">PageInfo&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">Product&lt;/span>&lt;span style="color:#c7bf54">&amp;gt;&lt;/span> &lt;span style="color:#00b1f7">getByPageHelper&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">PageHelper&lt;/span>.&lt;span style="color:#b3d23c">startPage&lt;/span>(&lt;span style="color:#c1abea">request&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8a93a5;font-style:italic">// 或&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8a93a5;font-style:italic">// PageHelper.startPage(0,10);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8a93a5;font-style:italic">// PageHelper.offsetPage(0,10);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">PageInfo&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&amp;gt;&lt;/span>(&lt;span style="color:#c1abea">productDao&lt;/span>.&lt;span style="color:#b3d23c">getByPageHelper&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">&amp;lt;select&lt;/span> &lt;span style="color:#b3d23c">id=&lt;/span>&lt;span style="color:#98c379">&amp;#34;getByPageHelper&amp;#34;&lt;/span> &lt;span style="color:#b3d23c">resultMap=&lt;/span>&lt;span style="color:#98c379">&amp;#34;baseResultMap&amp;#34;&lt;/span>&lt;span style="color:#e06c75">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SELECT *
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> FROM product
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">&amp;lt;/select&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="使用rowbounds传递分页参数">使用&lt;code>RowBounds&lt;/code>传递分页参数&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">PageInfo&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">Product&lt;/span>&lt;span style="color:#c7bf54">&amp;gt;&lt;/span> &lt;span style="color:#00b1f7">getByRowBounds&lt;/span>(&lt;span style="color:#c1abea">Integer&lt;/span> &lt;span style="color:#c1abea">pageNum&lt;/span>, &lt;span style="color:#c1abea">Integer&lt;/span> &lt;span style="color:#c1abea">pageSize&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">PageInfo&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&amp;gt;&lt;/span>(&lt;span style="color:#c1abea">productDao&lt;/span>.&lt;span style="color:#b3d23c">getByRowBounds&lt;/span>(&lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">RowBounds&lt;/span>(&lt;span style="color:#c1abea">pageNum&lt;/span>, &lt;span style="color:#c1abea">pageSize&lt;/span>)));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">&amp;lt;select&lt;/span> &lt;span style="color:#b3d23c">id=&lt;/span>&lt;span style="color:#98c379">&amp;#34;getByRowBounds&amp;#34;&lt;/span> &lt;span style="color:#b3d23c">resultMap=&lt;/span>&lt;span style="color:#98c379">&amp;#34;baseResultMap&amp;#34;&lt;/span>&lt;span style="color:#e06c75">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SELECT *
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> FROM product
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">&amp;lt;/select&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="dao-接口直接传递分页参数">Dao 接口直接传递分页参数&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">PageInfo&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">Product&lt;/span>&lt;span style="color:#c7bf54">&amp;gt;&lt;/span> &lt;span style="color:#00b1f7">getByInterfaceArgs&lt;/span>(&lt;span style="color:#c1abea">Integer&lt;/span> &lt;span style="color:#c1abea">pageNum&lt;/span>, &lt;span style="color:#c1abea">Integer&lt;/span> &lt;span style="color:#c1abea">pageSize&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">PageInfo&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&amp;gt;&lt;/span>(&lt;span style="color:#c1abea">productDao&lt;/span>.&lt;span style="color:#b3d23c">getByInterfaceArgs&lt;/span>(&lt;span style="color:#c1abea">pageNum&lt;/span>, &lt;span style="color:#c1abea">pageSize&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">&amp;lt;select&lt;/span> &lt;span style="color:#b3d23c">id=&lt;/span>&lt;span style="color:#98c379">&amp;#34;getByInterfaceArgs&amp;#34;&lt;/span> &lt;span style="color:#b3d23c">resultMap=&lt;/span>&lt;span style="color:#98c379">&amp;#34;baseResultMap&amp;#34;&lt;/span>&lt;span style="color:#e06c75">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SELECT *
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> FROM product
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">&amp;lt;/select&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="通过modal传递分页参数">通过&lt;code>Modal&lt;/code>传递分页参数&lt;/h3>
&lt;ul>
&lt;li>需要 &lt;code>Product&lt;/code>中的&lt;code>pageSize&lt;/code>和&lt;code>pageNum&lt;/code>都有效&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">PageInfo&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">Product&lt;/span>&lt;span style="color:#c7bf54">&amp;gt;&lt;/span> &lt;span style="color:#00b1f7">getByModalArgs&lt;/span>(&lt;span style="color:#c1abea">Product&lt;/span> &lt;span style="color:#c1abea">product&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">PageInfo&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&amp;gt;&lt;/span>(&lt;span style="color:#c1abea">productDao&lt;/span>.&lt;span style="color:#b3d23c">getByModalArgs&lt;/span>(&lt;span style="color:#c1abea">product&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">&amp;lt;select&lt;/span> &lt;span style="color:#b3d23c">id=&lt;/span>&lt;span style="color:#98c379">&amp;#34;getByModalArgs&amp;#34;&lt;/span> &lt;span style="color:#b3d23c">resultMap=&lt;/span>&lt;span style="color:#98c379">&amp;#34;baseResultMap&amp;#34;&lt;/span> &lt;span style="color:#b3d23c">parameterType=&lt;/span>&lt;span style="color:#98c379">&amp;#34;cn.com.hellowood.mybatis.modal.Product&amp;#34;&lt;/span>&lt;span style="color:#e06c75">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SELECT *
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> FROM product
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">&amp;lt;/select&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>SpringBoot 使用 ELK 日志收集系统安装配置</title><link>https://blog.hellowood.dev/posts/springboot-%E4%BD%BF%E7%94%A8-elk-%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</link><pubDate>Sun, 21 Jan 2018 21:16:10 +0000</pubDate><guid>https://blog.hellowood.dev/posts/springboot-%E4%BD%BF%E7%94%A8-elk-%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</guid><description>&lt;h2 id="elasticsearch">Elasticsearch&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>下载 &lt;a href="https://www.elastic.co/cn/downloads/elasticsearch">Elasticsearch&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>解压并运行 &lt;code>bin/elasticsearch&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>访问 &lt;code>http://localhost:9200&lt;/code>, 会看到以下内容&lt;/p>
&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>{
 &amp;#34;name&amp;#34; : &amp;#34;9KA6kPN&amp;#34;,
 &amp;#34;cluster_name&amp;#34; : &amp;#34;elasticsearch&amp;#34;,
 &amp;#34;cluster_uuid&amp;#34; : &amp;#34;BtscSPXeR0manhl2LibpuA&amp;#34;,
 &amp;#34;version&amp;#34; : {
 &amp;#34;number&amp;#34; : &amp;#34;6.1.1&amp;#34;,
 &amp;#34;build_hash&amp;#34; : &amp;#34;bd92e7f&amp;#34;,
 &amp;#34;build_date&amp;#34; : &amp;#34;2017-12-17T20:23:25.338Z&amp;#34;,
 &amp;#34;build_snapshot&amp;#34; : false,
 &amp;#34;lucene_version&amp;#34; : &amp;#34;7.1.0&amp;#34;,
 &amp;#34;minimum_wire_compatibility_version&amp;#34; : &amp;#34;5.6.0&amp;#34;,
 &amp;#34;minimum_index_compatibility_version&amp;#34; : &amp;#34;5.0.0&amp;#34;
 },
 &amp;#34;tagline&amp;#34; : &amp;#34;You Know, for Search&amp;#34;
}
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>安装 Head 插件&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>bin/plugin install mobz/elasticsearch-head
&lt;/code>&lt;/pre>&lt;h2 id="logstash">Logstash&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>下载 &lt;a href="https://www.elastic.co/cn/downloads/logstash">Logstash&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>解压&lt;/p>
&lt;/li>
&lt;li>
&lt;p>添加配置&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>添加 &lt;code>log_to_es.conf&lt;/code>&lt;/p>
&lt;pre tabindex="0">&lt;code>input {
 tcp {
 host =&amp;gt; &amp;#34;localhost&amp;#34;
 port =&amp;gt; 4560
 mode =&amp;gt; &amp;#34;server&amp;#34;
 tags =&amp;gt; [&amp;#34;applog&amp;#34;]
 codec =&amp;gt; json_lines
 }
}
output {
 stdout{codec =&amp;gt;rubydebug}
 elasticsearch {
 action =&amp;gt; &amp;#34;index&amp;#34; #The operation on ES
 hosts =&amp;gt; &amp;#34;localhost:9200&amp;#34; #ElasticSearch host, can be array.
 index =&amp;gt; &amp;#34;applog&amp;#34; #The index to write data to.
 }
}
&lt;/code>&lt;/pre>&lt;p>这是从本地通过 TCP 读取读取日志并发送到 ElasticSearch&lt;/p></description></item><item><title>SpringBoot logback 输出日志到数据库、Logstash</title><link>https://blog.hellowood.dev/posts/springboot-logback-%E8%BE%93%E5%87%BA%E6%97%A5%E5%BF%97%E5%88%B0%E6%95%B0%E6%8D%AE%E5%BA%93logstash/</link><pubDate>Fri, 19 Jan 2018 21:25:42 +0000</pubDate><guid>https://blog.hellowood.dev/posts/springboot-logback-%E8%BE%93%E5%87%BA%E6%97%A5%E5%BF%97%E5%88%B0%E6%95%B0%E6%8D%AE%E5%BA%93logstash/</guid><description>&lt;h2 id="输入日志到数据库">输入日志到数据库&lt;/h2>
&lt;ul>
&lt;li>创建表&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>DROP TABLE IF EXISTS logging_event;
CREATE TABLE logging_event
(
 timestmp BIGINT NOT NULL,
 formatted_message TEXT NOT NULL,
 logger_name VARCHAR(254) NOT NULL,
 level_string VARCHAR(254) NOT NULL,
 thread_name VARCHAR(254),
 reference_flag SMALLINT,
 arg0 VARCHAR(254),
 arg1 VARCHAR(254),
 arg2 VARCHAR(254),
 arg3 VARCHAR(254),
 caller_filename VARCHAR(254) NOT NULL,
 caller_class VARCHAR(254) NOT NULL,
 caller_method VARCHAR(254) NOT NULL,
 caller_line CHAR(4) NOT NULL,
 event_id BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY
);

DROP TABLE IF EXISTS logging_event_property;
CREATE TABLE logging_event_property
(
 event_id BIGINT NOT NULL,
 mapped_key VARCHAR(254) NOT NULL,
 mapped_value TEXT,
 PRIMARY KEY (event_id, mapped_key),
 FOREIGN KEY (event_id) REFERENCES logging_event (event_id)
);

DROP TABLE IF EXISTS logging_event_exception;
CREATE TABLE logging_event_exception
(
 event_id BIGINT NOT NULL,
 i SMALLINT NOT NULL,
 trace_line VARCHAR(254) NOT NULL,
 PRIMARY KEY (event_id, i),
 FOREIGN KEY (event_id) REFERENCES logging_event (event_id)
);
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>配置&lt;code>logback.xml&lt;/code>&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;
&amp;lt;configuration&amp;gt;
 &amp;lt;!--日志异步到数据库 --&amp;gt;
 &amp;lt;appender name=&amp;#34;DB&amp;#34; class=&amp;#34;ch.qos.logback.classic.db.DBAppender&amp;#34;&amp;gt;
 &amp;lt;!--日志异步到数据库--&amp;gt;
 &amp;lt;connectionSource class=&amp;#34;ch.qos.logback.core.db.DriverManagerConnectionSource&amp;#34;&amp;gt;
 &amp;lt;driverClass&amp;gt;com.mysql.jdbc.Driver&amp;lt;/driverClass&amp;gt;
 &amp;lt;url&amp;gt;jdbc:mysql://localhost:3306/log?useSSL=false&amp;lt;/url&amp;gt;
 &amp;lt;user&amp;gt;root&amp;lt;/user&amp;gt;
 &amp;lt;password&amp;gt;123456&amp;lt;/password&amp;gt;
 &amp;lt;/connectionSource&amp;gt;
 &amp;lt;/appender&amp;gt;

 &amp;lt;root level=&amp;#34;INFO&amp;#34;&amp;gt;
 &amp;lt;appender-ref ref=&amp;#34;DB&amp;#34;/&amp;gt;
 &amp;lt;/root&amp;gt;
&amp;lt;/configuration&amp;gt;
&lt;/code>&lt;/pre>&lt;h2 id="输入日志到-logstashhttpswwwelasticcocnproductslogstash">输入日志到 &lt;a href="https://www.elastic.co/cn/products/logstash">&lt;code>Logstash&lt;/code>&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>logback.xml&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;
&amp;lt;configuration scan=&amp;#34;true&amp;#34; scanPeriod=&amp;#34;60 seconds&amp;#34; debug=&amp;#34;false&amp;#34;&amp;gt;

 &amp;lt;!--日志导出的到 Logstash--&amp;gt;
 &amp;lt;appender name=&amp;#34;LOGSTASH&amp;#34; class=&amp;#34;net.logstash.logback.appender.LogstashTcpSocketAppender&amp;#34;&amp;gt;
 &amp;lt;destination&amp;gt;127.0.0.1:4560&amp;lt;/destination&amp;gt;
 &amp;lt;encoder chaset=&amp;#34;UTF-8&amp;#34; class=&amp;#34;net.logstash.logback.encoder.LogstashEncoder&amp;#34;&amp;gt;
 &amp;lt;customFields&amp;gt;{&amp;#34;appname&amp;#34;:&amp;#34;SpringBootLog&amp;#34;}&amp;lt;/customFields&amp;gt;
 &amp;lt;/encoder&amp;gt;
 &amp;lt;/appender&amp;gt;

 &amp;lt;root level=&amp;#34;INFO&amp;#34;&amp;gt;
 &amp;lt;appender-ref ref=&amp;#34;LOGSTASH&amp;#34;/&amp;gt;
 &amp;lt;/root&amp;gt;
&amp;lt;/configuration&amp;gt;
&lt;/code>&lt;/pre></description></item><item><title>SpringBoot 中日志使用</title><link>https://blog.hellowood.dev/posts/springboot-%E4%B8%AD%E6%97%A5%E5%BF%97%E4%BD%BF%E7%94%A8/</link><pubDate>Fri, 19 Jan 2018 21:23:45 +0000</pubDate><guid>https://blog.hellowood.dev/posts/springboot-%E4%B8%AD%E6%97%A5%E5%BF%97%E4%BD%BF%E7%94%A8/</guid><description>&lt;h2 id="配置日志输出到文件">配置日志输出到文件&lt;/h2>
&lt;pre tabindex="0">&lt;code># 输出到指定文件
logging.file=./logs/application.log

# 输出到指定目录下（会写入到 spring.log 中）
logging.path=./logs
&lt;/code>&lt;/pre>&lt;p>当同时存在 &lt;code>logging.path&lt;/code> 和 &lt;code>logging.file&lt;/code> 时 &lt;code>logging.path&lt;/code> 无效&lt;/p>
&lt;h2 id="日志中添加信息">日志中添加信息&lt;/h2>
&lt;p>向日志中添加自定义信息可以使用 &lt;code>MDC&lt;/code>类来实现&lt;/p>
&lt;ul>
&lt;li>配置文件&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>logging.pattern.level=user:%X{user} %5p
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>类：
&lt;ul>
&lt;li>&lt;code>org.apache.log4j.MDC&lt;/code>&lt;/li>
&lt;li>&lt;code>org.jboss.logging.MDC &lt;/code>&lt;/li>
&lt;li>&lt;code>org.slf4j.MDC&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>MDC.put(&amp;#34;user&amp;#34;, &amp;#34;Hello&amp;#34;);
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>输出结果&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>2018-01-18 23:55:10.836 user:Hello INFO 7011 --- [nio-8080-exec-1] cn.com.hellowood.log.LogController : log 2
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="logback-配置">logback 配置&lt;/h2>
&lt;h3 id="标签属性">标签属性&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;code>&amp;lt;configuration&amp;gt;&lt;/code>&lt;/p>
&lt;ul>
&lt;li>&lt;code>scan&lt;/code>: 当属性设置为 &lt;code>true&lt;/code> 时， 配置文件如果发生变化会被重新加载，默认为&lt;code>true&lt;/code>&lt;/li>
&lt;li>&lt;code>scanPeriod&lt;/code>: 设置监测配置文件是否修改的时间间隔，默认单位是毫秒，默认时间间隔1分钟&lt;/li>
&lt;li>&lt;code>debug&lt;/code>：当属性设置为&lt;code>true&lt;/code>时，将打印&lt;code>logback&lt;/code>内部的日志信息，默认为 &lt;code>false&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;code>&amp;lt;root&amp;gt;&lt;/code>：用来指定最基础的日志输出级别&lt;/p>
&lt;ul>
&lt;li>&lt;code>level&lt;/code>：设置日志打印级别，大小写不敏感，可以是&lt;code>TRACE,DEBUG,INFO,ERROR,ALL,OFF&lt;/code>，默认&lt;code>DEBUG&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>&amp;lt;root level=&amp;#34;debug&amp;#34;&amp;gt;
 &amp;lt;appender-ref ref=&amp;#34;console&amp;#34; /&amp;gt;
 &amp;lt;appender-ref ref=&amp;#34;file&amp;#34; /&amp;gt;
&amp;lt;/root&amp;gt;
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>
&lt;p>&lt;code>&amp;lt;contextName&amp;gt;&lt;/code>：上下文名称，默认为&lt;code>default&lt;/code>，用于区分应用程序，一般改为项目名称，可以通过 &lt;code>%contextName&lt;/code> 添加到日志中&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>&amp;lt;property&amp;gt;&lt;/code>：用来定义变量值的标签&lt;/p>
&lt;ul>
&lt;li>&lt;code>name&lt;/code>：变量的名称&lt;/li>
&lt;li>&lt;code>value&lt;/code>：变量的值&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>定义的变量可以通过&lt;code>${}&lt;/code>使用&lt;/p></description></item><item><title>SpringBoot 使用 ElasticSearch</title><link>https://blog.hellowood.dev/posts/springboot-%E4%BD%BF%E7%94%A8-elasticsearch/</link><pubDate>Tue, 16 Jan 2018 00:45:05 +0000</pubDate><guid>https://blog.hellowood.dev/posts/springboot-%E4%BD%BF%E7%94%A8-elasticsearch/</guid><description>&lt;blockquote>
&lt;p>项目地址：&lt;a href="https://github.com/helloworlde/SpringBootCollection/tree/master/SpringBoot-ElasticSearch">https://github.com/helloworlde/SpringBootCollection/tree/master/SpringBoot-ElasticSearch&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>&lt;a href="https://www.elastic.co/cn/products/elasticsearch">ElasticSearch&lt;/a> 是一个开源的分布式搜索引擎，用于存储数据&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>使用 SpringBoot 和 ElasticSearch 集成，实现最简单的增删改查功能&lt;/p>
&lt;/blockquote>
&lt;h2 id="添加依赖">添加依赖&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-groovy" data-lang="groovy">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">dependencies&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">compile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;org.springframework.boot:spring-boot-starter-data-elasticsearch&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">compile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;org.springframework.boot:spring-boot-starter-web&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">compile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;net.java.dev.jna:jna&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">testCompile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;org.springframework.boot:spring-boot-starter-test&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>不添加 &lt;code>'net.java.dev.jna:jna'&lt;/code> 依赖会提示 &lt;code>java.lang.ClassNotFoundException: com.sun.jna.Native&lt;/code> 错误&lt;/p>
&lt;h2 id="添加配置">添加配置&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-properties" data-lang="properties">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.data.elasticsearch.repositories.enabled&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">#spring.data.elasticsearch.cluster-nodes=localhost:9300&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>spring.data.elasticsearch.cluster-nodes=localhost:9300&lt;/code> 只有当使用外部集群时配置，只使用本机时会提示错误&lt;/p>
&lt;h2 id="modal">Modal&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">package&lt;/span> &lt;span style="color:#76a9f9">cn.com.hellowood.elasticsearch.modal&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">org.springframework.data.annotation.Id&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">org.springframework.data.elasticsearch.annotations.Document&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">java.io.Serializable&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">@Document&lt;/span>(&lt;span style="color:#c1abea">indexName&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;elasticsearch&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">type&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;product&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c678dd">class&lt;/span> &lt;span style="color:#76a9f9">Product&lt;/span> &lt;span style="color:#c678dd">implements&lt;/span> &lt;span style="color:#c1abea">Serializable&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">private&lt;/span> &lt;span style="color:#c678dd">static&lt;/span> &lt;span style="color:#c678dd">final&lt;/span> &lt;span style="color:#ef8383">long&lt;/span> &lt;span style="color:#c1abea">serialVersionUID&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">1435515995276255188L&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Id&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">private&lt;/span> &lt;span style="color:#c1abea">Long&lt;/span> &lt;span style="color:#c1abea">id&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">private&lt;/span> &lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">name&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">private&lt;/span> &lt;span style="color:#c1abea">Integer&lt;/span> &lt;span style="color:#c1abea">price&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8a93a5;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="实现-repository-接口">实现 Repository 接口&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">package&lt;/span> &lt;span style="color:#76a9f9">cn.com.hellowood.elasticsearch.repository&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">cn.com.hellowood.elasticsearch.modal.Product&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">org.springframework.data.domain.Page&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">org.springframework.data.domain.Pageable&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">org.springframework.data.elasticsearch.repository.ElasticsearchRepository&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">org.springframework.stereotype.Component&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">java.util.List&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c678dd">interface&lt;/span> &lt;span style="color:#76a9f9">ProductRepository&lt;/span> &lt;span style="color:#c678dd">extends&lt;/span> &lt;span style="color:#c1abea">ElasticsearchRepository&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">Product&lt;/span>, &lt;span style="color:#c1abea">Long&lt;/span>&lt;span style="color:#c7bf54">&amp;gt;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">List&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">Product&lt;/span>&lt;span style="color:#c7bf54">&amp;gt;&lt;/span> &lt;span style="color:#00b1f7">findById&lt;/span>(&lt;span style="color:#c1abea">Long&lt;/span> &lt;span style="color:#c1abea">id&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">Page&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">Product&lt;/span>&lt;span style="color:#c7bf54">&amp;gt;&lt;/span> &lt;span style="color:#00b1f7">findByName&lt;/span>(&lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">name&lt;/span>, &lt;span style="color:#c1abea">Pageable&lt;/span> &lt;span style="color:#c1abea">pageable&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">Page&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">Product&lt;/span>&lt;span style="color:#c7bf54">&amp;gt;&lt;/span> &lt;span style="color:#00b1f7">findByNameLike&lt;/span>(&lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">name&lt;/span>, &lt;span style="color:#c1abea">Pageable&lt;/span> &lt;span style="color:#c1abea">pageable&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">Page&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">Product&lt;/span>&lt;span style="color:#c7bf54">&amp;gt;&lt;/span> &lt;span style="color:#00b1f7">findByNameNot&lt;/span>(&lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">name&lt;/span>, &lt;span style="color:#c1abea">Pageable&lt;/span> &lt;span style="color:#c1abea">pageable&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">Page&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">Product&lt;/span>&lt;span style="color:#c7bf54">&amp;gt;&lt;/span> &lt;span style="color:#00b1f7">findByPriceBetween&lt;/span>(&lt;span style="color:#c1abea">Long&lt;/span> &lt;span style="color:#c1abea">priceFrom&lt;/span>, &lt;span style="color:#c1abea">Long&lt;/span> &lt;span style="color:#c1abea">priceTo&lt;/span>, &lt;span style="color:#c1abea">Pageable&lt;/span> &lt;span style="color:#c1abea">pageable&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>方法命名使用关键词来命名，用法和 JPA 类似&lt;/li>
&lt;/ul>
&lt;h2 id="添加逻辑">添加逻辑&lt;/h2>
&lt;ul>
&lt;li>ProductController.java&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">package&lt;/span> &lt;span style="color:#76a9f9">cn.com.hellowood.elasticsearch.controller&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">cn.com.hellowood.elasticsearch.modal.Product&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">cn.com.hellowood.elasticsearch.service.ProductService&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">org.slf4j.Logger&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">org.slf4j.LoggerFactory&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">org.springframework.beans.factory.annotation.Autowired&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">org.springframework.web.bind.annotation.*&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">java.util.List&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">@RestController&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">@RequestMapping&lt;/span>(&lt;span style="color:#98c379">&amp;#34;/product&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c678dd">class&lt;/span> &lt;span style="color:#76a9f9">ProductController&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">private&lt;/span> &lt;span style="color:#c678dd">final&lt;/span> &lt;span style="color:#c1abea">Logger&lt;/span> &lt;span style="color:#c1abea">logger&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">LoggerFactory&lt;/span>.&lt;span style="color:#b3d23c">getLogger&lt;/span>(&lt;span style="color:#c1abea">getClass&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Autowired&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">ProductService&lt;/span> &lt;span style="color:#c1abea">productService&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@PostMapping&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">Product&lt;/span> &lt;span style="color:#00b1f7">save&lt;/span>(&lt;span style="color:#e5c07b">@RequestBody&lt;/span> &lt;span style="color:#c1abea">Product&lt;/span> &lt;span style="color:#c1abea">product&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c1abea">productService&lt;/span>.&lt;span style="color:#b3d23c">save&lt;/span>(&lt;span style="color:#c1abea">product&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@GetMapping&lt;/span>(&lt;span style="color:#98c379">&amp;#34;/find/id&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">List&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">Product&lt;/span>&lt;span style="color:#c7bf54">&amp;gt;&lt;/span> &lt;span style="color:#00b1f7">findById&lt;/span>(&lt;span style="color:#e5c07b">@RequestParam&lt;/span> &lt;span style="color:#c1abea">Long&lt;/span> &lt;span style="color:#c1abea">id&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c1abea">productService&lt;/span>.&lt;span style="color:#b3d23c">findById&lt;/span>(&lt;span style="color:#c1abea">id&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@GetMapping&lt;/span>(&lt;span style="color:#98c379">&amp;#34;/find/name&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">List&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">Product&lt;/span>&lt;span style="color:#c7bf54">&amp;gt;&lt;/span> &lt;span style="color:#00b1f7">findByName&lt;/span>(&lt;span style="color:#e5c07b">@RequestParam&lt;/span> &lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">name&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c1abea">productService&lt;/span>.&lt;span style="color:#b3d23c">findByName&lt;/span>(&lt;span style="color:#c1abea">name&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@GetMapping&lt;/span>(&lt;span style="color:#98c379">&amp;#34;/find/name/like&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">List&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">Product&lt;/span>&lt;span style="color:#c7bf54">&amp;gt;&lt;/span> &lt;span style="color:#00b1f7">findByNameLike&lt;/span>(&lt;span style="color:#e5c07b">@RequestParam&lt;/span> &lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">name&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c1abea">productService&lt;/span>.&lt;span style="color:#b3d23c">findByNameLike&lt;/span>(&lt;span style="color:#c1abea">name&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@GetMapping&lt;/span>(&lt;span style="color:#98c379">&amp;#34;/find/name/notLike&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">List&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">Product&lt;/span>&lt;span style="color:#c7bf54">&amp;gt;&lt;/span> &lt;span style="color:#00b1f7">findByNameNot&lt;/span>(&lt;span style="color:#e5c07b">@RequestParam&lt;/span> &lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">name&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c1abea">productService&lt;/span>.&lt;span style="color:#b3d23c">findByNameNot&lt;/span>(&lt;span style="color:#c1abea">name&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@GetMapping&lt;/span>(&lt;span style="color:#98c379">&amp;#34;/find/price/between&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">List&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">Product&lt;/span>&lt;span style="color:#c7bf54">&amp;gt;&lt;/span> &lt;span style="color:#00b1f7">findByPriceBetween&lt;/span>(&lt;span style="color:#e5c07b">@RequestParam&lt;/span> &lt;span style="color:#c1abea">Long&lt;/span> &lt;span style="color:#c1abea">priceFrom&lt;/span>, &lt;span style="color:#e5c07b">@RequestParam&lt;/span> &lt;span style="color:#c1abea">Long&lt;/span> &lt;span style="color:#c1abea">priceTo&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c1abea">productService&lt;/span>.&lt;span style="color:#b3d23c">findByPriceBetween&lt;/span>(&lt;span style="color:#c1abea">priceFrom&lt;/span>, &lt;span style="color:#c1abea">priceTo&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>ProductServiceImpl.java&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">package&lt;/span> &lt;span style="color:#76a9f9">cn.com.hellowood.elasticsearch.service.impl&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">cn.com.hellowood.elasticsearch.modal.Product&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">cn.com.hellowood.elasticsearch.repository.ProductRepository&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">cn.com.hellowood.elasticsearch.service.ProductService&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">org.slf4j.Logger&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">org.slf4j.LoggerFactory&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">org.springframework.beans.factory.annotation.Autowired&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">org.springframework.data.domain.PageRequest&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">org.springframework.data.domain.Pageable&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">org.springframework.stereotype.Service&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">java.util.List&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">@Service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c678dd">class&lt;/span> &lt;span style="color:#76a9f9">ProductServiceImpl&lt;/span> &lt;span style="color:#c678dd">implements&lt;/span> &lt;span style="color:#c1abea">ProductService&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">private&lt;/span> &lt;span style="color:#c678dd">final&lt;/span> &lt;span style="color:#c1abea">Logger&lt;/span> &lt;span style="color:#c1abea">logger&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">LoggerFactory&lt;/span>.&lt;span style="color:#b3d23c">getLogger&lt;/span>(&lt;span style="color:#c1abea">getClass&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">private&lt;/span> &lt;span style="color:#c678dd">static&lt;/span> &lt;span style="color:#c678dd">final&lt;/span> &lt;span style="color:#c1abea">Integer&lt;/span> &lt;span style="color:#c1abea">pageNum&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">private&lt;/span> &lt;span style="color:#c678dd">static&lt;/span> &lt;span style="color:#c678dd">final&lt;/span> &lt;span style="color:#c1abea">Integer&lt;/span> &lt;span style="color:#c1abea">pageSize&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">10&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">Pageable&lt;/span> &lt;span style="color:#c1abea">pageable&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">PageRequest&lt;/span>(&lt;span style="color:#c1abea">pageNum&lt;/span>, &lt;span style="color:#c1abea">pageSize&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Autowired&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">ProductRepository&lt;/span> &lt;span style="color:#c1abea">productRepository&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">Product&lt;/span> &lt;span style="color:#00b1f7">save&lt;/span>(&lt;span style="color:#c1abea">Product&lt;/span> &lt;span style="color:#c1abea">product&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c1abea">productRepository&lt;/span>.&lt;span style="color:#b3d23c">save&lt;/span>(&lt;span style="color:#c1abea">product&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">List&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">Product&lt;/span>&lt;span style="color:#c7bf54">&amp;gt;&lt;/span> &lt;span style="color:#00b1f7">findById&lt;/span>(&lt;span style="color:#c1abea">Long&lt;/span> &lt;span style="color:#c1abea">id&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c1abea">productRepository&lt;/span>.&lt;span style="color:#b3d23c">findById&lt;/span>(&lt;span style="color:#c1abea">id&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">List&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">Product&lt;/span>&lt;span style="color:#c7bf54">&amp;gt;&lt;/span> &lt;span style="color:#00b1f7">findByName&lt;/span>(&lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">name&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c1abea">productRepository&lt;/span>.&lt;span style="color:#b3d23c">findByName&lt;/span>(&lt;span style="color:#c1abea">name&lt;/span>, &lt;span style="color:#c1abea">pageable&lt;/span>).&lt;span style="color:#b3d23c">getContent&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">List&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">Product&lt;/span>&lt;span style="color:#c7bf54">&amp;gt;&lt;/span> &lt;span style="color:#00b1f7">findByNameLike&lt;/span>(&lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">name&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c1abea">productRepository&lt;/span>.&lt;span style="color:#b3d23c">findByNameLike&lt;/span>(&lt;span style="color:#c1abea">name&lt;/span>, &lt;span style="color:#c1abea">pageable&lt;/span>).&lt;span style="color:#b3d23c">getContent&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">List&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">Product&lt;/span>&lt;span style="color:#c7bf54">&amp;gt;&lt;/span> &lt;span style="color:#00b1f7">findByNameNot&lt;/span>(&lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">name&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c1abea">productRepository&lt;/span>.&lt;span style="color:#b3d23c">findByNameNot&lt;/span>(&lt;span style="color:#c1abea">name&lt;/span>, &lt;span style="color:#c1abea">pageable&lt;/span>).&lt;span style="color:#b3d23c">getContent&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">List&lt;/span>&lt;span style="color:#c7bf54">&amp;lt;&lt;/span>&lt;span style="color:#c1abea">Product&lt;/span>&lt;span style="color:#c7bf54">&amp;gt;&lt;/span> &lt;span style="color:#00b1f7">findByPriceBetween&lt;/span>(&lt;span style="color:#c1abea">Long&lt;/span> &lt;span style="color:#c1abea">priceFrom&lt;/span>, &lt;span style="color:#c1abea">Long&lt;/span> &lt;span style="color:#c1abea">priceTo&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c1abea">productRepository&lt;/span>.&lt;span style="color:#b3d23c">findByPriceBetween&lt;/span>(&lt;span style="color:#c1abea">priceFrom&lt;/span>, &lt;span style="color:#c1abea">priceTo&lt;/span>, &lt;span style="color:#c1abea">pageable&lt;/span>).&lt;span style="color:#b3d23c">getContent&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="插入数据">插入数据&lt;/h2>
&lt;p>分别插入以下数据：&lt;/p></description></item><item><title>Swagger 常用注解说明</title><link>https://blog.hellowood.dev/posts/swagger-%E5%B8%B8%E7%94%A8%E6%B3%A8%E8%A7%A3%E8%AF%B4%E6%98%8E/</link><pubDate>Sun, 07 Jan 2018 23:34:23 +0000</pubDate><guid>https://blog.hellowood.dev/posts/swagger-%E5%B8%B8%E7%94%A8%E6%B3%A8%E8%A7%A3%E8%AF%B4%E6%98%8E/</guid><description>&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">&lt;strong>注解&lt;/strong>&lt;/th>
 &lt;th style="text-align: left">&lt;strong>属性&lt;/strong>&lt;/th>
 &lt;th style="text-align: left">&lt;strong>值&lt;/strong>&lt;/th>
 &lt;th style="text-align: left">&lt;strong>备注&lt;/strong>&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">&lt;code>@Api&lt;/code>&lt;/td>
 &lt;td style="text-align: left">value&lt;/td>
 &lt;td style="text-align: left">字符串&lt;/td>
 &lt;td style="text-align: left">可用在&lt;code>class&lt;/code>头上,&lt;code>class&lt;/code>描述&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">description&lt;/td>
 &lt;td style="text-align: left">字符串&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;code>@Api(value = &amp;quot;xxx&amp;quot;, description = &amp;quot;xxx&amp;quot;)&lt;/code>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;code>@ApiOperation&lt;/code>&lt;/td>
 &lt;td style="text-align: left">value&lt;/td>
 &lt;td style="text-align: left">字符串&lt;/td>
 &lt;td style="text-align: left">可用在方法头上.参数的描述容器&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">notes&lt;/td>
 &lt;td style="text-align: left">字符串&lt;/td>
 &lt;td style="text-align: left">说明&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">httpMethod&lt;/td>
 &lt;td style="text-align: left">字符串&lt;/td>
 &lt;td style="text-align: left">请求方法&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;code>@ApiOperation(value = &amp;quot;xxx&amp;quot;, notes = &amp;quot;xxx&amp;quot;, method = &amp;quot;GET&amp;quot;)&lt;/code>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;code>@ApiImplicitParams&lt;/code>&lt;/td>
 &lt;td style="text-align: left">{}&lt;/td>
 &lt;td style="text-align: left">&lt;code>@ApiImplicitParam&lt;/code>数组&lt;/td>
 &lt;td style="text-align: left">可用在方法头上.参数的描述容器&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;code>@ApiImplicitParams({@ApiImplicitParam1,@ApiImplicitParam2,...})&lt;/code>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;code>@ApiImplicitParam&lt;/code>&lt;/td>
 &lt;td style="text-align: left">name&lt;/td>
 &lt;td style="text-align: left">字符串 与参数命名对应&lt;/td>
 &lt;td style="text-align: left">可用在&lt;code>@ApiImplicitParams&lt;/code>里&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">value&lt;/td>
 &lt;td style="text-align: left">字符串&lt;/td>
 &lt;td style="text-align: left">参数中文描述&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">required&lt;/td>
 &lt;td style="text-align: left">布尔值&lt;/td>
 &lt;td style="text-align: left">true/false&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">dataType&lt;/td>
 &lt;td style="text-align: left">字符串&lt;/td>
 &lt;td style="text-align: left">参数类型&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">paramType&lt;/td>
 &lt;td style="text-align: left">字符串&lt;/td>
 &lt;td style="text-align: left">参数请求方式:query/path&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">query:对应&lt;code>@RequestParam&lt;/code>传递&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">path: 对应&lt;code>@PathVariable&lt;/code>{}path传递&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">dataType&lt;/td>
 &lt;td style="text-align: left">字符串&lt;/td>
 &lt;td style="text-align: left">参数类型&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">dataTypeClass&lt;/td>
 &lt;td style="text-align: left">类&lt;/td>
 &lt;td style="text-align: left">参数对应的类&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">defaultValue&lt;/td>
 &lt;td style="text-align: left">字符串&lt;/td>
 &lt;td style="text-align: left">在api测试中默认值&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;code> @ApiImplicitParam(name = &amp;quot;newProduct&amp;quot;, value = &amp;quot;商品信息对象&amp;quot;, required = true, dataType = &amp;quot;Product&amp;quot;, dataTypeClass = Product.class)&lt;/code>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;code>@ApiResponses&lt;/code>&lt;/td>
 &lt;td style="text-align: left">{}&lt;/td>
 &lt;td style="text-align: left">&lt;code>@ApiResponse&lt;/code>数组&lt;/td>
 &lt;td style="text-align: left">可用在方法头上.参数的描述容器&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;code>@ApiResponses({@ApiResponse1,@ApiResponse2,...})&lt;/code>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;code>@ApiResponse&lt;/code>&lt;/td>
 &lt;td style="text-align: left">code&lt;/td>
 &lt;td style="text-align: left">整形&lt;/td>
 &lt;td style="text-align: left">可用在&lt;code>@ApiResponses&lt;/code>里&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">message&lt;/td>
 &lt;td style="text-align: left">字符串&lt;/td>
 &lt;td style="text-align: left">错误描述&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">response&lt;/td>
 &lt;td style="text-align: left">类&lt;/td>
 &lt;td style="text-align: left">返回结果对应的类&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;code>@ApiResponse(code = 200, message = &amp;quot;Successful&amp;quot;, response = CommonResponse.class)&lt;/code>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;code>@ApiModelProperty&lt;/code>&lt;/td>
 &lt;td style="text-align: left">name&lt;/td>
 &lt;td style="text-align: left">字符串&lt;/td>
 &lt;td style="text-align: left">实体类参数名称&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">value&lt;/td>
 &lt;td style="text-align: left">字符串&lt;/td>
 &lt;td style="text-align: left">实体类参数值&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">notes&lt;/td>
 &lt;td style="text-align: left">字符串&lt;/td>
 &lt;td style="text-align: left">说明&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;code>@ApiModelProperty(name = &amp;quot;name&amp;quot;, value = &amp;quot;name&amp;quot;, notes = &amp;quot;名称&amp;quot;)&lt;/code>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>SpringBoot 集成 Swagger API 文档工具</title><link>https://blog.hellowood.dev/posts/springboot-%E9%9B%86%E6%88%90-swagger-api-%E6%96%87%E6%A1%A3%E5%B7%A5%E5%85%B7/</link><pubDate>Sun, 07 Jan 2018 23:28:45 +0000</pubDate><guid>https://blog.hellowood.dev/posts/springboot-%E9%9B%86%E6%88%90-swagger-api-%E6%96%87%E6%A1%A3%E5%B7%A5%E5%85%B7/</guid><description>&lt;ul>
&lt;li>项目地址：&lt;a href="https://github.com/helloworlde/SpringBootCollection/blob/master/SpringBoot-Swagger">https://github.com/helloworlde/SpringBootCollection/blob/master/SpringBoot-Swagger&lt;/a>&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;a href="https://swagger.io/">Swaager&lt;/a> 是一个开源用于设计、撰写、测试 RESTful API 的工具&lt;/p>
&lt;/blockquote>
&lt;h2 id="添加依赖">添加依赖&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-groovy" data-lang="groovy">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">compile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;io.springfox:springfox-swagger2:2.7.0&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">compile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;io.springfox:springfox-swagger-ui:2.7.0&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="配置-swagger">配置 Swagger&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">package&lt;/span> &lt;span style="color:#76a9f9">cn.com.hellowood.swagger.configuration&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">org.springframework.context.annotation.Bean&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">org.springframework.context.annotation.Configuration&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">springfox.documentation.builders.ApiInfoBuilder&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">springfox.documentation.builders.PathSelectors&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">springfox.documentation.builders.RequestHandlerSelectors&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">springfox.documentation.service.ApiInfo&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">springfox.documentation.service.Contact&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">springfox.documentation.spi.DocumentationType&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">springfox.documentation.spring.web.plugins.Docket&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">springfox.documentation.swagger2.annotations.EnableSwagger2&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">@EnableSwagger2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">@Configuration&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c678dd">class&lt;/span> &lt;span style="color:#76a9f9">Swagger2Configuration&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Bean&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">Docket&lt;/span> &lt;span style="color:#00b1f7">createRestApi&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">Docket&lt;/span>(&lt;span style="color:#c1abea">DocumentationType&lt;/span>.&lt;span style="color:#b3d23c">SWAGGER_2&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#b3d23c">groupName&lt;/span>(&lt;span style="color:#98c379">&amp;#34;HelloWood&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#b3d23c">apiInfo&lt;/span>(&lt;span style="color:#c1abea">apiInfo&lt;/span>())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#b3d23c">select&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8a93a5;font-style:italic">// 扫描的包所在位置&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#b3d23c">apis&lt;/span>(&lt;span style="color:#c1abea">RequestHandlerSelectors&lt;/span>.&lt;span style="color:#b3d23c">basePackage&lt;/span>(&lt;span style="color:#98c379">&amp;#34;cn.com.hellowood.swagger.controller&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8a93a5;font-style:italic">// 扫描的 URL 规则&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#b3d23c">paths&lt;/span>(&lt;span style="color:#c1abea">PathSelectors&lt;/span>.&lt;span style="color:#b3d23c">any&lt;/span>())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#b3d23c">build&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">private&lt;/span> &lt;span style="color:#c1abea">ApiInfo&lt;/span> &lt;span style="color:#00b1f7">apiInfo&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8a93a5;font-style:italic">// 联系信息&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">Contact&lt;/span> &lt;span style="color:#c1abea">contact&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">Contact&lt;/span>(&lt;span style="color:#98c379">&amp;#34;HelloWood&amp;#34;&lt;/span>, &lt;span style="color:#98c379">&amp;#34;helloworlde.github.io&amp;#34;&lt;/span>, &lt;span style="color:#98c379">&amp;#34;xxxx@outlook.com&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">ApiInfoBuilder&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8a93a5;font-style:italic">// 大标题&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#b3d23c">title&lt;/span>(&lt;span style="color:#98c379">&amp;#34;Swagger Application&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8a93a5;font-style:italic">// 描述&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#b3d23c">description&lt;/span>(&lt;span style="color:#98c379">&amp;#34;Swagger Application Demo&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8a93a5;font-style:italic">// 服务条款 URL&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#b3d23c">termsOfServiceUrl&lt;/span>(&lt;span style="color:#98c379">&amp;#34;helloworlde.github.io&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#b3d23c">contact&lt;/span>(&lt;span style="color:#c1abea">contact&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8a93a5;font-style:italic">// 版本&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#b3d23c">version&lt;/span>(&lt;span style="color:#98c379">&amp;#34;0.0.1-SNAPSHOT&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#b3d23c">build&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="添加-model-描述">添加 Model 描述&lt;/h2>
&lt;ul>
&lt;li>Product.java&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">package&lt;/span> &lt;span style="color:#76a9f9">cn.com.hellowood.swagger.modal&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">io.swagger.annotations.Api&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">io.swagger.annotations.ApiModelProperty&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">java.io.Serializable&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">@Api&lt;/span>(&lt;span style="color:#c1abea">value&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;Product&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">description&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;商品类&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c678dd">class&lt;/span> &lt;span style="color:#76a9f9">Product&lt;/span> &lt;span style="color:#c678dd">implements&lt;/span> &lt;span style="color:#c1abea">Serializable&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">private&lt;/span> &lt;span style="color:#c678dd">static&lt;/span> &lt;span style="color:#c678dd">final&lt;/span> &lt;span style="color:#ef8383">long&lt;/span> &lt;span style="color:#c1abea">serialVersionUID&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">1435515995276255188L&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@ApiModelProperty&lt;/span>(&lt;span style="color:#c1abea">notes&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;主键&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">private&lt;/span> &lt;span style="color:#ef8383">long&lt;/span> &lt;span style="color:#c1abea">id&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@ApiModelProperty&lt;/span>(&lt;span style="color:#c1abea">notes&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;名称&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">private&lt;/span> &lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">name&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@ApiModelProperty&lt;/span>(&lt;span style="color:#c1abea">notes&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;价格&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">private&lt;/span> &lt;span style="color:#ef8383">long&lt;/span> &lt;span style="color:#c1abea">price&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8a93a5;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>CommonResponse.java&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">package&lt;/span> &lt;span style="color:#76a9f9">cn.com.hellowood.swagger.common&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">cn.com.hellowood.swagger.utils.JSONUtil&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">io.swagger.annotations.ApiModelProperty&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c678dd">class&lt;/span> &lt;span style="color:#76a9f9">CommonResponse&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@ApiModelProperty&lt;/span>(&lt;span style="color:#c1abea">notes&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;状态码&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">private&lt;/span> &lt;span style="color:#ef8383">int&lt;/span> &lt;span style="color:#c1abea">code&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@ApiModelProperty&lt;/span>(&lt;span style="color:#c1abea">notes&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;返回消息&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">private&lt;/span> &lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">message&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@ApiModelProperty&lt;/span>(&lt;span style="color:#c1abea">notes&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;返回的数据&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">private&lt;/span> &lt;span style="color:#c1abea">Object&lt;/span> &lt;span style="color:#c1abea">data&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8a93a5;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="添加-api-接口及描述">添加 API 接口及描述&lt;/h2>
&lt;ul>
&lt;li>ProductController.java&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">package&lt;/span> &lt;span style="color:#76a9f9">cn.com.hellowood.swagger.controller&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">cn.com.hellowood.swagger.common.CommonResponse&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">cn.com.hellowood.swagger.common.ResponseUtil&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">cn.com.hellowood.swagger.modal.Product&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">cn.com.hellowood.swagger.service.ProductService&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">cn.com.hellowood.swagger.utils.ServiceException&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">io.swagger.annotations.*&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">org.springframework.beans.factory.annotation.Autowired&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">org.springframework.web.bind.annotation.*&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">// 类描述&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">@Api&lt;/span>(&lt;span style="color:#c1abea">value&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;商品信息&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">tags&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> {&lt;span style="color:#98c379">&amp;#34;商品信息API&amp;#34;&lt;/span>}, &lt;span style="color:#c1abea">description&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;商品信息API接口&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">@RestController&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">@RequestMapping&lt;/span>(&lt;span style="color:#98c379">&amp;#34;/product&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c678dd">class&lt;/span> &lt;span style="color:#76a9f9">ProductController&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Autowired&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">private&lt;/span> &lt;span style="color:#c1abea">ProductService&lt;/span> &lt;span style="color:#c1abea">productService&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@ApiOperation&lt;/span>(&lt;span style="color:#c1abea">value&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;查询所有商品&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">notes&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;查询所有的商品信息&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">httpMethod&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;GET&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@ApiResponses&lt;/span>({
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@ApiResponse&lt;/span>(&lt;span style="color:#c1abea">code&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">200&lt;/span>, &lt;span style="color:#c1abea">message&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;请求成功&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">response&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">CommonResponse&lt;/span>.&lt;span style="color:#b3d23c">class&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@ApiResponse&lt;/span>(&lt;span style="color:#c1abea">code&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">400&lt;/span>, &lt;span style="color:#c1abea">message&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;请求参数错误&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">response&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">CommonResponse&lt;/span>.&lt;span style="color:#b3d23c">class&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@ApiResponse&lt;/span>(&lt;span style="color:#c1abea">code&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">401&lt;/span>, &lt;span style="color:#c1abea">message&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;未授权的访问&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">response&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">CommonResponse&lt;/span>.&lt;span style="color:#b3d23c">class&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@ApiResponse&lt;/span>(&lt;span style="color:#c1abea">code&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">403&lt;/span>, &lt;span style="color:#c1abea">message&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;拒绝访问&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">response&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">CommonResponse&lt;/span>.&lt;span style="color:#b3d23c">class&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@ApiResponse&lt;/span>(&lt;span style="color:#c1abea">code&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">404&lt;/span>, &lt;span style="color:#c1abea">message&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;资源不存在&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">response&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">CommonResponse&lt;/span>.&lt;span style="color:#b3d23c">class&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@ApiResponse&lt;/span>(&lt;span style="color:#c1abea">code&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">500&lt;/span>, &lt;span style="color:#c1abea">message&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;服务器内部错误&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">response&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">CommonResponse&lt;/span>.&lt;span style="color:#b3d23c">class&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> })
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@GetMapping&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">CommonResponse&lt;/span> &lt;span style="color:#00b1f7">getAllProduct&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c1abea">ResponseUtil&lt;/span>.&lt;span style="color:#b3d23c">generateResponse&lt;/span>(&lt;span style="color:#c1abea">productService&lt;/span>.&lt;span style="color:#b3d23c">getAllProduct&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@ApiOperation&lt;/span>(&lt;span style="color:#c1abea">value&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;通过 ID 查询商品信息&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">notes&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;通过 ID 查询商品信息&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">httpMethod&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;GET&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">response&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">CommonResponse&lt;/span>.&lt;span style="color:#b3d23c">class&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@ApiImplicitParam&lt;/span>(&lt;span style="color:#c1abea">name&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;id&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">value&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34; Product ID&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">required&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#b756ff;font-weight:bold">true&lt;/span>, &lt;span style="color:#c1abea">paramType&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;path&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">dataType&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;Long&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@GetMapping&lt;/span>(&lt;span style="color:#98c379">&amp;#34;/{id}&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">CommonResponse&lt;/span> &lt;span style="color:#00b1f7">getProduct&lt;/span>(&lt;span style="color:#e5c07b">@PathVariable&lt;/span>(&lt;span style="color:#98c379">&amp;#34;id&amp;#34;&lt;/span>) &lt;span style="color:#c1abea">Long&lt;/span> &lt;span style="color:#c1abea">productId&lt;/span>) &lt;span style="color:#c678dd">throws&lt;/span> &lt;span style="color:#c1abea">ServiceException&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c1abea">ResponseUtil&lt;/span>.&lt;span style="color:#b3d23c">generateResponse&lt;/span>(&lt;span style="color:#c1abea">productService&lt;/span>.&lt;span style="color:#b3d23c">select&lt;/span>(&lt;span style="color:#c1abea">productId&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@ApiOperation&lt;/span>(&lt;span style="color:#c1abea">value&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;更新商品信息&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">notes&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;通过 ID 更新商品信息&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">httpMethod&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;PUT&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">response&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">CommonResponse&lt;/span>.&lt;span style="color:#b3d23c">class&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@ApiImplicitParams&lt;/span>({
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@ApiImplicitParam&lt;/span>(&lt;span style="color:#c1abea">name&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;id&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">value&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;商品 ID&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">required&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#b756ff;font-weight:bold">true&lt;/span>, &lt;span style="color:#c1abea">paramType&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;path&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">dataType&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;Long&amp;#34;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@ApiImplicitParam&lt;/span>(&lt;span style="color:#c1abea">name&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;newProduct&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">value&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;商品信息对象&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">required&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#b756ff;font-weight:bold">true&lt;/span>, &lt;span style="color:#c1abea">dataType&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;Product&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">dataTypeClass&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">Product&lt;/span>.&lt;span style="color:#b3d23c">class&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> })
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@PutMapping&lt;/span>(&lt;span style="color:#98c379">&amp;#34;/{id}&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">CommonResponse&lt;/span> &lt;span style="color:#00b1f7">updateProduct&lt;/span>(&lt;span style="color:#e5c07b">@PathVariable&lt;/span>(&lt;span style="color:#98c379">&amp;#34;id&amp;#34;&lt;/span>) &lt;span style="color:#c1abea">Long&lt;/span> &lt;span style="color:#c1abea">productId&lt;/span>, &lt;span style="color:#e5c07b">@RequestBody&lt;/span> &lt;span style="color:#c1abea">Product&lt;/span> &lt;span style="color:#c1abea">newProduct&lt;/span>) &lt;span style="color:#c678dd">throws&lt;/span> &lt;span style="color:#c1abea">ServiceException&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c1abea">ResponseUtil&lt;/span>.&lt;span style="color:#b3d23c">generateResponse&lt;/span>(&lt;span style="color:#c1abea">productService&lt;/span>.&lt;span style="color:#b3d23c">update&lt;/span>(&lt;span style="color:#c1abea">productId&lt;/span>, &lt;span style="color:#c1abea">newProduct&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@ApiOperation&lt;/span>(&lt;span style="color:#c1abea">value&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;删除商品信息&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">notes&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;通过 ID 删除商品信息&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">httpMethod&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;DELETE&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">response&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">CommonResponse&lt;/span>.&lt;span style="color:#b3d23c">class&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@ApiImplicitParam&lt;/span>(&lt;span style="color:#c1abea">name&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;id&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">value&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;商品 ID&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">required&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#b756ff;font-weight:bold">true&lt;/span>, &lt;span style="color:#c1abea">paramType&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;path&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">dataType&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;Long&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@DeleteMapping&lt;/span>(&lt;span style="color:#98c379">&amp;#34;/{id}&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">CommonResponse&lt;/span> &lt;span style="color:#00b1f7">deleteProduct&lt;/span>(&lt;span style="color:#e5c07b">@PathVariable&lt;/span>(&lt;span style="color:#98c379">&amp;#34;id&amp;#34;&lt;/span>) &lt;span style="color:#ef8383">long&lt;/span> &lt;span style="color:#c1abea">productId&lt;/span>) &lt;span style="color:#c678dd">throws&lt;/span> &lt;span style="color:#c1abea">ServiceException&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c1abea">ResponseUtil&lt;/span>.&lt;span style="color:#b3d23c">generateResponse&lt;/span>(&lt;span style="color:#c1abea">productService&lt;/span>.&lt;span style="color:#b3d23c">delete&lt;/span>(&lt;span style="color:#c1abea">productId&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@ApiOperation&lt;/span>(&lt;span style="color:#c1abea">value&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;更新商品信息&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">notes&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;通过 ID 更新商品信息&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">httpMethod&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;POST&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">response&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">CommonResponse&lt;/span>.&lt;span style="color:#b3d23c">class&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@ApiImplicitParam&lt;/span>(&lt;span style="color:#c1abea">name&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;newProduct&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">value&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;商品信息对象&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">required&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#b756ff;font-weight:bold">true&lt;/span>, &lt;span style="color:#c1abea">dataType&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;Product&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">dataTypeClass&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">Product&lt;/span>.&lt;span style="color:#b3d23c">class&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@PostMapping&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">CommonResponse&lt;/span> &lt;span style="color:#00b1f7">addProduct&lt;/span>(&lt;span style="color:#e5c07b">@RequestBody&lt;/span> &lt;span style="color:#c1abea">Product&lt;/span> &lt;span style="color:#c1abea">newProduct&lt;/span>) &lt;span style="color:#c678dd">throws&lt;/span> &lt;span style="color:#c1abea">ServiceException&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c1abea">ResponseUtil&lt;/span>.&lt;span style="color:#b3d23c">generateResponse&lt;/span>(&lt;span style="color:#c1abea">productService&lt;/span>.&lt;span style="color:#b3d23c">add&lt;/span>(&lt;span style="color:#c1abea">newProduct&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="查看及测试-api">查看及测试 API&lt;/h2>
&lt;p>启动应用并访问&lt;a href="">http://localhost:8080/swagger-ui.html&lt;/a> 即可查看和测试相关 API&lt;/p></description></item><item><title>Spring Boot 使用 Flyway</title><link>https://blog.hellowood.dev/posts/springboot-%E4%BD%BF%E7%94%A8-flyway/</link><pubDate>Sun, 07 Jan 2018 23:20:53 +0000</pubDate><guid>https://blog.hellowood.dev/posts/springboot-%E4%BD%BF%E7%94%A8-flyway/</guid><description>&lt;ul>
&lt;li>项目地址：&lt;a href="https://github.com/helloworlde/SpringBootCollection/tree/master/SpringBoot-Flyway">https://github.com/helloworlde/SpringBootCollection/tree/master/SpringBoot-Flyway&lt;/a>&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;a href="https://flywaydb.org">Flyway&lt;/a> 是一个数据库版本管理工具，用于管理数据库操作脚本&lt;/p>
&lt;/blockquote>
&lt;h2 id="添加依赖">添加依赖&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-groovy" data-lang="groovy">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">compile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;org.flywaydb:flyway-core&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">compile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.1&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">runtime&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;mysql:mysql-connector-java&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">//runtime(&amp;#39;com.h2database:h2&amp;#39;)
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="配置">配置&lt;/h2>
&lt;ul>
&lt;li>配置数据库&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-properties" data-lang="properties">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic"># H2 数据库&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">#spring.datasource.url=jdbc:h2:mem:test&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">#spring.datasource.username=root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">#spring.datasource.password=123456&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">#spring.datasource.driver-class-name=org.h2.Driver&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic"># MySQL 数据库&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.driver-class-name&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">com.mysql.jdbc.Driver&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.url&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">jdbc:mysql://localhost:3306/product?useSSL=false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.username&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.password&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">123456&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>使用 &lt;code>V_VARSION__DESCRIPTION.sql&lt;/code> 方式命名脚本&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">CREATE&lt;/span> &lt;span style="color:#c678dd">TABLE&lt;/span> &lt;span style="color:#c1abea">product&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">id&lt;/span> &lt;span style="color:#ef8383">INT&lt;/span> &lt;span style="color:#c678dd">PRIMARY&lt;/span> &lt;span style="color:#c678dd">KEY&lt;/span> &lt;span style="color:#c1abea">AUTO_INCREMENT&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">name&lt;/span> &lt;span style="color:#ef8383">VARCHAR&lt;/span>(&lt;span style="color:#d19a66">50&lt;/span>) &lt;span style="color:#c678dd">NOT&lt;/span> &lt;span style="color:#c678dd">NULL&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">price&lt;/span> &lt;span style="color:#c1abea">DOUBLE&lt;/span> &lt;span style="color:#c678dd">NOT&lt;/span> &lt;span style="color:#c678dd">NULL&lt;/span> &lt;span style="color:#c678dd">DEFAULT&lt;/span> &lt;span style="color:#d19a66">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>将 SQL 脚本放在 &lt;code>resources/db/migration&lt;/code> 目录下&lt;/li>
&lt;/ul>
&lt;h2 id="使用">使用&lt;/h2>
&lt;p>此时启动应用，Flyway 将会自动执行脚本进行数据库操作&lt;/p>
&lt;ul>
&lt;li>第一次启动时将会看到如下日志&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>2018-01-07 21:00:14.932 INFO 5041 --- [ main] o.f.core.internal.util.VersionPrinter : Flyway 3.2.1 by Boxfuse
2018-01-07 21:00:17.015 INFO 5041 --- [ main] o.f.c.i.dbsupport.DbSupportFactory : Database: jdbc:mysql://localhost:3306/product?useSSL=false (MySQL 5.7)
2018-01-07 21:00:17.253 INFO 5041 --- [ main] o.f.core.internal.command.DbValidate : Validated 1 migration (execution time 00:00.133s)
2018-01-07 21:00:17.750 INFO 5041 --- [ main] o.f.c.i.metadatatable.MetaDataTableImpl : Creating Metadata table: `product`.`schema_version`
2018-01-07 21:00:18.437 INFO 5041 --- [ main] o.f.core.internal.command.DbMigrate : Current version of schema `product`: &amp;lt;&amp;lt; Empty Schema &amp;gt;&amp;gt;
2018-01-07 21:00:18.437 INFO 5041 --- [ main] o.f.core.internal.command.DbMigrate : Migrating schema `product` to version 1.0 - 0001 CREATE PRODUCT
2018-01-07 21:00:19.284 INFO 5041 --- [ main] o.f.core.internal.command.DbMigrate : Successfully applied 1 migration to schema `product` (execution time 00:01.592s).
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>再次启动将会看到 Flyway 校验版本&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>2018-01-07 21:02:09.195 INFO 5061 --- [ main] o.f.core.internal.util.VersionPrinter : Flyway 3.2.1 by Boxfuse
2018-01-07 21:02:11.327 INFO 5061 --- [ main] o.f.c.i.dbsupport.DbSupportFactory : Database: jdbc:mysql://localhost:3306/product?useSSL=false (MySQL 5.7)
2018-01-07 21:02:11.618 INFO 5061 --- [ main] o.f.core.internal.command.DbValidate : Validated 1 migration (execution time 00:00.202s)
2018-01-07 21:02:12.386 INFO 5061 --- [ main] o.f.core.internal.command.DbMigrate : Current version of schema `product`: 1.0
2018-01-07 21:02:12.447 INFO 5061 --- [ main] o.f.core.internal.command.DbMigrate : Schema `product` is up to date. No migration necessary.
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>如果不想 Flyway 执行，可以配置不启用 Flyway&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-properties" data-lang="properties">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">flyway.enabled&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">false&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="注意">注意&lt;/h2>
&lt;blockquote>
&lt;ul>
&lt;li>如果按照 Flyway &lt;a href="https://flywaydb.org/documentation/plugins/springboot">官方文档&lt;/a> 的指导，仅配置 Flyway，应用启动时并不会执行 Flyway 的任何操作，这是因为 &lt;a href="https://docs.spring.io/spring-boot/docs/1.4.x/api/org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration.html">&lt;code>FlywayAutoConfiguration&lt;/code>&lt;/a> 类在启动时要求有 DataSource 的实例，如果没有配置，就不会执行 Flyway，所以在依赖里添加了 MyBatis(或 JPA) ，使用 MyBatis(或 JPA) 时会自动注入数据源，因此才会执行 Flyway，具体可以参考&lt;a href="https://github.com/spring-projects/spring-boot/issues/8649">https://github.com/spring-projects/spring-boot/issues/8649&lt;/a> 和 &lt;a href="https://stackoverflow.com/questions/43496506/how-to-debug-when-flyway-doesnt-work-on-spring-boot">https://stackoverflow.com/questions/43496506/how-to-debug-when-flyway-doesnt-work-on-spring-boot&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;blockquote>
&lt;ul>
&lt;li>如果是多个数据源，则需要在 Flyway 进行操作的数据源 Bean 上添加 &lt;code>@FlywayDataSource&lt;/code>注解或者在 &lt;code>application.properties&lt;/code> 里添加 &lt;code>spring.flyway.[url,user,password]&lt;/code>进行配置&lt;/li>
&lt;/ul>
&lt;/blockquote></description></item><item><title>Rocket MQ 相关知识</title><link>https://blog.hellowood.dev/posts/rocket-mq-%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/</link><pubDate>Mon, 01 Jan 2018 12:54:02 +0000</pubDate><guid>https://blog.hellowood.dev/posts/rocket-mq-%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/</guid><description>&lt;p>@(消息队列)[RocketMQ, 消息]&lt;/p>
&lt;blockquote>
&lt;p>Rocket MQ消息队列（Message Queue，简称 MQ）是阿里巴巴集团中间件技术部自主研发的专业消息中间件。产品基于高可用分布式集群技术，提供消息发布订阅、消息轨迹查询、定时（延时）消息、资源统计、监控报警等一系列消息云服务，是企业级互联网架构的核心产品。&lt;/p>
&lt;/blockquote>
&lt;h2 id="rocket-mq相关名词">Rocket MQ相关名词&lt;/h2>
&lt;ul>
&lt;li>Producer 消息生产者，负责生产消息&lt;/li>
&lt;li>Consumer 消息消费者，负责消费消息&lt;/li>
&lt;li>NameServer 无状态节点，用来保存活跃的broker列表和topic列表&lt;/li>
&lt;li>Broker 消息中转角色，负责存储消息，转发消息&lt;/li>
&lt;li>Topic 消息的逻辑管理单位&lt;/li>
&lt;li>Message 消息
&lt;ul>
&lt;li>body 消息体，用于携带消息具体内容&lt;/li>
&lt;li>key 消息的key，用于区别不同的消息&lt;/li>
&lt;li>tags 消息的Tag，用于不同的订阅者过滤消息&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="消息发送方式">消息发送方式&lt;/h2>
&lt;ul>
&lt;li>同步方式
&lt;blockquote>
&lt;p>发送消息，接收到结果之后再发送下一条消息，速度最慢，耗时最长&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>异步方式
&lt;blockquote>
&lt;p>发送消息，不论是否收到结果，直接发送下一条消息，发送速度介于同步和单向方式之间&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>单向方式
&lt;blockquote>
&lt;p>发送消息，直接发送消息，不返回发送结果，发送速度最快&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;h2 id="消息类型">消息类型&lt;/h2>
&lt;ul>
&lt;li>定时消息
&lt;blockquote>
&lt;p>在指定的发送时间发送消息&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>延时消息
&lt;blockquote>
&lt;p>从当前时间开始，经过延时时间后再发送消息&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>顺序消息
&lt;blockquote>
&lt;p>立即发送消息&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>事务消息
&lt;blockquote>
&lt;p>MQ 提供类似 X/Open XA 的分布事务功能，通过 MQ 事务消息能达到分布式事务的最终一致&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;h1 id="实例代码">实例代码&lt;/h1>
&lt;h2 id="producer">Producer&lt;/h2>
&lt;pre tabindex="0">&lt;code>public class ProducerDelayTest {
 public static void main(String[] args) {
 Properties properties = new Properties();
 //您在 MQ 控制台创建的Producer ID
 properties.put(PropertyKeyConst.ProducerId, &amp;#34;XXX&amp;#34;);
 // 阿里云身份验证，在阿里云服务器管理控制台创建
 properties.put(PropertyKeyConst.AccessKey, &amp;#34;XXX&amp;#34;);
 // 阿里云身份验证，在阿里云服务器管理控制台创建
 properties.put(PropertyKeyConst.SecretKey, &amp;#34;XXX&amp;#34;);
 // 设置 TCP 接入域名（此处以公共云生产环境为例）
 properties.put(PropertyKeyConst.ONSAddr,
 &amp;#34;http://onsaddr-internal.aliyun.com:8080/rocketmq/nsaddr4client-internal&amp;#34;);
 Producer producer = ONSFactory.createProducer(properties);
 // 在发送消息前，必须调用start方法来启动Producer，只需调用一次即可。
 producer.start();

 /**
 * 消息类型代码，参考下面消息类型代码
 */
 /**
 * 消息发送方式代码，参考下面发送方式代码
 */
 System.out.println(&amp;#34;Message Id:&amp;#34; + sendResult.getMessageId());
 // 在应用退出前，销毁 Producer 对象
 // 注意：如果不销毁也没有问题，如果发送消息较多不应该销毁
 producer.shutdown();
 }
}
&lt;/code>&lt;/pre>&lt;h3 id="消息类型代码">消息类型代码&lt;/h3>
&lt;ul>
&lt;li>定时消息&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> Message msg = new Message();
 msg.setTag(&amp;#34;TAG&amp;#34;);
 msg.setKey(&amp;#34;KEY&amp;#34;);
 msg.setTopic(&amp;#34;TOPIC&amp;#34;);
 msg.setBody(&amp;#34;BODY&amp;#34;.getBytes());
 long timeStamp =new SimpleDateFormat(&amp;#34;yyyy-MM-dd HH:mm:ss&amp;#34;).parse(&amp;#34;2017-09-03 16:21:00&amp;#34;).getTime();
 msg.setStartDeliverTime(timeStamp);
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>延时消息&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> Message msg = new Message();
 msg.setTag(&amp;#34;TAG&amp;#34;);
 msg.setKey(&amp;#34;KEY&amp;#34;);
 msg.setTopic(&amp;#34;TOPIC&amp;#34;);
 msg.setBody(&amp;#34;BODY&amp;#34;.getBytes());
 long delayTime = 3000;//30秒后再发送
 msg.setStartDeliverTime(System.currentTimes() + delayTime);
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>顺序消息&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> Message msg = new Message();
 msg.setTag(&amp;#34;TAG&amp;#34;);
 msg.setKey(&amp;#34;KEY&amp;#34;);
 msg.setTopic(&amp;#34;TOPIC&amp;#34;.getBytes());
 msg.setBody(&amp;#34;BODY&amp;#34;);
&lt;/code>&lt;/pre>&lt;h3 id="消息发送方式代码">消息发送方式代码&lt;/h3>
&lt;ul>
&lt;li>同步方式发送&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> SendResult sendResult = producer.send(msg);
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>异步方式发送&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> producer.sendAsync(message, new SendCallback() {
 @Override
 public void onSuccess(final SendResult sendResult) {
 logger.info(&amp;#34;MQ send ASYNCHRONOUS message successed，response is &amp;#34; + JSON.toJSONString(sendResult));
 }

 @Override
 public void onException(OnExceptionContext onExceptionContext) {
 logger.info(&amp;#34;MQ send ASYNCHRONOUS message failed, error is &amp;#34; + onExceptionContext.getException().getMessage());
 }
 });
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>单向方式发送&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> producer.sendOneway(message);
&lt;/code>&lt;/pre>&lt;h2 id="consumer">Consumer&lt;/h2>
&lt;pre tabindex="0">&lt;code>public class ConsumerTest {
 public static void main(String[] args) {
 Properties properties = new Properties();
 // 您在控制台创建的 Consumer ID
 properties.put(PropertyKeyConst.ConsumerId, &amp;#34;XXX&amp;#34;);
 // AccessKey 阿里云身份验证，在阿里云服务器管理控制台创建
 properties.put(PropertyKeyConst.AccessKey, &amp;#34;XXX&amp;#34;);
 // SecretKey 阿里云身份验证，在阿里云服务器管理控制台创建
 properties.put(PropertyKeyConst.SecretKey, &amp;#34;XXX&amp;#34;);
 // 设置 TCP 接入域名（此处以公共云生产环境为例）
 properties.put(PropertyKeyConst.ONSAddr,
 &amp;#34;http://onsaddr-internal.aliyun.com:8080/rocketmq/nsaddr4client-internal&amp;#34;);
 // 集群订阅方式 (默认)
 // properties.put(PropertyKeyConst.MessageModel, PropertyValueConst.CLUSTERING);
 // 广播订阅方式
 // properties.put(PropertyKeyConst.MessageModel, PropertyValueConst.BROADCASTING);
 Consumer consumer = ONSFactory.createConsumer(properties);
 consumer.subscribe(&amp;#34;TopicTestMQ&amp;#34;, &amp;#34;TagA||TagB&amp;#34;, new MessageListener() { //订阅多个Tag
 public Action consume(Message message, ConsumeContext context) {
 System.out.println(&amp;#34;Receive: &amp;#34; + message);
 return Action.CommitMessage;
 }
 });
 //订阅另外一个Topic
 consumer.subscribe(&amp;#34;TopicTestMQ-Other&amp;#34;, &amp;#34;*&amp;#34;, new MessageListener() { //订阅全部Tag
 public Action consume(Message message, ConsumeContext context) {
 System.out.println(&amp;#34;Receive: &amp;#34; + message);
 return Action.CommitMessage;
 }
 });
 consumer.start();
 System.out.println(&amp;#34;Consumer Started&amp;#34;);
 }
}
&lt;/code>&lt;/pre></description></item><item><title>Rocket MQ 发送消息</title><link>https://blog.hellowood.dev/posts/rocket-mq-%E5%8F%91%E9%80%81%E6%B6%88%E6%81%AF/</link><pubDate>Mon, 01 Jan 2018 12:52:39 +0000</pubDate><guid>https://blog.hellowood.dev/posts/rocket-mq-%E5%8F%91%E9%80%81%E6%B6%88%E6%81%AF/</guid><description>&lt;h2 id="rocket-mq-发送消息">Rocket MQ 发送消息&lt;/h2>
&lt;p>@(消息队列)[RocketMQ, 消息]&lt;/p>
&lt;blockquote>
&lt;p>使用阿里巴巴的Rocket MQ发送消息的SpringBoo项目&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>使用之前请现在&lt;a href="https://ons.console.aliyun.com/?spm=5176.2020520001.1002.d10ons.61d991b3GbNJPR#/home/topic">阿里云&lt;/a>申请消息队列并创建消息TOPIC、Producer和Consumer&lt;/li>
&lt;/ul>
&lt;h2 id="启动">启动&lt;/h2>
&lt;ul>
&lt;li>下载： &lt;code>https://github.com/helloworlde/SpringBoot-RocketMQ.git&lt;/code>&lt;/li>
&lt;li>修改配置文件：修改&lt;code>application.properties&lt;/code> ，填入相应的信息&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>spring.rocketmq.ONSAddresses=消息队列地址
spring.rocketmq.accessKey=AccessKey
spring.rocketmq.secretKey=SercetKey
spring.rocketmq.topic=TOPIC
spring.rocketmq.producerId生产者
spring.rocketmq.consumerId=订阅者
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>编译：&lt;code>gradle build&lt;/code>&lt;/li>
&lt;li>启动：&lt;code>gradle bootrun&lt;/code>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="api">API&lt;/h2>
&lt;p>&lt;strong>请求URL：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>http://localhost:8080/sendMessage&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>请求方式：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>POST &lt;/code>&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>参数：&lt;/strong>&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">参数名&lt;/th>
 &lt;th style="text-align: left">必选&lt;/th>
 &lt;th style="text-align: left">类型&lt;/th>
 &lt;th style="text-align: left">说明&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">body&lt;/td>
 &lt;td style="text-align: left">是&lt;/td>
 &lt;td style="text-align: left">String&lt;/td>
 &lt;td style="text-align: left">消息所携带的数据，可以是对象的JSON串&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">key&lt;/td>
 &lt;td style="text-align: left">是&lt;/td>
 &lt;td style="text-align: left">String&lt;/td>
 &lt;td style="text-align: left">32位key&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">tags&lt;/td>
 &lt;td style="text-align: left">否&lt;/td>
 &lt;td style="text-align: left">String&lt;/td>
 &lt;td style="text-align: left">Message Tag，用于过滤订阅者过滤消息&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">method&lt;/td>
 &lt;td style="text-align: left">否&lt;/td>
 &lt;td style="text-align: left">String&lt;/td>
 &lt;td style="text-align: left">消息发送方式，共有三种：同步发送：&lt;code>SYNCHRONOUS&lt;/code>，异步发送：&lt;code>ASYNCHRONOUS&lt;/code>, 单向发送：&lt;code>ONE_WAY&lt;/code> ,默认使用同步发送方式发送消息&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">type&lt;/td>
 &lt;td style="text-align: left">否&lt;/td>
 &lt;td style="text-align: left">String&lt;/td>
 &lt;td style="text-align: left">消息类型，共有三种：顺序消息：&lt;code>ORDER&lt;/code>，延时消息：&lt;code>DELAY&lt;/code>，定时消息：&lt;code>TIMING&lt;/code>，默认发送顺序消息&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">delayTime&lt;/td>
 &lt;td style="text-align: left">否&lt;/td>
 &lt;td style="text-align: left">long&lt;/td>
 &lt;td style="text-align: left">消息发送延时时间，单位是毫秒&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">startDeliveryTime&lt;/td>
 &lt;td style="text-align: left">否&lt;/td>
 &lt;td style="text-align: left">String&lt;/td>
 &lt;td style="text-align: left">定时消息发送时间，必须是&lt;code>yyyy-MM-dd HH:mm:ss&lt;/code>格式&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;p>&lt;strong>顺序消息 Body&lt;/strong>&lt;/p>
&lt;pre tabindex="0">&lt;code>{
 &amp;#34;body&amp;#34;:&amp;#34;{\&amp;#34;name\&amp;#34;:\&amp;#34;MQ\&amp;#34;,\&amp;#34;type\&amp;#34;:\&amp;#34;Rocket\&amp;#34;}&amp;#34;,
 &amp;#34;delayTime&amp;#34;:30000,
 &amp;#34;key&amp;#34;:&amp;#34;key&amp;#34;,
 &amp;#34;method&amp;#34;:&amp;#34;SYNCHRONOUS&amp;#34;,
 &amp;#34;tags&amp;#34;:&amp;#34;TAG1,TAG2&amp;#34;,
 &amp;#34;topic&amp;#34;:&amp;#34;TOPIC&amp;#34;,
 &amp;#34;type&amp;#34;:&amp;#34;ORDER&amp;#34;
}
&lt;/code>&lt;/pre>&lt;p>&lt;strong>延时消息 Body&lt;/strong>&lt;/p></description></item><item><title>Spring Boot Admin 管理应用-客户端注册</title><link>https://blog.hellowood.dev/posts/spring-boot-admin-%E7%AE%A1%E7%90%86%E5%BA%94%E7%94%A8-%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%B3%A8%E5%86%8C/</link><pubDate>Mon, 01 Jan 2018 12:15:48 +0000</pubDate><guid>https://blog.hellowood.dev/posts/spring-boot-admin-%E7%AE%A1%E7%90%86%E5%BA%94%E7%94%A8-%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%B3%A8%E5%86%8C/</guid><description>&lt;blockquote>
&lt;p>客户端注册可以通过直接注册到管理应用和通过注册中心注册两种方式&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;h2 id="直接注册到管理应用">直接注册到管理应用&lt;/h2>
&lt;blockquote>
&lt;p>直接注册到管理应用只需要一个Server和一个Client就可以，Client配置admin Server地址就可以实现管理&lt;/p>
&lt;/blockquote>
&lt;h4 id="配置管理应用server">配置管理应用Server&lt;/h4>
&lt;h4 id="修改客户端应用">修改客户端应用&lt;/h4>
&lt;ol>
&lt;li>添加依赖&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-gradle" data-lang="gradle">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">compile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;de.codecentric:spring-boot-admin-starter-client:1.5.4&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">compile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;org.springframework.boot:spring-boot-starter-actuator&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>修改配置文件(application.properties)，指明Server地址&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code> spring.boot.admin.url=http://localhost:8080
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="通过注册中心注册">通过注册中心注册&lt;/h2>
&lt;blockquote>
&lt;p>通过注册中心注册可以用于大量应用的管理，通过一个注册中心来管理注册，客户端和管理应用通过注册中心实现管理&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>使用Spring Cloud Eureka作为注册中心，需要一个Eureka服务应用，一个Admin Server应用和一个被管理的客户端应用&lt;/p>
&lt;/blockquote>
&lt;h4 id="配置eureka">配置Eureka&lt;/h4>
&lt;h4 id="配置admin-server">配置Admin Server&lt;/h4>
&lt;h4 id="配置client">配置Client&lt;/h4>
&lt;ol>
&lt;li>添加依赖（build.gradle）&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-gradle" data-lang="gradle">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">compile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;org.springframework.boot:spring-boot-starter-actuator&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">compile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;org.springframework.cloud:spring-cloud-starter-eureka:1.3.4.RELEASE&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">compile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;org.jolokia:jolokia-core:1.3.7&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>添加启动配置项（bootstrap.properties）&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>info.version=1.0.0
spring.application.name=APPLICATION_NAME
# Eureka应用的URL
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
&lt;/code>&lt;/pre>&lt;ol start="3">
&lt;li>修改应用启动文件（Application.java）&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>@SpringBootApplication
@EnableEurekaClient //添加注册，向Eureka注册该应用
public class Application {
 public static void main(String[] args) {
 SpringApplication.run(Application.class, args);
 }
}
&lt;/code>&lt;/pre></description></item><item><title>Spring Controller 数据传递中注解的使用</title><link>https://blog.hellowood.dev/posts/spring-controller-%E6%95%B0%E6%8D%AE%E4%BC%A0%E9%80%92%E4%B8%AD%E6%B3%A8%E8%A7%A3%E7%9A%84%E4%BD%BF%E7%94%A8/</link><pubDate>Mon, 01 Jan 2018 11:54:23 +0000</pubDate><guid>https://blog.hellowood.dev/posts/spring-controller-%E6%95%B0%E6%8D%AE%E4%BC%A0%E9%80%92%E4%B8%AD%E6%B3%A8%E8%A7%A3%E7%9A%84%E4%BD%BF%E7%94%A8/</guid><description>&lt;p>##根据处理Request的不同内容分为4类：&lt;/p>
&lt;ol>
&lt;li>处理&lt;code>Request URI&lt;/code>部分的注解：&lt;code>@PathVariable&lt;/code>&lt;/li>
&lt;li>处理&lt;code>Request Header&lt;/code>部分的注解：&lt;code>@RequestHeader&lt;/code>，&lt;code>@CookieValue&lt;/code>&lt;/li>
&lt;li>处理&lt;code>Request Body&lt;/code>部分的注解：&lt;code>@RequestParam&lt;/code>，&lt;code>@RequestBody&lt;/code>&lt;/li>
&lt;li>处理&lt;code>Attribute&lt;/code>类型的注解：&lt;code>@SessionAttribute&lt;/code>，&lt;code>@ModelAttribute&lt;/code>&lt;/li>
&lt;/ol>
&lt;hr>
&lt;p>##@PathVariable&lt;/p>
&lt;ul>
&lt;li>当使用&lt;code>@RequestMapping URI template&lt;/code>样式映射时，即&lt;code>url/{param}&lt;/code>，这时&lt;code>param&lt;/code>可以通过&lt;code>@PathVariable&lt;/code>注解绑定它传过来的值到方法的参数上&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> @Controller
 public class RelativePathUriTemplateController {

 @RequestMapping(&amp;#34;/url/{param}&amp;#34;)
 public void getParams(@PathVariable String param) {
 //....
 }
 }
&lt;/code>&lt;/pre>&lt;hr>
&lt;p>##@RequestHeader&lt;/p>
&lt;ul>
&lt;li>可以把&lt;code>Request&lt;/code>请求的&lt;code>Header&lt;/code>部分的值绑定到方法的参数上&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> Host localhost:8080
 Accept text/html,application/xhtml+xml,application/xml;q=0.9
 Accept-Language fr,en-gb;q=0.7,en;q=0.3
 Accept-Encoding gzip,deflate
 Accept-Charset ISO-8859-1,utf-8;q=0.7,*;q=0.7
 Keep-Alive 300
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code> @RequestMapping(&amp;#34;/url&amp;#34;)
 public void displayHeaderInfo(@RequestHeader(&amp;#34;Accept-Encoding&amp;#34;) String encoding,
 @RequestHeader(&amp;#34;Keep-Alive&amp;#34;) long keepAlive) {

 //...

 }
&lt;/code>&lt;/pre>&lt;blockquote>
&lt;p>把&lt;code>request header&lt;/code>部分的 &lt;code>Accept-Encoding&lt;/code>的值，绑定到参数&lt;code>encoding&lt;/code>上了， &lt;code>Keep-Alive header&lt;/code>的值绑定到参数&lt;code>keepAlive&lt;/code>上。&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;p>##@CookieValue&lt;/p>
&lt;ul>
&lt;li>可以把&lt;code>RequestHeader&lt;/code>中关于&lt;code>cookie&lt;/code>的值绑定到方法的参数上&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>@RequestMapping(&amp;#34;/url&amp;#34;)
public void displayHeaderInfo(@CookieValue(&amp;#34;JSESSIONID&amp;#34;) String cookie) {

 //...

}
&lt;/code>&lt;/pre>&lt;hr>
&lt;p>##@RequestBody&lt;/p></description></item><item><title>Spring Cloud 监控服务器下 IP/URL 不正确导致无法注册的解决方法</title><link>https://blog.hellowood.dev/posts/spring-cloud-%E7%9B%91%E6%8E%A7%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8B-ip-url-%E4%B8%8D%E6%AD%A3%E7%A1%AE%E5%AF%BC%E8%87%B4%E6%97%A0%E6%B3%95%E6%B3%A8%E5%86%8C%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</link><pubDate>Mon, 01 Jan 2018 11:51:23 +0000</pubDate><guid>https://blog.hellowood.dev/posts/spring-cloud-%E7%9B%91%E6%8E%A7%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8B-ip-url-%E4%B8%8D%E6%AD%A3%E7%A1%AE%E5%AF%BC%E8%87%B4%E6%97%A0%E6%B3%95%E6%B3%A8%E5%86%8C%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</guid><description>&lt;blockquote>
&lt;h2 id="本项目仅用到了-spring-cloud并没有使用-eureka">本项目仅用到了 Spring Cloud，并没有使用 Eureka&lt;/h2>
&lt;/blockquote>
&lt;blockquote>
&lt;p>在使用 Spring Cloud 对 Spring Boot 应用通过 Spring Admin 进行监控的时候，当 Admin Server 和被监控的应用都在本地启动的时候没有任何问题，但是当部署到 Server 上之后，Client 在注册到 Admin Server 上时 IP 地址不正确，发现是因为 Server 有内网和外网 IP，但是在应用注册的时候用了内网的 IP，Admin Server 访问该内网 IP 失败，所以应用无法注册&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>因为没有使用 Eureka，所以配置时需要用 Spring Cloud 的配置来处理&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>使用 Eureka 请参考 &lt;a href="http://www.jianshu.com/p/fa1e9c8e4f47">http://www.jianshu.com/p/fa1e9c8e4f47&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h2 id="配置">配置&lt;/h2>
&lt;ul>
&lt;li>修改配置文件，添加以下内容&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>spring.boot.admin.client.service-base-url=http://${your_ip}:${your_port}
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="说明">说明&lt;/h2>
&lt;ul>
&lt;li>当没有任何配置的时候，会使用&lt;code>http://bogon:9999/&lt;/code>注册&lt;/li>
&lt;li>当 Client 加入了&lt;code>spring.boot.admin.client.prefer-ip=true&lt;/code>的时候会以所得到的 IP 注册，此时 IP 为内网 IP，如果部署到服务器上将会无法注册&lt;/li>
&lt;li>当 Client 配置为&lt;code>spring.boot.admin.client.service-base-url=http://${your_ip}:${your_port}&lt;/code>时将会以所配置的地址进行注册&lt;/li>
&lt;/ul></description></item><item><title>Spring MVC简单实现国际化/多语言</title><link>https://blog.hellowood.dev/posts/spring-mvc%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0%E5%9B%BD%E9%99%85%E5%8C%96-%E5%A4%9A%E8%AF%AD%E8%A8%80/</link><pubDate>Mon, 01 Jan 2018 11:48:46 +0000</pubDate><guid>https://blog.hellowood.dev/posts/spring-mvc%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0%E5%9B%BD%E9%99%85%E5%8C%96-%E5%A4%9A%E8%AF%AD%E8%A8%80/</guid><description>&lt;blockquote>
&lt;p>SpringMVC 可以通过Spring框架来实现多语言&lt;/p>
&lt;/blockquote>
&lt;h2 id="1-创建springmvc项目">1. 创建SpringMVC项目&lt;/h2>
&lt;ul>
&lt;li>配置web.xml&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;
&amp;lt;web-app xmlns=&amp;#34;http://xmlns.jcp.org/xml/ns/javaee&amp;#34;
 xmlns:xsi=&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;
 xsi:schemaLocation=&amp;#34;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd&amp;#34;
 version=&amp;#34;3.1&amp;#34;&amp;gt;

 &amp;lt;!--Spring 配置文件--&amp;gt;
 &amp;lt;context-param&amp;gt;
 &amp;lt;param-name&amp;gt;contextConfigLocation&amp;lt;/param-name&amp;gt;
 &amp;lt;param-value&amp;gt;/WEB-INF/applicationContext.xml&amp;lt;/param-value&amp;gt;
 &amp;lt;/context-param&amp;gt;

 &amp;lt;!--监听器--&amp;gt;
 &amp;lt;listener&amp;gt;
 &amp;lt;listener-class&amp;gt;org.springframework.web.context.ContextLoaderListener&amp;lt;/listener-class&amp;gt;
 &amp;lt;/listener&amp;gt;

 &amp;lt;!--配置转发器--&amp;gt;
 &amp;lt;servlet&amp;gt;
 &amp;lt;servlet-name&amp;gt;dispatcher&amp;lt;/servlet-name&amp;gt;
 &amp;lt;servlet-class&amp;gt;org.springframework.web.servlet.DispatcherServlet&amp;lt;/servlet-class&amp;gt;
 &amp;lt;load-on-startup&amp;gt;1&amp;lt;/load-on-startup&amp;gt;
 &amp;lt;/servlet&amp;gt;
 &amp;lt;servlet-mapping&amp;gt;
 &amp;lt;servlet-name&amp;gt;dispatcher&amp;lt;/servlet-name&amp;gt;
 &amp;lt;url-pattern&amp;gt;*.action&amp;lt;/url-pattern&amp;gt;
 &amp;lt;/servlet-mapping&amp;gt;

 &amp;lt;filter&amp;gt;
 &amp;lt;filter-name&amp;gt;characterEncodingFilter&amp;lt;/filter-name&amp;gt;
 &amp;lt;filter-class&amp;gt;org.springframework.web.filter.CharacterEncodingFilter&amp;lt;/filter-class&amp;gt;
 &amp;lt;init-param&amp;gt;
 &amp;lt;param-name&amp;gt;encoding&amp;lt;/param-name&amp;gt;
 &amp;lt;param-value&amp;gt;UTF-8&amp;lt;/param-value&amp;gt;
 &amp;lt;/init-param&amp;gt;
 &amp;lt;/filter&amp;gt;
 &amp;lt;filter-mapping&amp;gt;
 &amp;lt;filter-name&amp;gt;characterEncodingFilter&amp;lt;/filter-name&amp;gt;
 &amp;lt;url-pattern&amp;gt;/*&amp;lt;/url-pattern&amp;gt;
 &amp;lt;/filter-mapping&amp;gt;
&amp;lt;/web-app&amp;gt;
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>配置Spring文件(dispatcher-servlet.xml)&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;
&amp;lt;beans xmlns=&amp;#34;http://www.springframework.org/schema/beans&amp;#34;
 xmlns:xsi=&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;
 xmlns:context=&amp;#34;http://www.springframework.org/schema/context&amp;#34;
 xmlns:mvc=&amp;#34;http://www.springframework.org/schema/mvc&amp;#34;
 xsi:schemaLocation=&amp;#34;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd&amp;#34;&amp;gt;
 &amp;lt;!-- 默认使用基于注释的适配器和映射器 --&amp;gt;
 &amp;lt;mvc:annotation-driven/&amp;gt;
 &amp;lt;!-- 只把动态信息当做controller处理，忽略静态信息 --&amp;gt;
 &amp;lt;mvc:default-servlet-handler/&amp;gt;
 &amp;lt;!-- 自动扫描包中的Controlller --&amp;gt;
 &amp;lt;context:component-scan base-package=&amp;#34;controller&amp;#34;/&amp;gt;

 &amp;lt;bean class=&amp;#34;org.springframework.web.servlet.view.InternalResourceViewResolver&amp;#34;&amp;gt;
 &amp;lt;property name=&amp;#34;viewClass&amp;#34; value=&amp;#34;org.springframework.web.servlet.view.JstlView&amp;#34;/&amp;gt;
 &amp;lt;property name=&amp;#34;prefix&amp;#34; value=&amp;#34;/WEB-INF/jsp/&amp;#34;/&amp;gt;&amp;lt;!-- 前缀 --&amp;gt;
 &amp;lt;property name=&amp;#34;suffix&amp;#34; value=&amp;#34;.jsp&amp;#34;/&amp;gt;&amp;lt;!-- 后缀，自动拼接 --&amp;gt;
 &amp;lt;/bean&amp;gt;
&amp;lt;/beans&amp;gt;
&lt;/code>&lt;/pre>&lt;h2 id="2-添加多语言的配置文件">2. 添加多语言的配置文件&lt;/h2>
&lt;ul>
&lt;li>添加language_en_US.properties到src目录下&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>language.cn = \u4e2d\u6587
language.en = English
internationalisation = \u0020Internationalisation
welcome = This is the English environment
introduce= This is I18N Demo
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>添加language_zh_CN.properties到src目录下&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>language.cn = \u4e2d\u6587
language.en = English
internationalisation = \u56fd\u9645\u5316
welcome = \u8fd9\u662f\u4e2d\u6587\u73af\u5883
introduce= \u8fd9\u662f\u56fd\u9645\u5316\u7684\u4e8b\u4f8b
&lt;/code>&lt;/pre>&lt;h2 id="3-加入i18n-过滤器到配置文件中">3. 加入i18n 过滤器到配置文件中&lt;/h2>
&lt;ul>
&lt;li>将配置添加到dispatcher-servelet中&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> &amp;lt;!-- 国际化资源文件 --&amp;gt;
 &amp;lt;bean id=&amp;#34;messageSource&amp;#34; class=&amp;#34;org.springframework.context.support.ReloadableResourceBundleMessageSource&amp;#34;&amp;gt;
 &amp;lt;!-- 表示多语言配置文件在根路径下，以language开头的文件--&amp;gt;
 &amp;lt;property name=&amp;#34;basename&amp;#34; value=&amp;#34;classpath:language&amp;#34;/&amp;gt;
 &amp;lt;property name=&amp;#34;useCodeAsDefaultMessage&amp;#34; value=&amp;#34;true&amp;#34;/&amp;gt;
 &amp;lt;/bean&amp;gt;

 &amp;lt;mvc:interceptors&amp;gt;
 &amp;lt;bean id=&amp;#34;localeChangeInterceptor&amp;#34; class=&amp;#34;org.springframework.web.servlet.i18n.LocaleChangeInterceptor&amp;#34;&amp;gt;
 &amp;lt;property name=&amp;#34;paramName&amp;#34; value=&amp;#34;lang&amp;#34;/&amp;gt;
 &amp;lt;/bean&amp;gt;
 &amp;lt;/mvc:interceptors&amp;gt;
&lt;/code>&lt;/pre>&lt;h2 id="4-在页面中使用多语言">4. 在页面中使用多语言&lt;/h2>
&lt;ul>
&lt;li>在Controller中添加路径&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>@Controller
public class HelloController {
 @RequestMapping(&amp;#34;/hello.action&amp;#34;)
 public String index() {
 return &amp;#34;hello&amp;#34;;
 }
}
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>在JSP页面中使用
&lt;blockquote>
&lt;p>通过&lt;code>&amp;lt;spring:message code=&amp;quot;welcome&amp;quot;/&amp;gt;&lt;/code>将配置文件中的内容读取&lt;/p></description></item><item><title>SpringBoot中Junit测试注入Bean失败的解决方法</title><link>https://blog.hellowood.dev/posts/springboot%E4%B8%ADjunit%E6%B5%8B%E8%AF%95%E6%B3%A8%E5%85%A5bean%E5%A4%B1%E8%B4%A5%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</link><pubDate>Mon, 01 Jan 2018 11:46:57 +0000</pubDate><guid>https://blog.hellowood.dev/posts/springboot%E4%B8%ADjunit%E6%B5%8B%E8%AF%95%E6%B3%A8%E5%85%A5bean%E5%A4%B1%E8%B4%A5%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</guid><description>&lt;blockquote>
&lt;p>在SpringBoot中使用Junit做测试的时候测试DAO层的接口，但是一直提示注入Bean失败，报以下错误：&lt;/p>
&lt;/blockquote>
&lt;pre tabindex="0">&lt;code>org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name &amp;#39;hellowood.TestFeedbackMapper&amp;#39;: Unsatisfied dependency expressed through field &amp;#39;feedbackDetailMapper&amp;#39;; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type &amp;#39;hellowood.lntu.oe.wmp.dao.FeedbackDetailMapper&amp;#39; available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
&lt;/code>&lt;/pre>&lt;blockquote>
&lt;p>在查询了其他项目的Junit后发现Junit的注解是这样的&lt;/p>
&lt;/blockquote>
&lt;pre tabindex="0">&lt;code>@RunWith(SpringJUnit4ClassRunner.class)
@SpringApplicationConfiguration(classes = Application.class)
@WebAppConfiguration
&lt;/code>&lt;/pre>&lt;blockquote>
&lt;p>而新建的项目中是这样的&lt;/p>
&lt;/blockquote>
&lt;pre tabindex="0">&lt;code>@RunWith(SpringRunner.class)
@SpringBootTest
@WebAppConfiguration
&lt;/code>&lt;/pre>&lt;blockquote>
&lt;p>直接修改注解后发现不能引入&lt;code>SpringApplicationConfiguration&lt;/code>，而所有的依赖只是版本不一样，查阅了Spring官方文档后发现新版中用&lt;code>SpringBootTest&lt;/code>代替了&lt;code>SpringApplicationConfiguration&lt;/code>，所以将注解改为以下形式就可以正常注入Bean了&lt;/p>
&lt;/blockquote>
&lt;pre tabindex="0">&lt;code>@RunWith(SpringRunner.class)
@SpringBootTest(classes = Application.class)
@WebAppConfiguration
&lt;/code>&lt;/pre></description></item><item><title>Gauge中执行数据库测试</title><link>https://blog.hellowood.dev/posts/gauge%E4%B8%AD%E6%89%A7%E8%A1%8C%E6%95%B0%E6%8D%AE%E5%BA%93%E6%B5%8B%E8%AF%95/</link><pubDate>Mon, 01 Jan 2018 11:34:11 +0000</pubDate><guid>https://blog.hellowood.dev/posts/gauge%E4%B8%AD%E6%89%A7%E8%A1%8C%E6%95%B0%E6%8D%AE%E5%BA%93%E6%B5%8B%E8%AF%95/</guid><description>&lt;blockquote>
&lt;p>使用Gauge对数据库的增删改查进行测试&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;h2 id="打开数据库连接">打开数据库连接&lt;/h2>
&lt;ul>
&lt;li>.spec文件&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Markdown" data-lang="Markdown">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">*&lt;/span> open connection before crud
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>.java文件&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">private&lt;/span> &lt;span style="color:#c1abea">Connection&lt;/span> &lt;span style="color:#c1abea">connection&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">private&lt;/span> &lt;span style="color:#c1abea">PreparedStatement&lt;/span> &lt;span style="color:#c1abea">statement&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Step&lt;/span>(&lt;span style="color:#98c379">&amp;#34;open connection before crud&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#ef8383">void&lt;/span> &lt;span style="color:#00b1f7">openConnection&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">driver&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;com.mysql.jdbc.Driver&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">url&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;jdbc:mysql://119.29.99.89:3306/springboot?useSSL=false&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">username&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;victor&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">password&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;Victor123456&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">Class&lt;/span>.&lt;span style="color:#b3d23c">forName&lt;/span>(&lt;span style="color:#c1abea">driver&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">connection&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">DriverManager&lt;/span>.&lt;span style="color:#b3d23c">getConnection&lt;/span>(&lt;span style="color:#c1abea">url&lt;/span>, &lt;span style="color:#c1abea">username&lt;/span>, &lt;span style="color:#c1abea">password&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#c678dd">catch&lt;/span> (&lt;span style="color:#c1abea">Exception&lt;/span> &lt;span style="color:#c1abea">e&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">e&lt;/span>.&lt;span style="color:#b3d23c">printStackTrace&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="insert">insert&lt;/h2>
&lt;ul>
&lt;li>.spec文件&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Markdown" data-lang="Markdown">&lt;span style="display:flex;">&lt;span> ## insert
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> insert record to database
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tags: crud,insert
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">*&lt;/span> insert new record named &amp;#34;Gauge&amp;#34;,sex is &amp;#34;Male&amp;#34;,age is &amp;#34;25&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>.java文件&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Step&lt;/span>(&lt;span style="color:#98c379">&amp;#34;insert new record named &amp;lt;Gauge&amp;gt;,sex is &amp;lt;Male&amp;gt;,age is &amp;lt;25&amp;gt;&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#ef8383">void&lt;/span> &lt;span style="color:#00b1f7">insert&lt;/span>(&lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">name&lt;/span>, &lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">sex&lt;/span>, &lt;span style="color:#c1abea">Integer&lt;/span> &lt;span style="color:#c1abea">age&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">statement&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">connection&lt;/span>.&lt;span style="color:#b3d23c">prepareStatement&lt;/span>(&lt;span style="color:#98c379">&amp;#34;insert into user(username,sex,age) values (?,?,?)&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">statement&lt;/span>.&lt;span style="color:#b3d23c">setString&lt;/span>(&lt;span style="color:#c1abea">1&lt;/span>, &lt;span style="color:#c1abea">name&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">statement&lt;/span>.&lt;span style="color:#b3d23c">setString&lt;/span>(&lt;span style="color:#c1abea">2&lt;/span>, &lt;span style="color:#c1abea">sex&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">statement&lt;/span>.&lt;span style="color:#b3d23c">setInt&lt;/span>(&lt;span style="color:#c1abea">3&lt;/span>, &lt;span style="color:#c1abea">age&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ef8383">int&lt;/span> &lt;span style="color:#c1abea">result&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">statement&lt;/span>.&lt;span style="color:#b3d23c">executeUpdate&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">assertTrue&lt;/span>(&lt;span style="color:#c1abea">result&lt;/span> &lt;span style="color:#c7bf54">&amp;gt;&lt;/span> &lt;span style="color:#c1abea">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#c678dd">catch&lt;/span> (&lt;span style="color:#c1abea">SQLException&lt;/span> &lt;span style="color:#c1abea">e&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">e&lt;/span>.&lt;span style="color:#b3d23c">printStackTrace&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="select">select&lt;/h2>
&lt;ul>
&lt;li>.spec文件&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Markdown" data-lang="Markdown">&lt;span style="display:flex;">&lt;span> ## query
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> query all records from database
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tags: crud,select
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">*&lt;/span> query all records
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>.java文件&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Step&lt;/span>(&lt;span style="color:#98c379">&amp;#34;query all records&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#ef8383">void&lt;/span> &lt;span style="color:#00b1f7">query&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">statement&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">connection&lt;/span>.&lt;span style="color:#b3d23c">prepareStatement&lt;/span>(&lt;span style="color:#98c379">&amp;#34;SELECT * FROM user&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">ResultSet&lt;/span> &lt;span style="color:#c1abea">resultSet&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">statement&lt;/span>.&lt;span style="color:#b3d23c">executeQuery&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">while&lt;/span> (&lt;span style="color:#c1abea">resultSet&lt;/span>.&lt;span style="color:#b3d23c">next&lt;/span>()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">StringBuffer&lt;/span> &lt;span style="color:#c1abea">userInfo&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">StringBuffer&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">userInfo&lt;/span>.&lt;span style="color:#b3d23c">append&lt;/span>(&lt;span style="color:#98c379">&amp;#34;ID:&amp;#34;&lt;/span> &lt;span style="color:#c7bf54">+&lt;/span> &lt;span style="color:#c1abea">resultSet&lt;/span>.&lt;span style="color:#b3d23c">getString&lt;/span>(&lt;span style="color:#98c379">&amp;#34;id&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">userInfo&lt;/span>.&lt;span style="color:#b3d23c">append&lt;/span>(&lt;span style="color:#98c379">&amp;#34;\t\tUsername:&amp;#34;&lt;/span> &lt;span style="color:#c7bf54">+&lt;/span> &lt;span style="color:#c1abea">resultSet&lt;/span>.&lt;span style="color:#b3d23c">getString&lt;/span>(&lt;span style="color:#98c379">&amp;#34;username&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">userInfo&lt;/span>.&lt;span style="color:#b3d23c">append&lt;/span>(&lt;span style="color:#98c379">&amp;#34;\t\tSex:&amp;#34;&lt;/span> &lt;span style="color:#c7bf54">+&lt;/span> &lt;span style="color:#c1abea">resultSet&lt;/span>.&lt;span style="color:#b3d23c">getString&lt;/span>(&lt;span style="color:#98c379">&amp;#34;sex&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">userInfo&lt;/span>.&lt;span style="color:#b3d23c">append&lt;/span>(&lt;span style="color:#98c379">&amp;#34;\t\tAge:&amp;#34;&lt;/span> &lt;span style="color:#c7bf54">+&lt;/span> &lt;span style="color:#c1abea">resultSet&lt;/span>.&lt;span style="color:#b3d23c">getString&lt;/span>(&lt;span style="color:#98c379">&amp;#34;age&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">userInfo&lt;/span>.&lt;span style="color:#b3d23c">append&lt;/span>(&lt;span style="color:#98c379">&amp;#34;\t\tSchool:&amp;#34;&lt;/span> &lt;span style="color:#c7bf54">+&lt;/span> &lt;span style="color:#c1abea">resultSet&lt;/span>.&lt;span style="color:#b3d23c">getString&lt;/span>(&lt;span style="color:#98c379">&amp;#34;school&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">userInfo&lt;/span>.&lt;span style="color:#b3d23c">append&lt;/span>(&lt;span style="color:#98c379">&amp;#34;\t\tMajor:&amp;#34;&lt;/span> &lt;span style="color:#c7bf54">+&lt;/span> &lt;span style="color:#c1abea">resultSet&lt;/span>.&lt;span style="color:#b3d23c">getString&lt;/span>(&lt;span style="color:#98c379">&amp;#34;major&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">userInfo&lt;/span>.&lt;span style="color:#b3d23c">append&lt;/span>(&lt;span style="color:#98c379">&amp;#34;\t\tAddress:&amp;#34;&lt;/span> &lt;span style="color:#c7bf54">+&lt;/span> &lt;span style="color:#c1abea">resultSet&lt;/span>.&lt;span style="color:#b3d23c">getString&lt;/span>(&lt;span style="color:#98c379">&amp;#34;address&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">Gauge&lt;/span>.&lt;span style="color:#b3d23c">writeMessage&lt;/span>(&lt;span style="color:#c1abea">userInfo&lt;/span>.&lt;span style="color:#b3d23c">toString&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">resultSet&lt;/span>.&lt;span style="color:#b3d23c">last&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ef8383">int&lt;/span> &lt;span style="color:#c1abea">rowCount&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">resultSet&lt;/span>.&lt;span style="color:#b3d23c">getRow&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">resultSet&lt;/span>.&lt;span style="color:#b3d23c">close&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">assertTrue&lt;/span>(&lt;span style="color:#c1abea">rowCount&lt;/span> &lt;span style="color:#c7bf54">&amp;gt;&lt;/span> &lt;span style="color:#c1abea">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#c678dd">catch&lt;/span> (&lt;span style="color:#c1abea">SQLException&lt;/span> &lt;span style="color:#c1abea">e&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">e&lt;/span>.&lt;span style="color:#b3d23c">printStackTrace&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="update">update&lt;/h2>
&lt;ul>
&lt;li>.spec文件&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> ## update
 update record
 tags: crud,update

 * update record sex to &amp;#34;Female&amp;#34; which named &amp;#34;Gauge&amp;#34;
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>.java文件&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Step&lt;/span>(&lt;span style="color:#98c379">&amp;#34;update record sex to &amp;lt;Female&amp;gt; which named &amp;lt;Gauge&amp;gt;&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#ef8383">void&lt;/span> &lt;span style="color:#00b1f7">update&lt;/span>(&lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">sex&lt;/span>, &lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">name&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">statement&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">connection&lt;/span>.&lt;span style="color:#b3d23c">prepareStatement&lt;/span>(&lt;span style="color:#98c379">&amp;#34;UPDATE user SET sex=? WHERE username=?&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">statement&lt;/span>.&lt;span style="color:#b3d23c">setString&lt;/span>(&lt;span style="color:#c1abea">1&lt;/span>, &lt;span style="color:#c1abea">sex&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">statement&lt;/span>.&lt;span style="color:#b3d23c">setString&lt;/span>(&lt;span style="color:#c1abea">2&lt;/span>, &lt;span style="color:#c1abea">name&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ef8383">int&lt;/span> &lt;span style="color:#c1abea">resultNum&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">statement&lt;/span>.&lt;span style="color:#b3d23c">executeUpdate&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">assertTrue&lt;/span>(&lt;span style="color:#c1abea">resultNum&lt;/span> &lt;span style="color:#c7bf54">&amp;gt;&lt;/span> &lt;span style="color:#c1abea">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#c678dd">catch&lt;/span> (&lt;span style="color:#c1abea">SQLException&lt;/span> &lt;span style="color:#c1abea">e&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">e&lt;/span>.&lt;span style="color:#b3d23c">printStackTrace&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="delete">delete&lt;/h2>
&lt;ul>
&lt;li>.spec文件&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Markdown" data-lang="Markdown">&lt;span style="display:flex;">&lt;span> ## delete
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> delete record
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tags: crud,delete
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">*&lt;/span> delete the record which named &amp;#34;Gauge&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>.java文件&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Step&lt;/span>(&lt;span style="color:#98c379">&amp;#34;delete the record which named &amp;lt;Guage&amp;gt;&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#ef8383">void&lt;/span> &lt;span style="color:#00b1f7">delete&lt;/span>(&lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">name&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">statement&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">connection&lt;/span>.&lt;span style="color:#b3d23c">prepareStatement&lt;/span>(&lt;span style="color:#98c379">&amp;#34;DELETE FROM user WHERE username=?&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">statement&lt;/span>.&lt;span style="color:#b3d23c">setString&lt;/span>(&lt;span style="color:#c1abea">1&lt;/span>, &lt;span style="color:#c1abea">name&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ef8383">int&lt;/span> &lt;span style="color:#c1abea">resultNum&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">statement&lt;/span>.&lt;span style="color:#b3d23c">executeUpdate&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">assertTrue&lt;/span>(&lt;span style="color:#c1abea">resultNum&lt;/span> &lt;span style="color:#c7bf54">&amp;gt;&lt;/span> &lt;span style="color:#c1abea">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#c678dd">catch&lt;/span> (&lt;span style="color:#c1abea">SQLException&lt;/span> &lt;span style="color:#c1abea">e&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">e&lt;/span>.&lt;span style="color:#b3d23c">printStackTrace&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="关闭连接">关闭连接&lt;/h2>
&lt;ul>
&lt;li>.spec文件&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Markdown" data-lang="Markdown">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">*&lt;/span> close connection after crud
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>.java文件&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Step&lt;/span>(&lt;span style="color:#98c379">&amp;#34;close connection after crud&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#ef8383">void&lt;/span> &lt;span style="color:#00b1f7">closeConnection&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">statement&lt;/span>.&lt;span style="color:#b3d23c">close&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">connection&lt;/span>.&lt;span style="color:#b3d23c">close&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#c678dd">catch&lt;/span> (&lt;span style="color:#c1abea">SQLException&lt;/span> &lt;span style="color:#c1abea">e&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">e&lt;/span>.&lt;span style="color:#b3d23c">printStackTrace&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;ul>
&lt;li>需要把Jar包放在项目的lib目录下&lt;/li>
&lt;li>使用了&lt;a href="https://dev.mysql.com/downloads/file/?id=465644">MySQL驱动&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://download.csdn.net/detail/u013360850/9760640">下载项目&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Gauge中执行Http请求测试</title><link>https://blog.hellowood.dev/posts/gauge%E4%B8%AD%E6%89%A7%E8%A1%8Chttp%E8%AF%B7%E6%B1%82%E6%B5%8B%E8%AF%95/</link><pubDate>Mon, 01 Jan 2018 11:33:29 +0000</pubDate><guid>https://blog.hellowood.dev/posts/gauge%E4%B8%AD%E6%89%A7%E8%A1%8Chttp%E8%AF%B7%E6%B1%82%E6%B5%8B%E8%AF%95/</guid><description>&lt;blockquote>
&lt;p>通过Gauge执行自动化测试，测试Http请求&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>通过Java发送Http 请求来测试服务器请求执行状态&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>##GET请求&lt;/p>
&lt;ul>
&lt;li>.spec文件&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> ## query user
 query all user
 tags: query,request,http

 * query user
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>.java文件&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Step&lt;/span>(&lt;span style="color:#98c379">&amp;#34;query user&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#ef8383">void&lt;/span> &lt;span style="color:#00b1f7">queryUser&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">url&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;http://119.29.99.89:8080/query&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">result&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">sendGetRequest&lt;/span>(&lt;span style="color:#c1abea">url&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8a93a5;font-style:italic">//用到了FastJSON来处理返回的Json数据&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">JSONArray&lt;/span> &lt;span style="color:#c1abea">users&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">JSON&lt;/span>.&lt;span style="color:#b3d23c">parseArray&lt;/span>(&lt;span style="color:#c1abea">result&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">for&lt;/span> (&lt;span style="color:#ef8383">int&lt;/span> &lt;span style="color:#c1abea">i&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">0&lt;/span>; &lt;span style="color:#c1abea">i&lt;/span> &lt;span style="color:#c7bf54">&amp;lt;&lt;/span> &lt;span style="color:#c1abea">users&lt;/span>.&lt;span style="color:#b3d23c">size&lt;/span>(); &lt;span style="color:#c1abea">i&lt;/span>&lt;span style="color:#c7bf54">++&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">UserModel&lt;/span> &lt;span style="color:#c1abea">user&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">JSON&lt;/span>.&lt;span style="color:#b3d23c">parseObject&lt;/span>(&lt;span style="color:#c1abea">users&lt;/span>.&lt;span style="color:#b3d23c">get&lt;/span>(&lt;span style="color:#c1abea">i&lt;/span>).&lt;span style="color:#b3d23c">toString&lt;/span>(), &lt;span style="color:#c1abea">UserModel&lt;/span>.&lt;span style="color:#b3d23c">class&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">Gauge&lt;/span>.&lt;span style="color:#b3d23c">writeMessage&lt;/span>(&lt;span style="color:#c1abea">user&lt;/span>.&lt;span style="color:#b3d23c">toString&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">assertTrue&lt;/span>(&lt;span style="color:#c1abea">users&lt;/span> &lt;span style="color:#c7bf54">!=&lt;/span> &lt;span style="color:#b756ff;font-weight:bold">null&lt;/span> &lt;span style="color:#c7bf54">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#c7bf54">!&lt;/span>&lt;span style="color:#c1abea">users&lt;/span>.&lt;span style="color:#b3d23c">isEmpty&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8a93a5;font-style:italic">//发送一个GET请求&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">private&lt;/span> &lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#00b1f7">sendGetRequest&lt;/span>(&lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">url&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">result&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">BufferedReader&lt;/span> &lt;span style="color:#c1abea">in&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#b756ff;font-weight:bold">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">URL&lt;/span> &lt;span style="color:#c1abea">realUrl&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">URL&lt;/span>(&lt;span style="color:#c1abea">url&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">URLConnection&lt;/span> &lt;span style="color:#c1abea">connection&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">realUrl&lt;/span>.&lt;span style="color:#b3d23c">openConnection&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">connection&lt;/span>.&lt;span style="color:#b3d23c">connect&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">in&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">BufferedReader&lt;/span>(&lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">InputStreamReader&lt;/span>(&lt;span style="color:#c1abea">connection&lt;/span>.&lt;span style="color:#b3d23c">getInputStream&lt;/span>()));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">line&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">while&lt;/span> ((&lt;span style="color:#c1abea">line&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">in&lt;/span>.&lt;span style="color:#b3d23c">readLine&lt;/span>()) &lt;span style="color:#c7bf54">!=&lt;/span> &lt;span style="color:#b756ff;font-weight:bold">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">result&lt;/span> &lt;span style="color:#c7bf54">+=&lt;/span> &lt;span style="color:#c1abea">line&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#c678dd">catch&lt;/span> (&lt;span style="color:#c1abea">MalformedURLException&lt;/span> &lt;span style="color:#c1abea">e&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">e&lt;/span>.&lt;span style="color:#b3d23c">printStackTrace&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#c678dd">catch&lt;/span> (&lt;span style="color:#c1abea">IOException&lt;/span> &lt;span style="color:#c1abea">e&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">e&lt;/span>.&lt;span style="color:#b3d23c">printStackTrace&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#c678dd">finally&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">if&lt;/span> (&lt;span style="color:#c1abea">in&lt;/span> &lt;span style="color:#c7bf54">!=&lt;/span> &lt;span style="color:#b756ff;font-weight:bold">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">in&lt;/span>.&lt;span style="color:#b3d23c">close&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#c678dd">catch&lt;/span> (&lt;span style="color:#c1abea">IOException&lt;/span> &lt;span style="color:#c1abea">e&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">e&lt;/span>.&lt;span style="color:#b3d23c">printStackTrace&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c1abea">result&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;p>##POST请求&lt;/p></description></item><item><title>使用Gradle编译执行Gague项目</title><link>https://blog.hellowood.dev/posts/%E4%BD%BF%E7%94%A8gradle%E7%BC%96%E8%AF%91%E6%89%A7%E8%A1%8Cgague%E9%A1%B9%E7%9B%AE/</link><pubDate>Mon, 01 Jan 2018 11:32:34 +0000</pubDate><guid>https://blog.hellowood.dev/posts/%E4%BD%BF%E7%94%A8gradle%E7%BC%96%E8%AF%91%E6%89%A7%E8%A1%8Cgague%E9%A1%B9%E7%9B%AE/</guid><description>&lt;p>使用Gradle编译运行Gauge项目可以很大程度解决依赖的问题，并且可以根据需要创建多个不同的Task来在不同的环境运行或执行不同的操作&lt;/p>
&lt;h2 id="创建gauge项目">创建Gauge项目&lt;/h2>
&lt;ul>
&lt;li>首先在IDEA中创建一个Gauge项目
&lt;img src="http://img.blog.csdn.net/20170216213149019?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMzM2MDg1MA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述">&lt;/li>
&lt;li>打开命令行，执行&lt;code>gradle init&lt;/code> 初始化Gradle项目
&lt;img src="http://img.blog.csdn.net/20170216213209779?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMzM2MDg1MA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述">&lt;/li>
&lt;li>修改build.gradle文件，添加Gauge的依赖&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>apply plugin: &amp;#39;java&amp;#39;
apply plugin: &amp;#39;idea&amp;#39;
apply plugin: &amp;#39;gauge&amp;#39;

group = &amp;#34;Gradle-Gauge&amp;#34;
version = &amp;#34;1.0.0&amp;#34;


sourceCompatibility = 1.7
targetCompatibility = 1.7

buildscript {
 repositories {
 mavenCentral()
 }
 dependencies {
 classpath &amp;#39;com.thoughtworks.gauge.gradle:gauge-gradle-plugin:+&amp;#39;
 }
}

repositories {
 mavenCentral()
}

dependencies {
 //添加selenium是为了执行网页测试
 compile(
 &amp;#39;com.thoughtworks.gauge:gauge-java:0.5.1&amp;#39;,
 &amp;#39;junit:junit:4.12&amp;#39;,
 &amp;#39;org.seleniumhq.selenium:selenium-chrome-driver:3.0.1&amp;#39;,
 &amp;#39;org.seleniumhq.selenium:selenium-support:3.0.1&amp;#39;
 )
}

//执行`gradle gague`时是在执行该Task
gauge {
 specsDir = &amp;#39;specs&amp;#39;
}
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>执行&lt;code>gradle build&lt;/code>来编译项目，并下载依赖&lt;/li>
&lt;li>执行&lt;code>gradle gauge&lt;/code>来运行Gauge项目，执行测试&lt;/li>
&lt;/ul></description></item><item><title>Gauge中执行钩子(Hook)</title><link>https://blog.hellowood.dev/posts/gauge%E4%B8%AD%E6%89%A7%E8%A1%8C%E9%92%A9%E5%AD%90-hook/</link><pubDate>Mon, 01 Jan 2018 11:31:40 +0000</pubDate><guid>https://blog.hellowood.dev/posts/gauge%E4%B8%AD%E6%89%A7%E8%A1%8C%E9%92%A9%E5%AD%90-hook/</guid><description>&lt;p>本文所有内容均参考自&lt;a href="http://getgauge.io/documentation/user/current/language_features/execution_hooks.html">Gauge官方文档&lt;/a>&lt;/p>
&lt;hr>
&lt;blockquote>
&lt;p>钩子可以理解为&lt;code>Java&lt;/code>中的&lt;code>AOP(Aspect Oriented Programming)&lt;/code>，把&lt;code>Specification&lt;/code>或&lt;code>Scenario&lt;/code>当做一个切面，在执行之前和执行之后做一些操作&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;h2 id="suit-hook">Suit Hook&lt;/h2>
&lt;blockquote>
&lt;p>作用于所有的&lt;code>Specification&lt;/code>，在&lt;code>Specification&lt;/code>执行之前或执行之后执行&lt;/p>
&lt;/blockquote>
&lt;pre tabindex="0">&lt;code> //在所有的Specification执行之前执行
 @BeforeSuite
 public void BeforeSuite() {
 // Code for before suite
 }

 //在所有的Specification执行之后执行
 @AfterSuite
 public void AfterSuite() {
 // Code for after suite
 }
&lt;/code>&lt;/pre>&lt;hr>
&lt;p>##Specification Hook&lt;/p>
&lt;blockquote>
&lt;p>作用于&lt;code>Specification&lt;/code>，可以在某个&lt;code>Specification&lt;/code>执行之前或执行之后执行&lt;/p>
&lt;/blockquote>
&lt;pre tabindex="0">&lt;code> //在每一个Specification执行之前执行
 @BeforeSpec
 public void BeforeSpec() {
 // Code for before spec
 }

 //在每一个Specification执行之后执行
 @AfterSpec
 public void AfterSpec() {
 // Code for after spec
 }
&lt;/code>&lt;/pre>&lt;hr>
&lt;p>##Scenario Hook&lt;/p>
&lt;blockquote>
&lt;p>作用于&lt;code>Scenario&lt;/code> ，可以在某个&lt;code>Scenario&lt;/code> 执行之前或执行之后执行&lt;/p>
&lt;/blockquote>
&lt;pre tabindex="0">&lt;code> //在每一个Scenario 执行之前执行
 @BeforeScenario
 public void BeforeScenario() {
 // Code for before scenario
 }

 //在每一个Scenario 执行之后执行
 @AfterScenario
 public void AfterScenario() {
 // Code for after scenario
 }
&lt;/code>&lt;/pre>&lt;hr>
&lt;p>##Step Hook&lt;/p></description></item><item><title>Gauge中执行测试的常用命令</title><link>https://blog.hellowood.dev/posts/gauge%E4%B8%AD%E6%89%A7%E8%A1%8C%E6%B5%8B%E8%AF%95%E7%9A%84%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link><pubDate>Mon, 01 Jan 2018 11:30:51 +0000</pubDate><guid>https://blog.hellowood.dev/posts/gauge%E4%B8%AD%E6%89%A7%E8%A1%8C%E6%B5%8B%E8%AF%95%E7%9A%84%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid><description>&lt;p>本文所有内容均参考自Gauge官方文档s&lt;/p>
&lt;hr>
&lt;p>#初始化&lt;code>Java&lt;/code>项目&lt;/p>
&lt;blockquote>
&lt;p>会在指定的文件夹下创建一个新的&lt;code>Gauge&lt;/code>项目，如果没有安装&lt;code>Java&lt;/code>和&lt;code>Html-report&lt;/code>插件会自动安装&lt;/p>
&lt;/blockquote>
&lt;pre tabindex="0">&lt;code> gauge --init java
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="通过文件执行">通过文件执行&lt;/h2>
&lt;ul>
&lt;li>执行&lt;code>specs&lt;/code>文件夹下所有&lt;code>.spec&lt;/code>文件&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> gauge specs
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>执行&lt;code>specs&lt;/code>文件夹下的&lt;code>specs.spec&lt;/code>文件&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> gauge specs/specs.spec
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>执行多个文件夹下的所有文件&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> gauge specs-dir1/ specs-dir2/
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>执行多个文件夹下的指定文件&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> gauge specs-dir1/specs1.spec specs-dir2/spesc2.spec
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>执行一个特定的&lt;code>Scenario&lt;/code>&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> gauge specs/specs.spec:16
&lt;/code>&lt;/pre>&lt;blockquote>
&lt;p>后面的数字是要执行的&lt;code>Scenario&lt;/code>所在的行数，从0开始&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>执行多个特定的&lt;code>Scenario&lt;/code>&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> gauge specs-dir1/specs1.spec:10 specs-dir2/specs2.spce:20
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>执行的过程中输出日志&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> gauge --verbose specs
&lt;/code>&lt;/pre>&lt;hr>
&lt;p>##通过&lt;code>Tag&lt;/code>执行&lt;/p>
&lt;pre tabindex="0">&lt;code> Login specification
 ===================
 Tags: login, admin, user login


 Successful login scenario
 -------------------------
 Tags: login-success, admin


 failed login scenario
 -------------------------
 Tags: login-failed, admin
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>通过单独的&lt;code>Tag&lt;/code>执行&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> gauge --tags admin specs
&lt;/code>&lt;/pre>&lt;blockquote>
&lt;p>带有admin 的所有的&lt;code>Specification&lt;/code>或&lt;code>Scenario&lt;/code>都会被执行&lt;/p></description></item><item><title>Gauge 中Step使用别名</title><link>https://blog.hellowood.dev/posts/gauge-%E4%B8%ADstep%E4%BD%BF%E7%94%A8%E5%88%AB%E5%90%8D/</link><pubDate>Mon, 01 Jan 2018 11:29:48 +0000</pubDate><guid>https://blog.hellowood.dev/posts/gauge-%E4%B8%ADstep%E4%BD%BF%E7%94%A8%E5%88%AB%E5%90%8D/</guid><description>&lt;p>所有内容均来自&lt;a href="http://getgauge.io/documentation/user/current/advanced_readings/step_alias.html">Gauge官网文档&lt;/a>&lt;/p>
&lt;hr>
&lt;p>##在执行的过程中，可能需要使用不同的名称来执行同样的操作，所以使用别名来区分&lt;/p>
&lt;hr>
&lt;ul>
&lt;li>在这个Scenario中，第一步和第三步是相同的操作，但是表示的方式不同&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> User Creation
 =============
 Multiple Users
 --------------
 * Create a user &amp;#34;user 1&amp;#34;
 * Verify &amp;#34;user 1&amp;#34; has access to dashboard
 * Create another user &amp;#34;user 2&amp;#34;
 * Verify &amp;#34;user 2&amp;#34; has access to dashboard
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>使用别名即可解决这个问题：&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> public class Users {

 @Step({&amp;#34;Create a user &amp;lt;user_name&amp;gt;&amp;#34;, &amp;#34;Create another user &amp;lt;user_name&amp;gt;&amp;#34;})
 public void createUser(String user_name) {
 // create user user_name
 }
 }
&lt;/code>&lt;/pre>&lt;hr>
&lt;ul>
&lt;li>在这个两个Scenario中，发送邮件的操作是相同的&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> User Creation
 -------------
 * User creates a new account
 * A &amp;#34;welcome&amp;#34; email is sent to the user

 Shopping Cart
 -------------
 * User checks out the shopping cart
 * Payment is successfully received
 * An email confirming the &amp;#34;order&amp;#34; is sent
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>使用别名：&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> public class Users {

 @Step({&amp;#34;A &amp;lt;email_type&amp;gt; email is sent to the user&amp;#34;, &amp;#34;An email confirming the &amp;lt;email_type&amp;gt; is sent&amp;#34;})
 public void sendEmail(String email_type) {
 // Send email of email_type
 }
 }
&lt;/code>&lt;/pre></description></item><item><title>Gauge基础知识</title><link>https://blog.hellowood.dev/posts/gauge%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</link><pubDate>Mon, 01 Jan 2018 11:29:04 +0000</pubDate><guid>https://blog.hellowood.dev/posts/gauge%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid><description>&lt;p>本文所有内容均参照自&lt;a href="http://getgauge.io/documentation/user/current/">Gauge官方文档&lt;/a>&lt;/p>
&lt;hr>
&lt;blockquote>
&lt;p>#基本思想
&lt;code>Gauge&lt;/code>入门比较简单，&lt;code>Gauge&lt;/code>的基本思想就是通过&lt;code>.spec&lt;/code> 或者&lt;code>.md&lt;/code> 文件，使用&lt;code>MarkDown&lt;/code>语法去规定执行的动作，然后由&lt;code>Java&lt;/code>或者其他语言的文件去按照所写的&lt;code>.spec&lt;/code> 或者&lt;code>.md&lt;/code> 文件的顺序去执行&lt;code>Java&lt;/code>文件，从而达到测试的目的&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;hr>
&lt;h2 id="specification">Specification&lt;/h2>
&lt;blockquote>
&lt;ul>
&lt;li>作用：开始标志，只能有一个，每个Specification至少包含一个Scenario&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;pre tabindex="0">&lt;code>Specification name
==================

或者：

# Specification name
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="scenario">Scenario&lt;/h2>
&lt;blockquote>
&lt;ul>
&lt;li>作用：特定的场景中的一个情节，一个或多个Scenario组成一个Specification，每个Scenario至少包含一个Step&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;pre tabindex="0">&lt;code>Scenario name
-------------

或者：

## Scenario name
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="step">Step&lt;/h2>
&lt;blockquote>
&lt;p>作用：Specification的可执行部分&lt;/p>
&lt;/blockquote>
&lt;pre tabindex="0">&lt;code>* Step Name
&lt;/code>&lt;/pre>&lt;blockquote>
&lt;ul>
&lt;li>一般Step&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;pre>&lt;code>- 正常执行的Step，包含在Scenario中
&lt;/code>&lt;/pre>
&lt;pre tabindex="0">&lt;code> * step
&lt;/code>&lt;/pre>&lt;blockquote>
&lt;ul>
&lt;li>Context Step&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;pre>&lt;code> - 在Scenario执行之前执行的操作，在每个Scenario执行之前都会先执行Context Step
&lt;/code>&lt;/pre>
&lt;pre tabindex="0">&lt;code> * Context step
&lt;/code>&lt;/pre>&lt;blockquote>
&lt;ul>
&lt;li>Teardown Step&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;pre>&lt;code> - 在Scenario执行之后执行的操作，在每个Scenario执行之后都会执行 Teardown Step
 -用半角下划线标识，不是横线

 ________________
 Teardown Step

 * Teardown Step1
 * Teardown Step2
&lt;/code>&lt;/pre>
&lt;pre tabindex="0">&lt;code>
 Delete project
 ==============

 * Sign up for user &amp;#34;mike&amp;#34;
 * Log in as &amp;#34;mike&amp;#34;

 Delete single project
 ---------------------
 * Delete the &amp;#34;example&amp;#34; project
 * Ensure &amp;#34;example&amp;#34; project has been deleted

 Delete multiple projects
 ------------------------
 * Delete all the projects in the list
 * Ensure project list is empty

 ____________________
 These are teardown steps

 * Logout user &amp;#34;mike&amp;#34;
 * Delete user &amp;#34;mike&amp;#34;
&lt;/code>&lt;/pre>&lt;blockquote>
&lt;p>执行步骤：&lt;/p></description></item><item><title>在IDEA中配置Gauge环境</title><link>https://blog.hellowood.dev/posts/%E5%9C%A8idea%E4%B8%AD%E9%85%8D%E7%BD%AEgauge%E7%8E%AF%E5%A2%83/</link><pubDate>Mon, 01 Jan 2018 11:28:05 +0000</pubDate><guid>https://blog.hellowood.dev/posts/%E5%9C%A8idea%E4%B8%AD%E9%85%8D%E7%BD%AEgauge%E7%8E%AF%E5%A2%83/</guid><description>&lt;blockquote>
&lt;h3 id="gaugehttpgetgaugeio是一个自动化测试工具主要是通过spec-文件指定执行的步骤然后由java代码去测试">&lt;a href="http://getgauge.io">Gauge&lt;/a>是一个自动化测试工具，主要是通过.spec 文件指定执行的步骤，然后由Java代码去测试&lt;/h3>
&lt;/blockquote>
&lt;ul>
&lt;li>首先，&lt;a href="http://getgauge.io/get-started/index.html">下载&lt;/a>安装Gauge&lt;/li>
&lt;li>安装后通过&lt;code>cmd&lt;/code>运行&lt;code>guage -v&lt;/code> 来确认Gauge安装成功
&lt;img src="http://img.blog.csdn.net/20170119132307236?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMzM2MDg1MA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述">&lt;/li>
&lt;li>安装成功后安装Gauge的插件&lt;/li>
&lt;li>&lt;code>gauge --install-all&lt;/code>&lt;/li>
&lt;li>或者可以用 &lt;code>gauge --install java&lt;/code>和&lt;code>gauge --insatll html-report&lt;/code>·&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="http://img.blog.csdn.net/20170119132349174?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMzM2MDg1MA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述">&lt;/p>
&lt;ul>
&lt;li>在IDEA中下载Gauge插件安装
&lt;img src="http://img.blog.csdn.net/20170119132409063?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMzM2MDg1MA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述">&lt;/li>
&lt;li>安装完成后重启IDEA即完成Gauge的环境配置&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>注意：&lt;/p>
&lt;ul>
&lt;li>如果修改了安装目录需要配置&lt;code>GAUGE_ROOT&lt;/code>，否则IDEA会报错&lt;/li>
&lt;li>JDK的所有&lt;code>PATH&lt;/code>，&lt;code>JAVA_HOME&lt;/code>，&lt;code>CLASSPATH&lt;/code>环境变量都需要配置好&lt;/li>
&lt;li>需要确认&lt;code>PATH&lt;/code>中配置了Gauge的&lt;code>bin&lt;/code>目录&lt;/li>
&lt;/ul></description></item><item><title>Gauge中Gradle自定义Task失败的解决方法</title><link>https://blog.hellowood.dev/posts/gauge%E4%B8%ADgradle%E8%87%AA%E5%AE%9A%E4%B9%89task%E5%A4%B1%E8%B4%A5%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</link><pubDate>Mon, 01 Jan 2018 11:26:41 +0000</pubDate><guid>https://blog.hellowood.dev/posts/gauge%E4%B8%ADgradle%E8%87%AA%E5%AE%9A%E4%B9%89task%E5%A4%B1%E8%B4%A5%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</guid><description>&lt;h2 id="gauge中加入了gradle之后根据官方文档自定义task并不能执行">Gauge中加入了Gradle之后根据官方文档自定义task并不能执行&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-groovy" data-lang="groovy">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">task&lt;/span> &lt;span style="color:#00b1f7">gaugeTest&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#f5a40d">type:&lt;/span> &lt;span style="color:#c1abea">GaugeTask&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">doFirst&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">gauge&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">specsDir&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#39;specs&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">inParallel&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#b756ff;font-weight:bold">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">nodes&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#d19a66">4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">env&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#39;test&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">additionalFlags&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#39;--verbose&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>错误信息&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-console" data-lang="console">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e"> * What went wrong:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e"> A problem occurred evaluating root project &amp;#39;Gauge&amp;#39;.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e"> &amp;gt; Could not find property &amp;#39;GaugeTask&amp;#39; on root project &amp;#39;Gauge&amp;#39;.
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>这是因为Gradle并不能识别GaugeTask，需要写GaugeTask的限定类名：&lt;/p>
&lt;/blockquote>
&lt;h2 id="解决方法">解决方法&lt;/h2>
&lt;ul>
&lt;li>在build.gradle中添加&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-groovy" data-lang="groovy">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">com.thoughtworks.gauge.gradle.GaugeTask&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>或者写成：&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-groovy" data-lang="groovy">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">task&lt;/span> &lt;span style="color:#00b1f7">gaugeTest&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#f5a40d">type:&lt;/span> &lt;span style="color:#c1abea">com&lt;/span>&lt;span style="color:#c7bf54">.&lt;/span>&lt;span style="color:#b3d23c">thoughtworks&lt;/span>&lt;span style="color:#c7bf54">.&lt;/span>&lt;span style="color:#b3d23c">gauge&lt;/span>&lt;span style="color:#c7bf54">.&lt;/span>&lt;span style="color:#b3d23c">gradle&lt;/span>&lt;span style="color:#c7bf54">.&lt;/span>&lt;span style="color:#b3d23c">GaugeTask&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">doFirst&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">gauge&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">specsDir&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#39;specs&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">inParallel&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#b756ff;font-weight:bold">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">nodes&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#d19a66">4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">env&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#39;test&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">additionalFlags&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#39;--verbose&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>这样就可以识别执行了&lt;/p>
&lt;/blockquote></description></item><item><title>IDEA Maven项目导入失败，无法识别pom文件</title><link>https://blog.hellowood.dev/posts/idea-maven%E9%A1%B9%E7%9B%AE%E5%AF%BC%E5%85%A5%E5%A4%B1%E8%B4%A5%E6%97%A0%E6%B3%95%E8%AF%86%E5%88%ABpom%E6%96%87%E4%BB%B6/</link><pubDate>Mon, 01 Jan 2018 11:23:33 +0000</pubDate><guid>https://blog.hellowood.dev/posts/idea-maven%E9%A1%B9%E7%9B%AE%E5%AF%BC%E5%85%A5%E5%A4%B1%E8%B4%A5%E6%97%A0%E6%B3%95%E8%AF%86%E5%88%ABpom%E6%96%87%E4%BB%B6/</guid><description>&lt;h2 id="解决思路">解决思路&lt;/h2>
&lt;blockquote>
&lt;h4 id="按照以下顺序逐个检查更改host文件比价极端应该很少见">按照以下顺序逐个检查，更改host文件比价极端，应该很少见&lt;/h4>
&lt;/blockquote>
&lt;h4 id="1-重启idea">1. 重启IDEA&lt;/h4>
&lt;h4 id="2-重启电脑">2. 重启电脑&lt;/h4>
&lt;h4 id="3-重新导入项目">3. 重新导入项目&lt;/h4>
&lt;h4 id="4-重装maven">4. 重装Maven&lt;/h4>
&lt;h4 id="5-重装idea">5. 重装IDEA&lt;/h4>
&lt;h4 id="6-检查host文件中有没有其他地址指向localhost">6. 检查host文件中有没有其他地址指向&lt;code>localhost&lt;/code>&lt;/h4>
&lt;hr>
&lt;blockquote>
&lt;p>一个Maven项目，之前是可以正常使用的，没有任何问题，但是今天去Debug启动Tomcat，提示Socket被占用， 错误信息如下：&lt;/p>
&lt;/blockquote>
&lt;pre tabindex="0">&lt;code>Error running &amp;#39;Console&amp;#39;: Unable to open debugger port (127.0.0.1:63347): jav...
&lt;/code>&lt;/pre>&lt;blockquote>
&lt;ul>
&lt;li>正常启动时又提示JVM的1099端口被占用，无论如何修改端口都无效&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;blockquote>
&lt;ul>
&lt;li>先看到了这个帖子&lt;a href="http://blog.csdn.net/lutinghuan/article/details/45693577">nable to open debugger port (127.0.0.1:63777): java.net.BindException &amp;ldquo;Address already in use: JVM&lt;/a>，之后重启IDEA，重启电脑，重新导入项目，最后重装IDEA依然不好用；&lt;/li>
&lt;li>之后又觉得可能是Maven的问题，运行Maven的命令后发现Maven是正常的；&lt;/li>
&lt;li>最后发现了&lt;a href="http://www.jianshu.com/p/fb7bddca7b1e">IntellijIDEA 无法创建Maven工程，导入已有工程无法识别pom文件&lt;/a>这篇博客，发现问题挺像的，而我确实改过host文件，&lt;strong>将内网IP指向了&lt;code>localhost&lt;/code>&lt;/strong>；改回来之后发现可以正常导入了&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;blockquote>
&lt;ul>
&lt;li>问题的原因应该就是因为改了host文件导致localhost无法正常访问，所有各种端口都不行，也导致了无法访问Maven仓库，所以IDEA无法识别项目破，pom文件&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h3 id="host文件除了127001和1之外不要有其他的地址指向localhost">host文件除了&lt;code>127.0.0.1&lt;/code>和&lt;code>::1&lt;/code>之外不要有其他的地址指向&lt;code>localhost&lt;/code>&lt;/h3></description></item><item><title>Spring Boot Actuator 添加 Git 和 Build 信息</title><link>https://blog.hellowood.dev/posts/spring-boot-actuator-%E6%B7%BB%E5%8A%A0-git-%E5%92%8C-build-%E4%BF%A1%E6%81%AF/</link><pubDate>Mon, 01 Jan 2018 11:20:12 +0000</pubDate><guid>https://blog.hellowood.dev/posts/spring-boot-actuator-%E6%B7%BB%E5%8A%A0-git-%E5%92%8C-build-%E4%BF%A1%E6%81%AF/</guid><description>&lt;blockquote>
&lt;p>在使用 Spring Boot Actuator 时可以通过生成 Git 和编译文件来提供信息&lt;/p>
&lt;/blockquote>
&lt;h2 id="添加-git-信息">添加 Git 信息&lt;/h2>
&lt;ul>
&lt;li>添加插件
&lt;blockquote>
&lt;p>在 build.gradle 文件中添加一下配置&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>buildscript {

 repositories {
 maven { url &amp;#34;https://plugins.gradle.org/m2/&amp;#34; }
 }

 dependencies {
 classpath(&amp;#34;gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:1.4.17&amp;#34;)
 }
}

apply plugin: &amp;#39;com.gorylenko.gradle-git-properties&amp;#39;
&lt;/code>&lt;/pre>&lt;blockquote>
&lt;p>这样就会在 &lt;code> build\main\resource\&lt;/code>下生成 &lt;code>git.properties&lt;/code>文件，该文件内会包含 Git 仓库的信息&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>其他配置
&lt;blockquote>
&lt;p>build.gradle&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>
gitProperties {
 // 日期格式
 dateFormat = &amp;#34;yyyy-MM-dd&amp;#39; &amp;#39;HH:mm:ss&amp;#34;
 // 时区
 dateFormatTimeZone = &amp;#34;PST&amp;#34;
 // 生成的 git.properties 文件位置
 gitPropertiesDir = new File(&amp;#34;${project.rootDir}/build/resources/main/&amp;#34;)
 // git 文件所在目录
 gitRepositoryRoot = new File(&amp;#34;${project.rootDir}/&amp;#34;)
}
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="添加编译信息">添加编译信息&lt;/h2>
&lt;ul>
&lt;li>添加配置信息
&lt;blockquote>
&lt;p>在 build.gradle 中添加&lt;/p></description></item><item><title>SpringMVC 生成验证码</title><link>https://blog.hellowood.dev/posts/springmvc-%E7%94%9F%E6%88%90%E9%AA%8C%E8%AF%81%E7%A0%81/</link><pubDate>Mon, 01 Jan 2018 01:04:16 +0000</pubDate><guid>https://blog.hellowood.dev/posts/springmvc-%E7%94%9F%E6%88%90%E9%AA%8C%E8%AF%81%E7%A0%81/</guid><description>&lt;blockquote>
&lt;p>使用 Google kaptcha 为 SpringMVC Maven 项目生成验证码&lt;/p>
&lt;/blockquote>
&lt;p>##1 添加依赖&lt;/p>
&lt;pre tabindex="0">&lt;code> &amp;lt;dependency&amp;gt;
 &amp;lt;groupId&amp;gt;com.github.penggle&amp;lt;/groupId&amp;gt;
 &amp;lt;artifactId&amp;gt;kaptcha&amp;lt;/artifactId&amp;gt;
 &amp;lt;version&amp;gt;2.3.2&amp;lt;/version&amp;gt;
 &amp;lt;/dependency&amp;gt;
&lt;/code>&lt;/pre>&lt;h2 id="2-配置文件中添加验证码生成器bean">2 配置文件中添加验证码生成器Bean&lt;/h2>
&lt;pre tabindex="0">&lt;code> &amp;lt;!--图片验证码--&amp;gt;
 &amp;lt;bean id=&amp;#34;captchaProducer&amp;#34; class=&amp;#34;com.google.code.kaptcha.impl.DefaultKaptcha&amp;#34;&amp;gt;
 &amp;lt;property name=&amp;#34;config&amp;#34;&amp;gt;
 &amp;lt;bean class=&amp;#34;com.google.code.kaptcha.util.Config&amp;#34;&amp;gt;
 &amp;lt;constructor-arg&amp;gt;
 &amp;lt;props&amp;gt;
 &amp;lt;prop key=&amp;#34;kaptcha.border&amp;#34;&amp;gt;no&amp;lt;/prop&amp;gt;
 &amp;lt;prop key=&amp;#34;kaptcha.image.width&amp;#34;&amp;gt;120&amp;lt;/prop&amp;gt;
 &amp;lt;prop key=&amp;#34;kaptcha.session.key&amp;#34;&amp;gt;code&amp;lt;/prop&amp;gt;
 &amp;lt;prop key=&amp;#34;kaptcha.textproducer.font.color&amp;#34;&amp;gt;blue&amp;lt;/prop&amp;gt;
 &amp;lt;prop key=&amp;#34;kaptcha.textproducer.font.size&amp;#34;&amp;gt;40&amp;lt;/prop&amp;gt;
 &amp;lt;prop key=&amp;#34;kaptcha.textproducer.char.length&amp;#34;&amp;gt;4&amp;lt;/prop&amp;gt;
 &amp;lt;/props&amp;gt;
 &amp;lt;/constructor-arg&amp;gt;
 &amp;lt;/bean&amp;gt;
 &amp;lt;/property&amp;gt;
 &amp;lt;/bean&amp;gt;
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>配置项&lt;/li>
&lt;/ul>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">属性&lt;/th>
 &lt;th style="text-align: left">作用&lt;/th>
 &lt;th style="text-align: left">说明&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">kaptcha.border&lt;/td>
 &lt;td style="text-align: left">是否有边框&lt;/td>
 &lt;td style="text-align: left">默认为true 我们可以自己设置yes，no&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">kaptcha.border.color&lt;/td>
 &lt;td style="text-align: left">边框颜色&lt;/td>
 &lt;td style="text-align: left">默认为Color.BLACK&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">kaptcha.border.thickness&lt;/td>
 &lt;td style="text-align: left">边框粗细度&lt;/td>
 &lt;td style="text-align: left">默认为1&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">kaptcha.producer.impl&lt;/td>
 &lt;td style="text-align: left">验证码生成器&lt;/td>
 &lt;td style="text-align: left">默认为DefaultKaptcha&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">kaptcha.textproducer.impl&lt;/td>
 &lt;td style="text-align: left">验证码文本生成器&lt;/td>
 &lt;td style="text-align: left">默认为DefaultTextCreator&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">kaptcha.textproducer.char.string&lt;/td>
 &lt;td style="text-align: left">验证码文本字符内容范围&lt;/td>
 &lt;td style="text-align: left">默认为abcde2345678gfynmnpwx&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">kaptcha.textproducer.char.length&lt;/td>
 &lt;td style="text-align: left">验证码文本字符长度&lt;/td>
 &lt;td style="text-align: left">默认为5&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">kaptcha.textproducer.font.names&lt;/td>
 &lt;td style="text-align: left">验证码文本字体样式&lt;/td>
 &lt;td style="text-align: left">默认为new Font(&amp;ldquo;Arial&amp;rdquo;, 1, fontSize), new Font(&amp;ldquo;Courier&amp;rdquo;, 1, fontSize)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">kaptcha.textproducer.font.size&lt;/td>
 &lt;td style="text-align: left">验证码文本字符大小&lt;/td>
 &lt;td style="text-align: left">默认为40&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">kaptcha.textproducer.font.color&lt;/td>
 &lt;td style="text-align: left">验证码文本字符颜色&lt;/td>
 &lt;td style="text-align: left">默认为Color.BLACK&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">kaptcha.textproducer.char.space&lt;/td>
 &lt;td style="text-align: left">验证码文本字符间距&lt;/td>
 &lt;td style="text-align: left">默认为2&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">kaptcha.noise.impl&lt;/td>
 &lt;td style="text-align: left">验证码噪点生成对象&lt;/td>
 &lt;td style="text-align: left">默认为DefaultNoise&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">kaptcha.noise.color&lt;/td>
 &lt;td style="text-align: left">验证码噪点颜色&lt;/td>
 &lt;td style="text-align: left">默认为Color.BLACK&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">kaptcha.obscurificator.impl&lt;/td>
 &lt;td style="text-align: left">验证码样式引擎&lt;/td>
 &lt;td style="text-align: left">默认为WaterRipple&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">kaptcha.word.impl&lt;/td>
 &lt;td style="text-align: left">验证码文本字符渲染&lt;/td>
 &lt;td style="text-align: left">默认为DefaultWordRenderer&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">kaptcha.background.impl&lt;/td>
 &lt;td style="text-align: left">验证码背景生成器&lt;/td>
 &lt;td style="text-align: left">默认为DefaultBackground&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">kaptcha.background.clear.from&lt;/td>
 &lt;td style="text-align: left">验证码背景颜色渐进&lt;/td>
 &lt;td style="text-align: left">默认为Color.LIGHT_GRAY&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">kaptcha.background.clear.to&lt;/td>
 &lt;td style="text-align: left">验证码背景颜色渐进&lt;/td>
 &lt;td style="text-align: left">默认为Color.WHITE&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">kaptcha.image.width&lt;/td>
 &lt;td style="text-align: left">验证码图片宽度&lt;/td>
 &lt;td style="text-align: left">默认为200&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">kaptcha.image.height&lt;/td>
 &lt;td style="text-align: left">验证码图片高度&lt;/td>
 &lt;td style="text-align: left">默认为50&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="3-页面添加验证码图片和输入框">3 页面添加验证码图片和输入框&lt;/h2>
&lt;pre tabindex="0">&lt;code> &amp;lt;div class=&amp;#34;col-md-12&amp;#34;&amp;gt;
 &amp;lt;div class=&amp;#34;col-md-7 form-control&amp;#34; style=&amp;#34;float:left; width: 60%;&amp;#34;&amp;gt;
 &amp;lt;input type=&amp;#34;text&amp;#34; id=&amp;#34;validateCode&amp;#34; name=&amp;#34;validateCode&amp;#34; placeholder=&amp;#34;验证码&amp;#34; &amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;div class=&amp;#34;col-md-3&amp;#34; style=&amp;#34;float: right;overflow: visible !important;&amp;#34;&amp;gt;
 &amp;lt;img src=&amp;#34;./loadValidateCode&amp;#34; id=&amp;#34;validateCodeImage&amp;#34; name=&amp;#34;validateCodeImage&amp;#34;
 style=&amp;#34;width: 100px;height: 35px;&amp;#34; onclick=&amp;#34;loadValidateCode()&amp;#34; &amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
&lt;/code>&lt;/pre>&lt;h2 id="4-页面添加刷新验证码">4 页面添加刷新验证码&lt;/h2>
&lt;pre tabindex="0">&lt;code> // 加载验证码
 function loadValidateCode() {
 var time = new Date().getTime();
 $(&amp;#34;#validateCodeImage&amp;#34;).attr(&amp;#39;src&amp;#39;, &amp;#39;./loadValidateCode&amp;#39;)
 }
&lt;/code>&lt;/pre>&lt;h2 id="5-后台添加生成验证码">5 后台添加生成验证码&lt;/h2>
&lt;ul>
&lt;li>导入包&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> import com.google.code.kaptcha.Producer;
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>生成方法&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Java" data-lang="Java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Autowired&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">private&lt;/span> &lt;span style="color:#c1abea">Producer&lt;/span> &lt;span style="color:#c1abea">captchaProducer&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">private&lt;/span> &lt;span style="color:#c678dd">final&lt;/span> &lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">VALIDATE_CODE&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;VALIDATE_CODE&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">private&lt;/span> &lt;span style="color:#c678dd">final&lt;/span> &lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">EXPIRE_TIME&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;EXPIRE_TIME&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@RequestMapping&lt;/span>(&lt;span style="color:#c1abea">value&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;/loadValidateCode&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">method&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">RequestMethod&lt;/span>.&lt;span style="color:#b3d23c">GET&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#ef8383">void&lt;/span> &lt;span style="color:#00b1f7">loadValidateCode&lt;/span>(&lt;span style="color:#c1abea">HttpServletRequest&lt;/span> &lt;span style="color:#c1abea">request&lt;/span>, &lt;span style="color:#c1abea">HttpServletResponse&lt;/span> &lt;span style="color:#c1abea">response&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">HttpSession&lt;/span> &lt;span style="color:#c1abea">session&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">request&lt;/span>.&lt;span style="color:#b3d23c">getSession&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8a93a5;font-style:italic">// 设置清除浏览器缓存&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">response&lt;/span>.&lt;span style="color:#b3d23c">setDateHeader&lt;/span>(&lt;span style="color:#98c379">&amp;#34;Expires&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">response&lt;/span>.&lt;span style="color:#b3d23c">setHeader&lt;/span>(&lt;span style="color:#98c379">&amp;#34;Cache-Control&amp;#34;&lt;/span>, &lt;span style="color:#98c379">&amp;#34;no-store, no-cache, must-revalidate&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">response&lt;/span>.&lt;span style="color:#b3d23c">addHeader&lt;/span>(&lt;span style="color:#98c379">&amp;#34;Cache-Control&amp;#34;&lt;/span>, &lt;span style="color:#98c379">&amp;#34;post-check=0, pre-check=0&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">response&lt;/span>.&lt;span style="color:#b3d23c">setHeader&lt;/span>(&lt;span style="color:#98c379">&amp;#34;Pragma&amp;#34;&lt;/span>, &lt;span style="color:#98c379">&amp;#34;no-cache&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">response&lt;/span>.&lt;span style="color:#b3d23c">setContentType&lt;/span>(&lt;span style="color:#98c379">&amp;#34;image/png&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8a93a5;font-style:italic">// 验证码一分钟内有效&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ef8383">long&lt;/span> &lt;span style="color:#c1abea">expireTime&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">System&lt;/span>.&lt;span style="color:#b3d23c">currentTimeMillis&lt;/span>() &lt;span style="color:#c7bf54">+&lt;/span> &lt;span style="color:#c1abea">60000&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8a93a5;font-style:italic">// 将验证码放到session中&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">validateCode&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">captchaProducer&lt;/span>.&lt;span style="color:#b3d23c">createText&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">session&lt;/span>.&lt;span style="color:#b3d23c">setAttribute&lt;/span>(&lt;span style="color:#c1abea">VALIDATE_CODE&lt;/span>, &lt;span style="color:#c1abea">Utils&lt;/span>.&lt;span style="color:#b3d23c">encodeBase64&lt;/span>(&lt;span style="color:#c1abea">validateCode&lt;/span>));&lt;span style="color:#8a93a5;font-style:italic">//将加密后的验证码放到session中，确保安全&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">session&lt;/span>.&lt;span style="color:#b3d23c">setAttribute&lt;/span>(&lt;span style="color:#c1abea">EXPIRE_TIME&lt;/span>, &lt;span style="color:#c1abea">expireTime&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8a93a5;font-style:italic">// 输出验证码图片&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">BufferedImage&lt;/span> &lt;span style="color:#c1abea">bufferedImage&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">captchaProducer&lt;/span>.&lt;span style="color:#b3d23c">createImage&lt;/span>(&lt;span style="color:#c1abea">validateCode&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">ServletOutputStream&lt;/span> &lt;span style="color:#c1abea">out&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">response&lt;/span>.&lt;span style="color:#b3d23c">getOutputStream&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">ImageIO&lt;/span>.&lt;span style="color:#b3d23c">write&lt;/span>(&lt;span style="color:#c1abea">bufferedImage&lt;/span>, &lt;span style="color:#98c379">&amp;#34;png&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">out&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">out&lt;/span>.&lt;span style="color:#b3d23c">flush&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">out&lt;/span>.&lt;span style="color:#b3d23c">close&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#c678dd">catch&lt;/span> (&lt;span style="color:#c1abea">IOException&lt;/span> &lt;span style="color:#c1abea">e&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">e&lt;/span>.&lt;span style="color:#b3d23c">printStackTrace&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="6-登录时校验验证码">6 登录时校验验证码&lt;/h2>
&lt;pre tabindex="0">&lt;code> @RequestMapping(value = &amp;#34;/login&amp;#34;, method = RequestMethod.POST)
 public @ResponseBody String login(String username, String password, String validateCode) {

 // 校验验证码是否有效
 String currentValidateCode = String.valueOf(request.getSession().getAttribute(VALIDATE_CODE));
 if (System.currentTimeMillis() &amp;gt; Long.parseLong(String.valueOf(request.getSession().getAttribute(EXPIRE_TIME)))) {
 return JSON.toJSONString(&amp;#34;验证码已过期，请重试&amp;#34;);
 }

 // 校验验证码
 String currentValidateCode = String.valueOf(request.getSession().getAttribute(VALIDATE_CODE));
 if (StringUtils.isEmpty(validateCode) || validateCode.length() != 4 ||
 !Utils.encodeBase64(validateCode).equals(currentValidateCode)) {
 return JSON.toJSONString(&amp;#34;验证码错误&amp;#34;);
 }
 }
&lt;/code>&lt;/pre>&lt;h2 id="7-base64加密">7 Base64加密&lt;/h2>
&lt;pre tabindex="0">&lt;code> public static String encodeBase64(String str) {
 sun.misc.BASE64Encoder base64Encode = new BASE64Encoder();
 return base64Encode.encode(str.getBytes());
 }
&lt;/code>&lt;/pre></description></item><item><title>IDEA启动Spring Boot项目提示Unable to start EmbeddedWebApplicationContext due to missing EmbeddedServlet...</title><link>https://blog.hellowood.dev/posts/idea%E5%90%AF%E5%8A%A8spring-boot%E9%A1%B9%E7%9B%AE%E6%8F%90%E7%A4%BAunable-to-start-embeddedwebapplicationcontext-due-to-missing-embeddedservlet/</link><pubDate>Mon, 01 Jan 2018 01:03:07 +0000</pubDate><guid>https://blog.hellowood.dev/posts/idea%E5%90%AF%E5%8A%A8spring-boot%E9%A1%B9%E7%9B%AE%E6%8F%90%E7%A4%BAunable-to-start-embeddedwebapplicationcontext-due-to-missing-embeddedservlet/</guid><description>&lt;blockquote>
&lt;p>导入一个&lt;code>gradle&lt;/code> 的&lt;code>Spring Boot&lt;/code>项目，在启动的时候先提示找不到&lt;code>HttpServletRequest&lt;/code>这个包，错误如下：&lt;/p>
&lt;/blockquote>
&lt;pre tabindex="0">&lt;code>Caused by: java.lang.ClassNotFoundException: javax.servlet.http.HttpServletRequest
 at java.net.URLClassLoader.findClass(URLClassLoader.java:381) ~[na:1.8.0_45]
 at java.lang.ClassLoader.loadClass(ClassLoader.java:424) ~[na:1.8.0_45]
 at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331) ~[na:1.8.0_45]
 at java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[na:1.8.0_45]
 ... 29 common frames omitted
&lt;/code>&lt;/pre>&lt;blockquote>
&lt;p>但是相应的Java代码没有报错，所以单独找了&lt;code>servlet-api.jar&lt;/code>导入，并将其添加到&lt;code>Module&lt;/code>中，但是导入后出现另一个错误：&lt;/p>
&lt;/blockquote>
&lt;pre tabindex="0">&lt;code>org.springframework.context.ApplicationContextException: Unable to start embedded container; nested exception is org.springframework.context.ApplicationContextException: Unable to start EmbeddedWebApplicationContext due to missing EmbeddedServletContainerFactory bean.
 at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.onRefresh(EmbeddedWebApplicationContext.java:137) ~[spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
....
&lt;/code>&lt;/pre>&lt;blockquote>
&lt;p>找了很久都没有找到解决的方法，但是使用&lt;code>gradle bootrun&lt;/code>是可以正常启动运行的，在另外一台机子上也没有任何问题，所以认为项目本身没有任何问题，是在IDEA启动的过程中出现了问题导致的，&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>看到有一篇使用&lt;code>Maven&lt;/code>也遇到该问题的帖子，对比了依赖：&lt;/p>
&lt;/blockquote>
&lt;pre tabindex="0">&lt;code>dependencies {
 compile(&amp;#39;org.mybatis.spring.boot:mybatis-spring-boot-starter:1.2.0&amp;#39;)
 compile(&amp;#39;org.springframework.boot:spring-boot-starter-web&amp;#39;)
 runtime(&amp;#39;mysql:mysql-connector-java&amp;#39;)
 testCompile(&amp;#39;org.springframework.boot:spring-boot-starter-test&amp;#39;)

 // this is for generate war file
 providedRuntime(&amp;#39;org.springframework.boot:spring-boot-starter-tomcat&amp;#39;)
}
&lt;/code>&lt;/pre>&lt;blockquote>
&lt;p>然后将&lt;code>providedRuntime&lt;/code>改成了&lt;code>runtime&lt;/code>，重新&lt;code>build&lt;/code>启动，没有任何问题
该问题产生的原因很可能是因为IDEA在启动的过程中并没有像&lt;code>Gradle&lt;/code>一样做完全的&lt;code>build&lt;/code>，只是进行了热更新，没有将需要的Jar包编译到项目里&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>&lt;strong>&lt;code>providedCompile&lt;/code> 和 &lt;code>providedRuntime&lt;/code>。虽然它们有各自的&lt;code>compile&lt;/code> 和 &lt;code>runtime&lt;/code> 配置，但这些配置有相同的作用域，只是它们不会添加到 &lt;code>war/jar&lt;/code> 文件中&lt;/strong>。&lt;/p></description></item><item><title>IDEA中Spring Boot项目MyBaits提示Invalid bound statement (not found)错误</title><link>https://blog.hellowood.dev/posts/idea%E4%B8%ADspring-boot%E9%A1%B9%E7%9B%AEmybaits%E6%8F%90%E7%A4%BAinvalid-bound-statement-not-found-%E9%94%99%E8%AF%AF/</link><pubDate>Mon, 01 Jan 2018 01:01:51 +0000</pubDate><guid>https://blog.hellowood.dev/posts/idea%E4%B8%ADspring-boot%E9%A1%B9%E7%9B%AEmybaits%E6%8F%90%E7%A4%BAinvalid-bound-statement-not-found-%E9%94%99%E8%AF%AF/</guid><description>&lt;blockquote>
&lt;p>一个SpringBoot项目在STS中是正常的，没有任何问题，但是导入到IDEA中之后启动就提示&lt;code>org.apache.ibatis.binding.BindingException: Invalid bound statement (not found)&lt;/code>错误&lt;/p>
&lt;/blockquote>
&lt;pre tabindex="0">&lt;code>2017-05-01 20:29:30.089 ERROR 8580 --- [nio-8080-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): hellowood.lntu.oe.wmp.dao.FeedbackDetailMapper.insertSelective] with root cause

org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): ...........
&lt;/code>&lt;/pre>&lt;blockquote>
&lt;p>该错误提示没有找到相对应的XML文件，找了很长时间发现在编译后的classes路径下并没有相应的XML文件，这是因为IDEA在编译的时候忽略掉了XML文件，一个解决方法是将所有的XML文件移动到Resource文件夹下，这样在编译的时候就会将XML文件一起&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>移动文件夹后修改配置文件中的MyBat的扫描路径&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> mybatis.mapper-locations=classpath*:/mapper/**Mapper.xml
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>
&lt;p>修改前的结构
&lt;img src="http://img.blog.csdn.net/20170501203323011?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMzM2MDg1MA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="修改前的结构">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>修改后的结构
&lt;img src="http://img.blog.csdn.net/20170501203402426?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMzM2MDg1MA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="修改后的结构">&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>SpringMVC应用启动时执行操作</title><link>https://blog.hellowood.dev/posts/springmvc%E5%BA%94%E7%94%A8%E5%90%AF%E5%8A%A8%E6%97%B6%E6%89%A7%E8%A1%8C%E6%93%8D%E4%BD%9C/</link><pubDate>Mon, 01 Jan 2018 00:56:03 +0000</pubDate><guid>https://blog.hellowood.dev/posts/springmvc%E5%BA%94%E7%94%A8%E5%90%AF%E5%8A%A8%E6%97%B6%E6%89%A7%E8%A1%8C%E6%93%8D%E4%BD%9C/</guid><description>&lt;ul>
&lt;li>
&lt;p>ContextRefreshedEvent：当ApplicationContext初始化或者刷新时触发该事件。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ContextClosedEvent：当ApplicationContext被关闭时触发该事件。容器被关闭时，其管理的所有单例Bean都被销毁。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>RequestHandleEvent：在Web应用中，当一个http请求（request）结束触发该事件。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ContestStartedEvent：Spring2.5新增的事件，当容器调用ConfigurableApplicationContext的Start()方法开始/重新开始容器时触发该事件。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ContestStopedEvent：Spring2.5新增的事件，当容器调用ConfigurableApplicationContext的Stop()方法停止容器时触发该事件。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>@Component
public class ApplicationListenerImpl implements ApplicationListener&amp;lt;ContextRefreshedEvent&amp;gt; {

 private static final Logger logger = LoggerFactory.getLogger(ApplicationListenerImpl.class);

 @Override
 public void onApplicationEvent(ContextRefreshedEvent contextRefreshedEvent) {
 /**
 * 系统两种容器：root application context 和项目名-servlet context ；
 * 下面代码防止执行两次
 */
 if(event.getApplicationContext().getParent() == null){

 }
 }
}
&lt;/code>&lt;/pre></description></item><item><title>Spring Boot 启动时执行加载资源/执行操作</title><link>https://blog.hellowood.dev/posts/spring-boot-%E5%90%AF%E5%8A%A8%E6%97%B6%E6%89%A7%E8%A1%8C%E5%8A%A0%E8%BD%BD%E8%B5%84%E6%BA%90-%E6%89%A7%E8%A1%8C%E6%93%8D%E4%BD%9C/</link><pubDate>Mon, 01 Jan 2018 00:54:49 +0000</pubDate><guid>https://blog.hellowood.dev/posts/spring-boot-%E5%90%AF%E5%8A%A8%E6%97%B6%E6%89%A7%E8%A1%8C%E5%8A%A0%E8%BD%BD%E8%B5%84%E6%BA%90-%E6%89%A7%E8%A1%8C%E6%93%8D%E4%BD%9C/</guid><description>&lt;blockquote>
&lt;p>SpringBoot 在启动的时候加载资源或者执行操作，进行初始化来执行特定操作，SpringBoot已经提供了这样的接口，通过实现该接口就可以实现需要的操作&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;h2 id="实现commandlinerunner接口">实现CommandLineRunner接口&lt;/h2>
&lt;pre tabindex="0">&lt;code>@Order(value=2)
@Component
public class CommandLineRunnerListenerImpl implements CommandLineRunner {

 @Override
 public void run(String... args) throws Exception {
 // 执行操作
 }
}
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>可以通过指定&lt;code>@Order&lt;/code>的值来控制启动的顺序，值越小表示越先执行&lt;/li>
&lt;/ul>
&lt;h2 id="实现applicationlistener接口">实现ApplicationListener接口&lt;/h2>
&lt;pre tabindex="0">&lt;code>@Component
public class CommandLineRunnerListenerImpl implements ApplicationListener {

 @Override
 public void onApplicationEvent(ApplicationEvent event) {
 // 执行操作
 }
}
&lt;/code>&lt;/pre></description></item><item><title>SpringBoot启动时报org.springframework.context.annotation.ConflictingBeanDefinitionException解决方法</title><link>https://blog.hellowood.dev/posts/springboot%E5%90%AF%E5%8A%A8%E6%97%B6%E6%8A%A5org-springframework-context-annotation-conflictingbeandefinitionexception%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</link><pubDate>Mon, 01 Jan 2018 00:53:44 +0000</pubDate><guid>https://blog.hellowood.dev/posts/springboot%E5%90%AF%E5%8A%A8%E6%97%B6%E6%8A%A5org-springframework-context-annotation-conflictingbeandefinitionexception%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</guid><description>&lt;blockquote>
&lt;p>在SpringBoot应用启动的过程中，因为报&lt;code>org.springframework.context.annotation.ConflictingBeanDefinitionException&lt;/code>导致应用启动失败&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;blockquote>
&lt;p>&lt;strong>错误信息：&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;pre tabindex="0">&lt;code>Annotation-specified bean name &amp;#39;personDubboConsumerService&amp;#39; for bean class
[cn.com.hellowood.dubboclient.dubbo.PersonDubboConsumerService]
 conflicts with existing, non-compatible bean definition of same name and class
 [cn.com.hellowood.dubbo.PersonDubboConsumerService]
&lt;/code>&lt;/pre>&lt;blockquote>
&lt;p>这是因为在应用中使用到了多个该类的对象，而该类的对象通过注解的方式注入到应用中，在注入的过程中因为对象的名称重复导致了该异常
&lt;strong>通过指定注入对象的名称可以解决这个问题&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>原来的代码&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>@Component
public class PersonDubboConsumerService {

 @Reference(version = &amp;#34;1.0.0&amp;#34;)
 PersonDubboService service;

 public void sayHello() {
 String name = &amp;#34;哈哈哈哈&amp;#34;;
 Person person = service.sayHello(name);
 }
}
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>修改后（&lt;strong>Component注解加上名称就可以，要和另一个bean的名称不同&lt;/strong>）&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>@Component(&amp;#34;personConsumerService&amp;#34;)
public class PersonDubboConsumerService {

 @Reference(version = &amp;#34;1.0.0&amp;#34;)
 PersonDubboService service;

 public void sayHello() {
 String name = &amp;#34;哈哈哈哈&amp;#34;;
 Person person = service.sayHello(name);
 }
}
&lt;/code>&lt;/pre>&lt;hr>
&lt;ul>
&lt;li>异常信息&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-console" data-lang="console">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">org.springframework.beans.factory.BeanDefinitionStoreException: Failed to parse configuration class [cn.com.hellowood.DubboClientApplication]; nested exception is org.springframework.context.annotation.ConflictingBeanDefinitionException: Annotation-specified bean name &amp;#39;personDubboConsumerService&amp;#39; for bean class [cn.com.hellowood.dubboclient.dubbo.PersonDubboConsumerService] conflicts with existing, non-compatible bean definition of same name and class [cn.com.hellowood.dubbo.PersonDubboConsumerService]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e"> at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:181) ~[spring-context-4.3.10.RELEASE.jar:4.3.10.RELEASE]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e"> at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:308) ~[spring-context-4.3.10.RELEASE.jar:4.3.10.RELEASE]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e"> at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:228) ~[spring-context-4.3.10.RELEASE.jar:4.3.10.RELEASE]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e"> at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:270) ~[spring-context-4.3.10.RELEASE.jar:4.3.10.RELEASE]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e"> at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:93) ~[spring-context-4.3.10.RELEASE.jar:4.3.10.RELEASE]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e"> at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:687) ~[spring-context-4.3.10.RELEASE.jar:4.3.10.RELEASE]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e"> at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:525) ~[spring-context-4.3.10.RELEASE.jar:4.3.10.RELEASE]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e"> at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122) ~[spring-boot-1.5.6.RELEASE.jar:1.5.6.RELEASE]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e"> at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693) [spring-boot-1.5.6.RELEASE.jar:1.5.6.RELEASE]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e"> at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360) [spring-boot-1.5.6.RELEASE.jar:1.5.6.RELEASE]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e"> at org.springframework.boot.SpringApplication.run(SpringApplication.java:303) [spring-boot-1.5.6.RELEASE.jar:1.5.6.RELEASE]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e"> at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118) [spring-boot-1.5.6.RELEASE.jar:1.5.6.RELEASE]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e"> at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107) [spring-boot-1.5.6.RELEASE.jar:1.5.6.RELEASE]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e"> at cn.com.hellowood.DubboClientApplication.main(DubboClientApplication.java:14) [classes/:na]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">Caused by: org.springframework.context.annotation.ConflictingBeanDefinitionException: Annotation-specified bean name &amp;#39;personDubboConsumerService&amp;#39; for bean class [cn.com.hellowood.dubboclient.dubbo.PersonDubboConsumerService] conflicts with existing, non-compatible bean definition of same name and class [cn.com.hellowood.dubbo.PersonDubboConsumerService]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e"> at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.checkCandidate(ClassPathBeanDefinitionScanner.java:345) ~[spring-context-4.3.10.RELEASE.jar:4.3.10.RELEASE]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e"> at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:283) ~[spring-context-4.3.10.RELEASE.jar:4.3.10.RELEASE]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e"> at org.springframework.context.annotation.ComponentScanAnnotationParser.parse(ComponentScanAnnotationParser.java:135) ~[spring-context-4.3.10.RELEASE.jar:4.3.10.RELEASE]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e"> at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:287) ~[spring-context-4.3.10.RELEASE.jar:4.3.10.RELEASE]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e"> at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:245) ~[spring-context-4.3.10.RELEASE.jar:4.3.10.RELEASE]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e"> at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:198) ~[spring-context-4.3.10.RELEASE.jar:4.3.10.RELEASE]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e"> at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:167) ~[spring-context-4.3.10.RELEASE.jar:4.3.10.RELEASE]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e"> ... 13 common frames omitted
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>SpringBoot中配置使用Druid数据库连接池</title><link>https://blog.hellowood.dev/posts/springboot%E4%B8%AD%E9%85%8D%E7%BD%AE%E4%BD%BF%E7%94%A8druid%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0/</link><pubDate>Mon, 01 Jan 2018 00:52:18 +0000</pubDate><guid>https://blog.hellowood.dev/posts/springboot%E4%B8%AD%E9%85%8D%E7%BD%AE%E4%BD%BF%E7%94%A8druid%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0/</guid><description>&lt;blockquote>
&lt;p>Druid 是阿里巴巴开源的Java数据库连接池插件，Druid能够提供强大的监控和扩展功能&lt;/p>
&lt;/blockquote>
&lt;h2 id="配置使用druid数据库连接池">配置使用Druid数据库连接池&lt;/h2>
&lt;h3 id="添加依赖">添加依赖&lt;/h3>
&lt;ul>
&lt;li>Gradle&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>compile(&amp;#39;com.alibaba:druid-spring-boot-starter:${version}&amp;#39;)
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>Maven&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> &amp;lt;groupId&amp;gt;com.alibaba&amp;lt;/groupId&amp;gt;
 &amp;lt;artifactId&amp;gt;druid&amp;lt;/artifactId&amp;gt;
 &amp;lt;version&amp;gt;${version}&amp;lt;/version&amp;gt;
&lt;/code>&lt;/pre>&lt;h3 id="配置数据库连接">配置数据库连接&lt;/h3>
&lt;blockquote>
&lt;p>数据库配置和默认配置基本一样，按照正常配置就可以，具体可以参考&lt;a href="https://github.com/alibaba/druid/blob/master/druid-spring-boot-starter/README.md">https://github.com/alibaba/druid/blob/master/druid-spring-boot-starter/README.md&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>JDBC 配置&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>spring.datasource.druid.url= # 或spring.datasource.url=
spring.datasource.druid.username= # 或spring.datasource.username=
spring.datasource.druid.password= # 或spring.datasource.password=
spring.datasource.druid.driver-class-name= #或 spring.datasource.driver-class-name=
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>连接池配置&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>spring.datasource.druid.initial-size=
spring.datasource.druid.max-active=
spring.datasource.druid.min-idle=
spring.datasource.druid.max-wait=
spring.datasource.druid.pool-prepared-statements=
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=
spring.datasource.druid.max-open-prepared-statements= #和上面的等价
spring.datasource.druid.validation-query=
spring.datasource.druid.validation-query-timeout=
spring.datasource.druid.test-on-borrow=
spring.datasource.druid.test-on-return=
spring.datasource.druid.test-while-idle=
spring.datasource.druid.time-between-eviction-runs-millis=
spring.datasource.druid.min-evictable-idle-time-millis=
spring.datasource.druid.max-evictable-idle-time-millis=
spring.datasource.druid.filters= #配置多个英文逗号分隔
....//more
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>监控配置&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code># WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter
spring.datasource.druid.web-stat-filter.enabled= #是否启用StatFilter默认值true
spring.datasource.druid.web-stat-filter.url-pattern=
spring.datasource.druid.web-stat-filter.exclusions=
spring.datasource.druid.web-stat-filter.session-stat-enable=
spring.datasource.druid.web-stat-filter.session-stat-max-count=
spring.datasource.druid.web-stat-filter.principal-session-name=
spring.datasource.druid.web-stat-filter.principal-cookie-name=
spring.datasource.druid.web-stat-filter.profile-enable=

# StatViewServlet配置，说明请参考Druid Wiki，配置_StatViewServlet配置
spring.datasource.druid.stat-view-servlet.enabled= #是否启用StatViewServlet默认值true
spring.datasource.druid.stat-view-servlet.url-pattern=
spring.datasource.druid.stat-view-servlet.reset-enable=
spring.datasource.druid.stat-view-servlet.login-username=
spring.datasource.druid.stat-view-servlet.login-password=
spring.datasource.druid.stat-view-servlet.allow=
spring.datasource.druid.stat-view-servlet.deny=

# Spring监控配置，说明请参考Druid Github Wiki，配置_Druid和Spring关联监控配置
spring.datasource.druid.aop-patterns= # Spring监控AOP切入点，如x.y.z.service.*,配置多个英文逗号分隔
# 如果spring.datasource.druid.aop-patterns要代理的类没有定义interface请设置spring.aop.proxy-target-class=true
&lt;/code>&lt;/pre>&lt;blockquote>
&lt;p>配置好了之后启动应用就可以正常使用了，查看统计信息可以访问 http://localhost:8080/druid/index.html&lt;/p></description></item><item><title>SpringBoot项目生成War包</title><link>https://blog.hellowood.dev/posts/springboot%E9%A1%B9%E7%9B%AE%E7%94%9F%E6%88%90war%E5%8C%85/</link><pubDate>Mon, 01 Jan 2018 00:50:49 +0000</pubDate><guid>https://blog.hellowood.dev/posts/springboot%E9%A1%B9%E7%9B%AE%E7%94%9F%E6%88%90war%E5%8C%85/</guid><description>&lt;blockquote>
&lt;p>Spring Boot 项目默认生成Jar包，如果想发布到Tomcat还需要生成War包才能运行，SpringBoot官方文档中已经阐述了具体的操作方法，可以参考：&lt;a href="http://docs.spring.io/spring-boot/docs/2.0.0.M3/reference/htmlsingle/#howto-create-a-deployable-war-file">howto-create-a-deployable-war-file&lt;/a>；
以下使用Gradle作为Build工具&lt;/p>
&lt;/blockquote>
&lt;h2 id="1-向buildgradle文件添加依赖">1. 向build.gradle文件添加依赖&lt;/h2>
&lt;ul>
&lt;li>build.gradle&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>buildscript {
 ext {
 springBootVersion = &amp;#39;1.5.4.RELEASE&amp;#39;
 }
 repositories {
 maven { url &amp;#39;http://maven.aliyun.com/nexus/content/groups/public/&amp;#39; }
 }
 dependencies {
 classpath(&amp;#34;org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}&amp;#34;)
 }
}

apply plugin: &amp;#39;java&amp;#39;
apply plugin: &amp;#39;war&amp;#39; // 生成war包
apply plugin: &amp;#39;eclipse&amp;#39;
apply plugin: &amp;#39;org.springframework.boot&amp;#39;

version = &amp;#39;&amp;#39;
sourceCompatibility = 1.8

repositories {
 maven { url &amp;#39;http://maven.aliyun.com/nexus/content/groups/public/&amp;#39; }
}

dependencies {
 compile(&amp;#39;org.springframework.boot:spring-boot-starter-data-redis&amp;#39;)
 compile(&amp;#39;org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.0&amp;#39;)
 compile(&amp;#39;org.springframework.boot:spring-boot-starter-web&amp;#39;)
 compile(&amp;#39;org.springframework.boot:spring-boot-starter-aop&amp;#39;)
 compile(&amp;#39;org.springframework.boot:spring-boot-starter-actuator&amp;#39;)
 runtime(&amp;#39;com.h2database:h2&amp;#39;)
 runtime(&amp;#39;mysql:mysql-connector-java&amp;#39;)
 testCompile(&amp;#39;org.springframework.boot:spring-boot-starter-test&amp;#39;)

 // 生成war包
 providedRuntime (&amp;#39;org.springframework.boot:spring-boot-starter-tomcat&amp;#39;)
}
&lt;/code>&lt;/pre>&lt;h2 id="2-修改applicationjava文件">2. 修改Application.java文件&lt;/h2>
&lt;ul>
&lt;li>Application.java&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>@SpringBootApplication
public class Application extends SpringBootServletInitializer {

 public static void main(String[] args) {
 SpringApplication.run(Application.class, args);
 }

 @Override
 protected SpringApplicationBuilder configure(SpringApplicationBuilder application) {
 return application.sources(Application.class);
 }
}
&lt;/code>&lt;/pre>&lt;blockquote>
&lt;p>也可以单独写在另一个类中，效果是一样的&lt;/p></description></item><item><title>使用Gradle整合Flyway进行数据库迁移</title><link>https://blog.hellowood.dev/posts/%E4%BD%BF%E7%94%A8gradle%E6%95%B4%E5%90%88flyway%E8%BF%9B%E8%A1%8C%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%81%E7%A7%BB/</link><pubDate>Mon, 01 Jan 2018 00:49:34 +0000</pubDate><guid>https://blog.hellowood.dev/posts/%E4%BD%BF%E7%94%A8gradle%E6%95%B4%E5%90%88flyway%E8%BF%9B%E8%A1%8C%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%81%E7%A7%BB/</guid><description>&lt;blockquote>
&lt;p>使用Flyway进行数据库迁移可以极大的减少开发过程中对数据库版本的操作，使用Gradle整合Flyway可以更好的和项目契合&lt;/p>
&lt;/blockquote>
&lt;h2 id="配置buildgradle文件">配置build.gradle文件&lt;/h2>
&lt;pre tabindex="0">&lt;code>apply plugin: &amp;#39;org.flywaydb.flyway&amp;#39;

buildscript {
 repositories {
 mavenCentral()
 }

 dependencies {
 classpath(group: &amp;#39;org.flywaydb&amp;#39;, name: &amp;#39;flyway-gradle-plugin&amp;#39;, version: &amp;#34;4.0.3&amp;#34;)
 classpath(group: &amp;#39;mysql&amp;#39;, name: &amp;#39;mysql-connector-java&amp;#39;, version: &amp;#34;5.1.41&amp;#34;)
 }
}

flyway {
 url = &amp;#39;jdbc:mysql://localhost:3306/miniprograme?useSSL=false&amp;#39;
 locations = [&amp;#39;filesystem:db/migration&amp;#39;]
 user = &amp;#39;root&amp;#39;
 password = &amp;#39;123456&amp;#39;
 schemas = [&amp;#39;flywaydb&amp;#39;]
}
&lt;/code>&lt;/pre>&lt;p>##使用Flyway进行数据库管理&lt;/p>
&lt;ul>
&lt;li>删除数据库所有表&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>gradle flywayClean
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>迁移数据库&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>gradle flywayMigrate
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>校验新版本文件是否有冲突&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>gradle flywayValidate
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>查看数据库状态&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>gradle flywayInfo
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>修复数据库（删除失败的版本，修复checksum值）&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>gradle flywayRepair
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>设置某一版本为基础版本，该版本及之前的不会再被执行&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>gradle flywayBaseline
&lt;/code>&lt;/pre></description></item><item><title>MyBatis 中使用 Association 嵌套查询</title><link>https://blog.hellowood.dev/posts/mybatis-%E4%B8%AD%E4%BD%BF%E7%94%A8-association-%E5%B5%8C%E5%A5%97%E6%9F%A5%E8%AF%A2/</link><pubDate>Mon, 01 Jan 2018 00:48:06 +0000</pubDate><guid>https://blog.hellowood.dev/posts/mybatis-%E4%B8%AD%E4%BD%BF%E7%94%A8-association-%E5%B5%8C%E5%A5%97%E6%9F%A5%E8%AF%A2/</guid><description>&lt;blockquote>
&lt;p>当使用 MyBatis 进行查询的时候如果一个 JavaBean 中包含另一个 JavaBean 或者 Collection 时，可以通过 MyBatis 的嵌套查询来获取需要的结果;
以下以用户登录时的用户、角色和菜单直接的关系为例使用嵌套查询&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;h2 id="javabean">JavaBean&lt;/h2>
&lt;ul>
&lt;li>UserModel&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>public class UserModel {
 private Integer id;
 private String username;
 private String password;
 private Boolean enabled;
 private Boolean locked;
 private Boolean expired;
 private RoleModel role;
 private List&amp;lt;MenuModel&amp;gt; menus;

 ···
}
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>RoleModel&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>public class RoleModel {
 private Integer id;
 private String name;
 private Boolean isActive;
 private String description;
 private Date lastUpdateTime;

 ···
}
&lt;/code>&lt;/pre>&lt;h2 id="表">表&lt;/h2>
&lt;ul>
&lt;li>User&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>CREATE TABLE user (
 id INT AUTO_INCREMENT PRIMARY KEY,
 username VARCHAR(45) NOT NULL,
 password VARCHAR(45) NOT NULL,
 enabled BOOLEAN NOT NULL DEFAULT TRUE,
 expired BOOLEAN NOT NULL DEFAULT TRUE,
 locked BOOLEAN NOT NULL DEFAULT TRUE,
 last_update_time TIMESTAMP NOT NULL DEFAULT current_timestamp ON UPDATE current_timestamp,
 comment VARCHAR(100)
);

INSERT INTO user (username, password, enabled, expired, locked, last_update_time)
VALUES (&amp;#39;admin&amp;#39;, &amp;#39;admin&amp;#39;, TRUE, FALSE, FALSE, current_timestamp);
INSERT INTO user (username, password, enabled, expired, locked, last_update_time)
VALUES (&amp;#39;user&amp;#39;, &amp;#39;password&amp;#39;, TRUE, FALSE, FALSE, current_timestamp);
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>Role&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>CREATE TABLE role (
 id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
 name VARCHAR(50) NOT NULL UNIQUE,
 description VARCHAR(100),
 is_active BOOLEAN NOT NULL DEFAULT TRUE,
 last_update_time TIMESTAMP DEFAULT current_timestamp ON UPDATE current_timestamp
);

INSERT INTO role (name, description, is_active, last_update_time)
VALUES (&amp;#39;ROLE_ADMIN&amp;#39;, &amp;#39;Administrator&amp;#39;, TRUE, current_timestamp);
INSERT INTO role (name, description, is_active, last_update_time)
VALUES (&amp;#39;ROLE_USER&amp;#39;, &amp;#39;User&amp;#39;, TRUE, current_timestamp);
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>UserRoleXref&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>CREATE TABLE user_role_xref (
 id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
 user_id INT NOT NULL,
 role_id INT NOT NULL,
 last_update_time TIMESTAMP NOT NULL DEFAULT current_timestamp ON UPDATE current_timestamp,
 CONSTRAINT FOREIGN KEY fK_user_role_xref_user_id_user_id (user_id) REFERENCES user (id),
 CONSTRAINT FOREIGN KEY fk_user_role_xref_role_id_role_id (role_id) REFERENCES role (id)
);

INSERT INTO user_role_xref (user_id, role_id, last_update_time) VALUES (1, 1, CURRENT_TIMESTAMP);
INSERT INTO user_role_xref (user_id, role_id, last_update_time) VALUES (2, 2, CURRENT_TIMESTAMP);
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="一个查询调用另一个查询实现的嵌套">一个查询调用另一个查询实现的嵌套&lt;/h2>
&lt;pre tabindex="0">&lt;code> &amp;lt;resultMap id=&amp;#34;BaseUserModelResultMap&amp;#34; type=&amp;#34;cn.com.hellowood.springsecurity.model.UserModel&amp;#34;&amp;gt;
 &amp;lt;id column=&amp;#34;id&amp;#34; property=&amp;#34;id&amp;#34; javaType=&amp;#34;java.lang.Integer&amp;#34; jdbcType=&amp;#34;INTEGER&amp;#34;&amp;gt;&amp;lt;/id&amp;gt;
 &amp;lt;result column=&amp;#34;username&amp;#34; property=&amp;#34;username&amp;#34; javaType=&amp;#34;java.lang.String&amp;#34; jdbcType=&amp;#34;VARCHAR&amp;#34;&amp;gt;&amp;lt;/result&amp;gt;
 &amp;lt;result column=&amp;#34;password&amp;#34; property=&amp;#34;password&amp;#34; javaType=&amp;#34;java.lang.String&amp;#34; jdbcType=&amp;#34;VARCHAR&amp;#34;&amp;gt;&amp;lt;/result&amp;gt;
 &amp;lt;result column=&amp;#34;enabled&amp;#34; property=&amp;#34;enabled&amp;#34; javaType=&amp;#34;java.lang.Boolean&amp;#34; jdbcType=&amp;#34;BOOLEAN&amp;#34;&amp;gt;&amp;lt;/result&amp;gt;
 &amp;lt;result column=&amp;#34;expired&amp;#34; property=&amp;#34;expired&amp;#34; javaType=&amp;#34;java.lang.Boolean&amp;#34; jdbcType=&amp;#34;BOOLEAN&amp;#34;&amp;gt;&amp;lt;/result&amp;gt;
 &amp;lt;result column=&amp;#34;locked&amp;#34; property=&amp;#34;locked&amp;#34; javaType=&amp;#34;java.lang.Boolean&amp;#34; jdbcType=&amp;#34;BOOLEAN&amp;#34;&amp;gt;&amp;lt;/result&amp;gt;
 &amp;lt;association property=&amp;#34;role&amp;#34; javaType=&amp;#34;cn.com.hellowood.springsecurity.model.RoleModel&amp;#34;
 column=&amp;#34;id&amp;#34; select=&amp;#34;getRoleByUserId&amp;#34;&amp;gt;
 &amp;lt;/association&amp;gt;
 &amp;lt;/resultMap&amp;gt;

 &amp;lt;resultMap id=&amp;#34;BaseRoleResultMap&amp;#34; type=&amp;#34;cn.com.hellowood.springsecurity.model.RoleModel&amp;#34;&amp;gt;
 &amp;lt;id column=&amp;#34;id&amp;#34; property=&amp;#34;id&amp;#34; jdbcType=&amp;#34;INTEGER&amp;#34;/&amp;gt;
 &amp;lt;result column=&amp;#34;name&amp;#34; property=&amp;#34;name&amp;#34; jdbcType=&amp;#34;VARCHAR&amp;#34;/&amp;gt;
 &amp;lt;result column=&amp;#34;is_active&amp;#34; property=&amp;#34;isActive&amp;#34; jdbcType=&amp;#34;BOOLEAN&amp;#34;/&amp;gt;
 &amp;lt;result column=&amp;#34;description&amp;#34; property=&amp;#34;description&amp;#34; jdbcType=&amp;#34;VARCHAR&amp;#34;/&amp;gt;
 &amp;lt;result column=&amp;#34;last_update_time&amp;#34; property=&amp;#34;lastUpdateTime&amp;#34; jdbcType=&amp;#34;TIMESTAMP&amp;#34;/&amp;gt;
 &amp;lt;/resultMap&amp;gt;

 &amp;lt;select id=&amp;#34;getAllUsers&amp;#34; resultMap=&amp;#34;BaseUserModelResultMap&amp;#34;&amp;gt;
 SELECT
 id,
 username,
 password,
 enabled,
 expired,
 locked
 FROM user
 &amp;lt;/select&amp;gt;

 &amp;lt;select id=&amp;#34;getRoleByUserId&amp;#34; parameterType=&amp;#34;java.lang.Integer&amp;#34;
 resultType=&amp;#34;cn.com.hellowood.springsecurity.model.RoleModel&amp;#34;&amp;gt;
 SELECT
 r.id,
 r.name,
 r.is_active,
 r.description,
 r.last_update_time
 FROM role r
 LEFT JOIN user_role_xref urx
 ON r.id = urx.role_id
 WHERE user_id = #{userId, jdbcType=INTEGER}
 &amp;lt;/select&amp;gt;
&lt;/code>&lt;/pre>&lt;blockquote>
&lt;p>此时，调用 &lt;code>getAllUsers()&lt;/code> 方法就可以通过嵌套查询同时查找 Role 属性了&lt;/p></description></item><item><title>MyBatis 中使用 Collection 嵌套查询</title><link>https://blog.hellowood.dev/posts/mybatis-%E4%B8%AD%E4%BD%BF%E7%94%A8-collection-%E5%B5%8C%E5%A5%97%E6%9F%A5%E8%AF%A2/</link><pubDate>Mon, 01 Jan 2018 00:47:05 +0000</pubDate><guid>https://blog.hellowood.dev/posts/mybatis-%E4%B8%AD%E4%BD%BF%E7%94%A8-collection-%E5%B5%8C%E5%A5%97%E6%9F%A5%E8%AF%A2/</guid><description>&lt;blockquote>
&lt;p>当使用 MyBatis 进行查询的时候如果一个 JavaBean 中包含另一个 JavaBean 或者 Collection 时，可以通过 MyBatis 的嵌套查询来获取需要的结果;
以下以用户登录时的角色和菜单直接的关系为例使用嵌套查询&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;h2 id="javabean">JavaBean&lt;/h2>
&lt;ul>
&lt;li>RoleModel&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>public class RoleModel {
 private Integer id;
 private String name;
 private Boolean isActive;
 private String description;
 private Date lastUpdateTime;
 private List&amp;lt;MenuModel&amp;gt; menus;
 ···
}
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>MenuModel&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>public class MenuModel {
 private Integer id;
 private String value;
 private String displayValue;
 private String url;
 private Integer category;
 private String description;
 private Boolean isActive;
 private Date lastUpdateTime;

 ···
}
&lt;/code>&lt;/pre>&lt;h2 id="表">表&lt;/h2>
&lt;ul>
&lt;li>Role&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>CREATE TABLE role (
 id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
 name VARCHAR(50) NOT NULL UNIQUE,
 description VARCHAR(100),
 is_active BOOLEAN NOT NULL DEFAULT TRUE,
 last_update_time TIMESTAMP DEFAULT current_timestamp ON UPDATE current_timestamp
);

INSERT INTO role (name, description, is_active, last_update_time)
VALUES (&amp;#39;ROLE_ADMIN&amp;#39;, &amp;#39;Administrator&amp;#39;, TRUE, current_timestamp);
INSERT INTO role (name, description, is_active, last_update_time)
VALUES (&amp;#39;ROLE_USER&amp;#39;, &amp;#39;User&amp;#39;, TRUE, current_timestamp);
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>Menu&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>CREATE TABLE menu (
 id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
 value VARCHAR(100) NOT NULL,
 display_value VARCHAR(100) NOT NULL,
 url VARCHAR(100) NOT NULL,
 category INT,
 description VARCHAR(100),
 is_active BOOLEAN NOT NULL DEFAULT TRUE,
 last_update_time TIMESTAMP DEFAULT current_timestamp ON UPDATE current_timestamp
);

INSERT INTO menu (value, display_value, url, description, is_active, last_update_time)
VALUES (&amp;#39;/admin/dashboard&amp;#39;, &amp;#39;Admin Dashboard&amp;#39;, &amp;#39;/admin/dashboard&amp;#39;, &amp;#39;Admin Dashboard&amp;#39;, TRUE, current_timestamp);

INSERT INTO menu (value, display_value, url, description, is_active, last_update_time)
VALUES (&amp;#39;/admin/profile&amp;#39;, &amp;#39;Admin Profile&amp;#39;, &amp;#39;/admin/profile&amp;#39;, &amp;#39;Admin Profile&amp;#39;, TRUE, current_timestamp);


INSERT INTO menu (value, display_value, url, description, is_active, last_update_time)
VALUES (&amp;#39;/user/dashboard&amp;#39;, &amp;#39;User Dashboard&amp;#39;, &amp;#39;/user/dashboard&amp;#39;, &amp;#39;User Dashboard&amp;#39;, TRUE, current_timestamp);

INSERT INTO menu (value, display_value, url, description, is_active, last_update_time)
VALUES (&amp;#39;/user/profile&amp;#39;, &amp;#39;User Profile&amp;#39;, &amp;#39;/user/profile&amp;#39;, &amp;#39;User Profile&amp;#39;, TRUE, current_timestamp);
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>RoleMenuXref&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>CREATE TABLE role_menu_xref (
 id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
 role_id INT NOT NULL,
 menu_id INT NOT NULL,
 last_update_time TIMESTAMP DEFAULT current_timestamp ON UPDATE current_timestamp,
 CONSTRAINT FOREIGN KEY fk_role_menu_xref_role_id (role_id) REFERENCES role (id),
 CONSTRAINT FOREIGN KEY fk_role_menu_xref_menu_id(menu_id) REFERENCES menu (id),
 CONSTRAINT UNIQUE (role_id, menu_id)
);

INSERT role_menu_xref (role_id, menu_id, last_update_time)
VALUES (1, 1, current_timestamp);

INSERT role_menu_xref (role_id, menu_id, last_update_time)
VALUES (1, 2, current_timestamp);

INSERT role_menu_xref (role_id, menu_id, last_update_time)
VALUES (2, 3, current_timestamp);

INSERT role_menu_xref (role_id, menu_id, last_update_time)
VALUES (2, 4, current_timestamp);
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="collection-一个查询调用另一个查询实现的嵌套">Collection 一个查询调用另一个查询实现的嵌套&lt;/h2>
&lt;pre tabindex="0">&lt;code> &amp;lt;resultMap id=&amp;#34;BaseRoleResultMap&amp;#34; type=&amp;#34;cn.com.hellowood.springsecurity.model.RoleModel&amp;#34;&amp;gt;
 &amp;lt;id column=&amp;#34;id&amp;#34; property=&amp;#34;id&amp;#34; jdbcType=&amp;#34;INTEGER&amp;#34;/&amp;gt;
 &amp;lt;result column=&amp;#34;name&amp;#34; property=&amp;#34;name&amp;#34; jdbcType=&amp;#34;VARCHAR&amp;#34;/&amp;gt;
 &amp;lt;result column=&amp;#34;is_active&amp;#34; property=&amp;#34;isActive&amp;#34; jdbcType=&amp;#34;BOOLEAN&amp;#34;/&amp;gt;
 &amp;lt;result column=&amp;#34;description&amp;#34; property=&amp;#34;description&amp;#34; jdbcType=&amp;#34;VARCHAR&amp;#34;/&amp;gt;
 &amp;lt;result column=&amp;#34;last_update_time&amp;#34; property=&amp;#34;lastUpdateTime&amp;#34; jdbcType=&amp;#34;TIMESTAMP&amp;#34;/&amp;gt;
 &amp;lt;collection property=&amp;#34;menus&amp;#34; ofType=&amp;#34;cn.com.hellowood.springsecurity.model.menus&amp;#34;
 javaType=&amp;#34;java.util.ArrayList&amp;#34; select=&amp;#34;getMenus&amp;#34;
 column=&amp;#34;id&amp;#34;&amp;gt;
 &amp;lt;/collection&amp;gt;
 &amp;lt;/resultMap&amp;gt;


 &amp;lt;resultMap id=&amp;#34;BaseMenuResultMap&amp;#34; type=&amp;#34;cn.com.hellowood.springsecurity.model.MenuModel&amp;#34;&amp;gt;
 &amp;lt;id column=&amp;#34;id&amp;#34; property=&amp;#34;id&amp;#34; jdbcType=&amp;#34;INTEGER&amp;#34;/&amp;gt;
 &amp;lt;result column=&amp;#34;value&amp;#34; property=&amp;#34;value&amp;#34; jdbcType=&amp;#34;VARCHAR&amp;#34;/&amp;gt;
 &amp;lt;result column=&amp;#34;display_value&amp;#34; property=&amp;#34;displayValue&amp;#34; jdbcType=&amp;#34;VARCHAR&amp;#34;/&amp;gt;
 &amp;lt;result column=&amp;#34;url&amp;#34; property=&amp;#34;url&amp;#34; jdbcType=&amp;#34;VARCHAR&amp;#34;/&amp;gt;
 &amp;lt;result column=&amp;#34;category&amp;#34; property=&amp;#34;category&amp;#34; jdbcType=&amp;#34;INTEGER&amp;#34;/&amp;gt;
 &amp;lt;result column=&amp;#34;description&amp;#34; property=&amp;#34;description&amp;#34; jdbcType=&amp;#34;VARCHAR&amp;#34;/&amp;gt;
 &amp;lt;result column=&amp;#34;is_active&amp;#34; property=&amp;#34;isActive&amp;#34; jdbcType=&amp;#34;BIT&amp;#34;/&amp;gt;
 &amp;lt;result column=&amp;#34;last_update_time&amp;#34; property=&amp;#34;lastUpdateTime&amp;#34; jdbcType=&amp;#34;TIMESTAMP&amp;#34;/&amp;gt;
 &amp;lt;/resultMap&amp;gt;

 &amp;lt;select id=&amp;#34;getRoles&amp;#34; parameterType=&amp;#34;java.lang.Integer&amp;#34; resultMap=&amp;#34;BaseRoleResultMap&amp;#34;&amp;gt;
 SELECT
 id,
 name,
 is_active,
 description,
 last_update_time
 FROM role
 &amp;lt;/select&amp;gt;

 &amp;lt;select id=&amp;#34;getMenus&amp;#34; parameterType=&amp;#34;java.lang.Integer&amp;#34; resultMap=&amp;#34;BaseMenuResultMap&amp;#34;&amp;gt;
 SELECT
 m.id,
 m.value,
 m.display_value,
 m.url,
 m.category,
 m.description,
 m.is_active,
 m.last_update_time
 FROM menu m
 LEFT JOIN
 role_menu_xref rmx
 ON m.id = rmx.menu_id
 WHERE role_id = #{roleId, jdbcType=INTEGER}
 &amp;lt;/select&amp;gt;
&lt;/code>&lt;/pre>&lt;blockquote>
&lt;p>此时，调用 &lt;code>getRoles()&lt;/code> 方法就可以通过嵌套查询同时查找 Role 属性了&lt;/p></description></item><item><title>在使用 Spring Security 的 Remember Me 记住密码功能时遇到的问题和解决方法</title><link>https://blog.hellowood.dev/posts/spring-security-%E7%9A%84-remember-me-%E8%AE%B0%E4%BD%8F%E5%AF%86%E7%A0%81%E5%8A%9F%E8%83%BD%E6%97%B6%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</link><pubDate>Mon, 01 Jan 2018 00:37:35 +0000</pubDate><guid>https://blog.hellowood.dev/posts/spring-security-%E7%9A%84-remember-me-%E8%AE%B0%E4%BD%8F%E5%AF%86%E7%A0%81%E5%8A%9F%E8%83%BD%E6%97%B6%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</guid><description>&lt;blockquote>
&lt;p>在使用 Spring Security 的 Remember Me 记住密码功能时遇到的问题和解决方法&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;h2 id="javalangillegalstateexception-userdetailsservice-is-required">java.lang.IllegalStateException: UserDetailsService is required.&lt;/h2>
&lt;ul>
&lt;li>配置信息(&lt;code>Security.java&lt;/code>)&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>
 @Autowired
 public void configureGlobal(AuthenticationManagerBuilder auth) {
 auth.authenticationProvider(customAuthenticationProvider);
 }

 //...

 @Override
 protected void configure(HttpSecurity http) throws Exception {
 http.authorizeRequests()
 .antMatchers(ROOT_URL, LOGIN_URL, LOGIN_ERROR_URL, CSS_WILDCARD_URL, INDEX_URL)
 .permitAll();

 http.authorizeRequests()
 .anyRequest()
 .authenticated();

 http.authorizeRequests()
 .and()
 .rememberMe()
 .rememberMeServices(rememberMeServices())
 .key(INTERNAL_SECRET_KEY);

 // ...
 }

 @Bean
 public RememberMeServices rememberMeServices() {
 JdbcTokenRepositoryImpl rememberMeTokenRepository = new JdbcTokenRepositoryImpl();
 rememberMeTokenRepository.setDataSource(dataSource);

 PersistentTokenBasedRememberMeServices rememberMeServices =
 new PersistentTokenBasedRememberMeServices(INTERNAL_SECRET_KEY, userDetailsService(), rememberMeTokenRepository);

 rememberMeServices.setParameter(REMEMBER_ME);
 return rememberMeServices;
 }
&lt;/code>&lt;/pre>&lt;blockquote>
&lt;p>错误信息如下，发生该错误的原因是因为没有提供 UserDetailsService 的实例而出错，虽然调用了 &lt;code>userDetailsService()&lt;/code> 方法，
但实际上并没有起作用，所以需要提供自定义的 &lt;code>UserDetailsService&lt;/code> 实例注入&lt;/p></description></item><item><title>Spring Security 中实现 Remember Me 记住密码功能</title><link>https://blog.hellowood.dev/posts/spring-security-%E4%B8%AD%E5%AE%9E%E7%8E%B0-remember-me-%E8%AE%B0%E4%BD%8F%E5%AF%86%E7%A0%81%E5%8A%9F%E8%83%BD/</link><pubDate>Mon, 01 Jan 2018 00:35:56 +0000</pubDate><guid>https://blog.hellowood.dev/posts/spring-security-%E4%B8%AD%E5%AE%9E%E7%8E%B0-remember-me-%E8%AE%B0%E4%BD%8F%E5%AF%86%E7%A0%81%E5%8A%9F%E8%83%BD/</guid><description>&lt;blockquote>
&lt;p>在 Spring Boot 应用中使用 Spring Security 并实现 Remember Me 记住密码功能，实现自动登录&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;blockquote>
&lt;p>前置条件：在 Spring Boot 应用中已正确配置 Spring Security&lt;/p>
&lt;/blockquote>
&lt;p>##在页面添加记住密码的复选框&lt;/p>
&lt;pre tabindex="0">&lt;code> &amp;lt;input type=&amp;#34;checkbox&amp;#34; name=&amp;#34;remember-me&amp;#34;/&amp;gt; Remember me
&lt;/code>&lt;/pre>&lt;p>##在 Security Config 配置文件中启用记住密码功能(验证信息存放在内存中)&lt;/p>
&lt;ul>
&lt;li>SecurityConfig&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> import cn.com.hellowood.springsecurity.security.CustomAuthenticationProvider;
 import cn.com.hellowood.springsecurity.security.CustomUserDetailsService;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
 import org.springframework.security.config.annotation.web.builders.HttpSecurity;
 import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
 import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdater;

 @EnableWebSecurity
 public class SecurityConfig extends WebSecurityConfigurerAdapter {

 @Autowired
 private CustomAuthenticationProvider customAuthenticationProvider;

 @Autowired
 private CustomUserDetailsService userDetailsService;

 @Override
 protected void configure(HttpSecurity http) throws Exception {
 // 任何用户都可以访问以下URI
 http.authorizeRequests()
 .antMatchers(&amp;#34;/&amp;#34;, &amp;#34;/login&amp;#34;, &amp;#34;/login-error&amp;#34;, &amp;#34;/css/**&amp;#34;, &amp;#34;/index&amp;#34;)
 .permitAll();

 // 其他URI均需要权限校验
 http.authorizeRequests()
 .anyRequest()
 .authenticated();

 // 只需要以下配置即可启用记住密码
 http.authorizeRequests()
 .and()
 .rememberMe();

 http.formLogin()
 .loginPage(&amp;#34;/login&amp;#34;)
 .usernameParameter(&amp;#34;username&amp;#34;)
 .passwordParameter(&amp;#34;password&amp;#34;)
 .successForwardUrl(&amp;#34;/user/index&amp;#34;)
 .failureUrl(&amp;#34;/login-error&amp;#34;);
 }

 @Autowired
 public void configureGlobal(AuthenticationManagerBuilder auth) {
 // 为了使用用户名密码校验实现了AuthenticationProvider和UserDetailsService类
 auth.authenticationProvider(customAuthenticationProvider);
 try {
 auth.userDetailsService(userDetailsService);
 } catch (Exception e) {
 e.printStackTrace();
 }
 }
 }
&lt;/code>&lt;/pre>&lt;blockquote>
&lt;p>这样就可以使用记住密码了，选择记住密码登录后会在本地保存 Cookie，下次登录的时候通过 Cookie 校验用户信息；用户登录的信息保存在内存中，当内存断电或被清除之后该 Cookie 即使在有效期内也无法登录。&lt;/p></description></item><item><title>Spring Boot 中集成 Spring Security</title><link>https://blog.hellowood.dev/posts/spring-boot-%E4%B8%AD%E9%9B%86%E6%88%90-spring-security/</link><pubDate>Mon, 01 Jan 2018 00:09:27 +0000</pubDate><guid>https://blog.hellowood.dev/posts/spring-boot-%E4%B8%AD%E9%9B%86%E6%88%90-spring-security/</guid><description>&lt;blockquote>
&lt;p>Spring Boot 集成 Spring Security的简单应用，从数据库读取数据校验用户，页面使用Thymeleaf模板&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;h3 id="项目地址-httpsgithubcomhelloworldespringsecurityhttpsgithubcomhelloworldespringsecurity">项目地址 &lt;a href="https://github.com/helloworlde/SpringSecurity">https://github.com/helloworlde/SpringSecurity&lt;/a>&lt;/h3>
&lt;h3 id="演示-httpprojecthellowoodcomcnsecurityhttpprojecthellowoodcomcnsecurity">演示 &lt;a href="http://project.hellowood.com.cn/Security/">http://project.hellowood.com.cn/Security/&lt;/a>&lt;/h3>
&lt;h2 id="创建-spring-boot-应用">创建 Spring Boot 应用&lt;/h2>
&lt;h2 id="添加依赖">添加依赖&lt;/h2>
&lt;pre tabindex="0">&lt;code> compile(&amp;#39;org.springframework.boot:spring-boot-starter-security&amp;#39;)
 compile(&amp;#39;org.springframework.boot:spring-boot-starter-web&amp;#39;)
 compile(&amp;#39;org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.0&amp;#39;)
 compile(&amp;#39;org.springframework.boot:spring-boot-starter-thymeleaf&amp;#39;)
 runtime(&amp;#39;mysql:mysql-connector-java&amp;#39;)
 runtime(&amp;#39;org.springframework.boot:spring-boot-starter-tomcat&amp;#39;)
 testCompile(&amp;#39;org.springframework.boot:spring-boot-starter-test&amp;#39;)
 testCompile(&amp;#39;org.springframework.security:spring-security-test&amp;#39;)
&lt;/code>&lt;/pre>&lt;h2 id="创建用户表并插入数据">创建用户表并插入数据&lt;/h2>
&lt;pre tabindex="0">&lt;code> CREATE TABLE user (
 id INT AUTO_INCREMENT PRIMARY KEY,
 username VARCHAR(45) NOT NULL,
 password VARCHAR(45) NOT NULL,
 enabled INT NOT NULL DEFAULT 1
 );


 INSERT INTO user (username, password, enabled) VALUES (&amp;#39;username&amp;#39;, &amp;#39;password&amp;#39;, TRUE);
&lt;/code>&lt;/pre>&lt;h2 id="添加配置信息">添加配置信息&lt;/h2>
&lt;pre tabindex="0">&lt;code> spring.datasource.url=jdbc:mysql://localhost:3306/security?useSSL=false
 spring.datasource.username=security
 spring.datasource.password=security
 spring.datasource.driver-class-name=com.mysql.jdbc.Driver
 mybatis.type-aliases-package=cn.com.hellowood.springsecurity.mapper
 mybatis.mapper-locations=mappers/**Mapper.xml
&lt;/code>&lt;/pre>&lt;h2 id="添加-security-配置文件">添加 Security 配置文件&lt;/h2>
&lt;pre tabindex="0">&lt;code>
 import cn.com.hellowood.springsecurity.security.CustomAuthenticationProvider;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
 import org.springframework.security.config.annotation.web.builders.HttpSecurity;
 import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
 import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;

 @EnableWebSecurity
 public class SecurityConfig extends WebSecurityConfigurerAdapter {

 @Autowired
 private CustomAuthenticationProvider customAuthenticationProvider;

 @Override
 protected void configure(HttpSecurity http) throws Exception {
 // 所有请求均可访问
 http.authorizeRequests()
 .antMatchers(&amp;#34;/&amp;#34;, &amp;#34;/login&amp;#34;, &amp;#34;/login-error&amp;#34;, &amp;#34;/css/**&amp;#34;, &amp;#34;/index&amp;#34;)
 .permitAll();

 // 其余所有请求均需要权限
 http.authorizeRequests()
 .anyRequest()
 .authenticated();

 // 配置登录页面的表单 action 必须是 &amp;#39;/login&amp;#39;, 用户名和密码的参数名必须是 &amp;#39;username&amp;#39; 和 &amp;#39;password&amp;#39;，
 // 登录失败的 url 是 &amp;#39;/login-error&amp;#39;
 http.formLogin()
 .loginPage(&amp;#34;/login&amp;#34;)
 .loginProcessingUrl(&amp;#34;/login&amp;#34;)
 .usernameParameter(&amp;#34;username&amp;#34;)
 .passwordParameter(&amp;#34;password&amp;#34;)
 .failureUrl(&amp;#34;/login-error&amp;#34;);
 }

 /**
 * Configure global.
 *
 * @param auth the auth
 * @throws Exception the exception
 */
 @Autowired
 public void configureGlobal(AuthenticationManagerBuilder auth) {
 // 使用自定义的 Authentication Provider
 auth.authenticationProvider(customAuthenticationProvider);
 }
 }
&lt;/code>&lt;/pre>&lt;h2 id="添加自定义的-authentication-provider-类">添加自定义的 Authentication Provider 类&lt;/h2>
&lt;pre tabindex="0">&lt;code> import cn.com.hellowood.springsecurity.model.UserModel;
 import cn.com.hellowood.springsecurity.service.UserService;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.security.authentication.AccountExpiredException;
 import org.springframework.security.authentication.AuthenticationProvider;
 import org.springframework.security.authentication.BadCredentialsException;
 import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
 import org.springframework.security.core.Authentication;
 import org.springframework.security.core.AuthenticationException;
 import org.springframework.security.core.GrantedAuthority;
 import org.springframework.stereotype.Component;

 import javax.servlet.http.HttpSession;
 import java.util.ArrayList;
 import java.util.List;

 @Component
 public class CustomAuthenticationProvider implements AuthenticationProvider {

 private final Logger logger = LoggerFactory.getLogger(getClass());

 @Autowired
 private HttpSession session;

 @Autowired
 private UserService userService;

 /**
 * Validate user info is correct form database
 *
 * @param authentication
 * @return
 * @throws AuthenticationException
 */
 @Override
 public Authentication authenticate(Authentication authentication) throws AuthenticationException {
 String username = authentication.getName();
 String password = authentication.getCredentials().toString();
 List&amp;lt;GrantedAuthority&amp;gt; grantedAuthorities = new ArrayList&amp;lt;&amp;gt;();

 // 检查用户名密码是否正确
 UserModel user = userService.loadUserByUsernameAndPassword(username, password);
 if (user == null) {
 logger.error(&amp;#34;{} login failed, username or password is wrong&amp;#34;, username);
 throw new BadCredentialsException(&amp;#34;Username or password is not correct&amp;#34;);
 } else if (!user.getEnabled()) {
 throw new AccountExpiredException(&amp;#34;Account had expired&amp;#34;);
 }

 // 用户信息有效时将其放入 session 中
 session.setAttribute(&amp;#34;user&amp;#34;, user);
 Authentication auth = new UsernamePasswordAuthenticationToken(username, password, grantedAuthorities);
 return auth;
 }


 @Override
 public boolean supports(Class&amp;lt;?&amp;gt; authentication) {
 return authentication.equals(UsernamePasswordAuthenticationToken.class);
 }

 }
&lt;/code>&lt;/pre>&lt;h2 id="添加校验用户信息所需要的类">添加校验用户信息所需要的类&lt;/h2>
&lt;ul>
&lt;li>添加 UserModel.java&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>
 public class UserModel {

 private Integer id;

 private String username;

 private String password;

 private Boolean enabled;

 /**
 * Instantiates a new User model.
 */
 public UserModel() {
 }

 /**
 * Instantiates a new User model.
 *
 * @param id the id
 * @param username the username
 * @param password the password
 * @param enabled the enabled
 */
 public UserModel(Integer id, String username, String password, Boolean enabled) {
 this.id = id;
 this.username = username;
 this.password = password;
 this.enabled = enabled;
 }

 /**
 * Gets id.
 *
 * @return the id
 */
 public Integer getId() {
 return id;
 }

 /**
 * Sets id.
 *
 * @param id the id
 */
 public void setId(Integer id) {
 this.id = id;
 }

 /**
 * Gets username.
 *
 * @return the username
 */
 public String getUsername() {
 return username;
 }

 /**
 * Sets username.
 *
 * @param username the username
 */
 public void setUsername(String username) {
 this.username = username;
 }

 /**
 * Gets password.
 *
 * @return the password
 */
 public String getPassword() {
 return password;
 }

 /**
 * Sets password.
 *
 * @param password the password
 */
 public void setPassword(String password) {
 this.password = password;
 }

 /**
 * Gets enabled.
 *
 * @return the enabled
 */
 public Boolean getEnabled() {
 return enabled;
 }

 /**
 * Sets enabled.
 *
 * @param enabled the enabled
 */
 public void setEnabled(Boolean enabled) {
 this.enabled = enabled;
 }

 @Override
 public String toString() {
 return &amp;#34;UserModel{&amp;#34; +
 &amp;#34;id=&amp;#34; + id +
 &amp;#34;, username=&amp;#39;&amp;#34; + username + &amp;#39;\&amp;#39;&amp;#39; +
 &amp;#34;, password=&amp;#39;&amp;#34; + password + &amp;#39;\&amp;#39;&amp;#39; +
 &amp;#34;, enabled=&amp;#34; + enabled +
 &amp;#39;}&amp;#39;;
 }
 }
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>添加 UserService.java&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>
 import cn.com.hellowood.springsecurity.mapper.UserMapper;
 import cn.com.hellowood.springsecurity.model.UserModel;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Service;

 @Service(&amp;#34;userService&amp;#34;)
 public class UserService {

 @Autowired
 private UserMapper userMapper;

 /**
 * Load user by username and password user model.
 *
 * @param username the username
 * @param password the password
 * @return the user model
 */
 public UserModel loadUserByUsernameAndPassword(String username, String password) {
 return userMapper.getUserByUsernameAndPassword(username, password);
 }
 }
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>添加 UserMapper.java&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> import cn.com.hellowood.springsecurity.model.UserModel;
 import org.apache.ibatis.annotations.Mapper;
 import org.apache.ibatis.annotations.Param;

 @Mapper
 public interface UserMapper {

 /**
 * Gets user by username and password.
 *
 * @param username the username
 * @param password the password
 * @return the user by username and password
 */
 UserModel getUserByUsernameAndPassword(@Param(&amp;#34;username&amp;#34;) String username,
 @Param(&amp;#34;password&amp;#34;) String password);
 }
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>添加 UserMapper.xml&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> &amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34; ?&amp;gt;
 &amp;lt;!DOCTYPE mapper PUBLIC &amp;#34;-//mybatis.org//DTD Mapper 3.0//EN&amp;#34; &amp;#34;http://mybatis.org/dtd/mybatis-3-mapper.dtd&amp;#34; &amp;gt;
 &amp;lt;mapper namespace=&amp;#34;cn.com.hellowood.springsecurity.mapper.UserMapper&amp;#34;&amp;gt;

 &amp;lt;resultMap id=&amp;#34;baseResultMap&amp;#34; type=&amp;#34;cn.com.hellowood.springsecurity.model.UserModel&amp;#34;&amp;gt;
 &amp;lt;id column=&amp;#34;id&amp;#34; property=&amp;#34;id&amp;#34; javaType=&amp;#34;java.lang.Integer&amp;#34; jdbcType=&amp;#34;INTEGER&amp;#34;&amp;gt;&amp;lt;/id&amp;gt;
 &amp;lt;result column=&amp;#34;username&amp;#34; property=&amp;#34;username&amp;#34; javaType=&amp;#34;java.lang.String&amp;#34; jdbcType=&amp;#34;VARCHAR&amp;#34;&amp;gt;&amp;lt;/result&amp;gt;
 &amp;lt;result column=&amp;#34;password&amp;#34; property=&amp;#34;password&amp;#34; javaType=&amp;#34;java.lang.String&amp;#34; jdbcType=&amp;#34;VARCHAR&amp;#34;&amp;gt;&amp;lt;/result&amp;gt;
 &amp;lt;result column=&amp;#34;enabled&amp;#34; property=&amp;#34;enabled&amp;#34; javaType=&amp;#34;java.lang.Boolean&amp;#34; jdbcType=&amp;#34;INTEGER&amp;#34;&amp;gt;&amp;lt;/result&amp;gt;
 &amp;lt;/resultMap&amp;gt;

 &amp;lt;select id=&amp;#34;getUserByUsernameAndPassword&amp;#34; resultType=&amp;#34;cn.com.hellowood.springsecurity.model.UserModel&amp;#34;&amp;gt;
 SELECT
 id,
 username,
 password,
 enabled
 FROM user
 WHERE username = #{username, jdbcType=VARCHAR}
 AND password = #{password, jdbcType=VARCHAR}
 &amp;lt;/select&amp;gt;
 &amp;lt;/mapper&amp;gt;
&lt;/code>&lt;/pre>&lt;h2 id="添加页面">添加页面&lt;/h2>
&lt;ul>
&lt;li>index.html&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> &amp;lt;!DOCTYPE html&amp;gt;
 &amp;lt;html xmlns=&amp;#34;http://www.w3.org/1999/xhtml&amp;#34; xmlns:th=&amp;#34;http://www.thymeleaf.org&amp;#34;&amp;gt;
 &amp;lt;head&amp;gt;
 &amp;lt;title&amp;gt;Spring Security&amp;lt;/title&amp;gt;
 &amp;lt;meta charset=&amp;#34;utf-8&amp;#34;/&amp;gt;
 &amp;lt;meta name=&amp;#34;viewport&amp;#34; content=&amp;#34;width=device-width, initial-scale=1, shrink-to-fit=no&amp;#34;/&amp;gt;
 &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;/css/main.css&amp;#34; th:href=&amp;#34;@{/css/main.css}&amp;#34;/&amp;gt;
 &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;/css/bootstrap.min.css&amp;#34; th:href=&amp;#34;@{/css/bootstrap.min.css}&amp;#34;/&amp;gt;
 &amp;lt;/head&amp;gt;
 &amp;lt;body&amp;gt;
 &amp;lt;div class=&amp;#34;container&amp;#34;&amp;gt;
 &amp;lt;form action=&amp;#34;#&amp;#34; class=&amp;#34;form-signin&amp;#34;&amp;gt;
 &amp;lt;h2 class=&amp;#34;form-signin-heading&amp;#34;&amp;gt;Hello Spring Security&amp;lt;/h2&amp;gt;
 &amp;lt;h5 class=&amp;#34;form-signin-heading content-adjust&amp;#34;&amp;gt;Anyone can access this page&amp;lt;/h5&amp;gt;
 &amp;lt;div th:if=&amp;#34;${session.user} != null&amp;#34;&amp;gt;
 &amp;lt;h5 class=&amp;#34;form-signin-heading content-adjust&amp;#34;&amp;gt;Your username is &amp;lt;span th:text=&amp;#34;${session.user.username}&amp;#34;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/h5&amp;gt;
 &amp;lt;a href=&amp;#34;/user/index&amp;#34; th:href=&amp;#34;@{/user/index}&amp;#34; class=&amp;#34;btn btn-success btn-block&amp;#34;&amp;gt;To Security page&amp;lt;/a&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;div th:if=&amp;#34;${session.user} == null&amp;#34;&amp;gt;
 &amp;lt;a href=&amp;#34;/index&amp;#34; th:href=&amp;#34;@{/login}&amp;#34; class=&amp;#34;btn btn-primary btn-block&amp;#34;&amp;gt;To Login page&amp;lt;/a&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/form&amp;gt;
 &amp;lt;div th:fragment=&amp;#34;logout&amp;#34; class=&amp;#34;logout&amp;#34; th:if=&amp;#34;${session.user} != null&amp;#34;&amp;gt;
 &amp;lt;form action=&amp;#34;#&amp;#34; th:action=&amp;#34;@{/logout}&amp;#34; method=&amp;#34;post&amp;#34; class=&amp;#34;form-signin&amp;#34;&amp;gt;
 &amp;lt;button class=&amp;#34;btn btn-warning btn-block&amp;#34; type=&amp;#34;submit&amp;#34;&amp;gt;Log out&amp;lt;/button&amp;gt;
 &amp;lt;/form&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/body&amp;gt;
 &amp;lt;/html&amp;gt;
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>login.html&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> &amp;lt;!DOCTYPE html&amp;gt;
 &amp;lt;html xmlns=&amp;#34;http://www.w3.org/1999/xhtml&amp;#34; xmlns:th=&amp;#34;http://www.thymeleaf.org&amp;#34;&amp;gt;
 &amp;lt;head&amp;gt;
 &amp;lt;title&amp;gt;Login page&amp;lt;/title&amp;gt;
 &amp;lt;meta charset=&amp;#34;utf-8&amp;#34;/&amp;gt;
 &amp;lt;meta name=&amp;#34;viewport&amp;#34; content=&amp;#34;width=device-width, initial-scale=1, shrink-to-fit=no&amp;#34;/&amp;gt;
 &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;/css/main.css&amp;#34; th:href=&amp;#34;@{/css/main.css}&amp;#34;/&amp;gt;
 &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;/css/bootstrap.min.css&amp;#34; th:href=&amp;#34;@{/css/bootstrap.min.css}&amp;#34;/&amp;gt;
 &amp;lt;/head&amp;gt;
 &amp;lt;body&amp;gt;
 &amp;lt;div class=&amp;#34;container&amp;#34;&amp;gt;
 &amp;lt;form th:action=&amp;#34;@{/login}&amp;#34; method=&amp;#34;post&amp;#34; class=&amp;#34;form-signin&amp;#34;&amp;gt;
 &amp;lt;h2 class=&amp;#34;form-signin-heading&amp;#34;&amp;gt;Please sign in&amp;lt;/h2&amp;gt;
 &amp;lt;div&amp;gt;
 &amp;lt;label for=&amp;#34;username&amp;#34; class=&amp;#34;sr-only&amp;#34;&amp;gt;Username&amp;lt;/label&amp;gt;
 &amp;lt;input type=&amp;#34;text&amp;#34; id=&amp;#34;username&amp;#34; name=&amp;#34;username&amp;#34;
 th:class=&amp;#34;${loginError} ? &amp;#39;form-control is-invalid&amp;#39; : &amp;#39;form-control&amp;#39;&amp;#34; placeholder=&amp;#34;Username&amp;#34;
 required=&amp;#34;required&amp;#34;
 autofocus=&amp;#34;autofocus&amp;#34;/&amp;gt;
 &amp;lt;div class=&amp;#34;invalid-feedback&amp;#34; th:if=&amp;#34;${loginError}&amp;#34;&amp;gt;
 Wrong username or password
 &amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;div&amp;gt;
 &amp;lt;label for=&amp;#34;password&amp;#34; class=&amp;#34;sr-only&amp;#34;&amp;gt;Password&amp;lt;/label&amp;gt;
 &amp;lt;input type=&amp;#34;password&amp;#34; id=&amp;#34;password&amp;#34; name=&amp;#34;password&amp;#34; class=&amp;#34;form-control&amp;#34; placeholder=&amp;#34;Password&amp;#34;
 required=&amp;#34;required&amp;#34;/&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;button class=&amp;#34;btn btn-success btn-block&amp;#34; type=&amp;#34;submit&amp;#34;&amp;gt;Sign in&amp;lt;/button&amp;gt;
 &amp;lt;a href=&amp;#34;/index&amp;#34; th:href=&amp;#34;@{/index}&amp;#34; class=&amp;#34;btn btn-primary btn-block&amp;#34;&amp;gt;Back to Home page&amp;lt;/a&amp;gt;
 &amp;lt;/form&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/body&amp;gt;
 &amp;lt;/html&amp;gt;
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>user/index.html&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> &amp;lt;!DOCTYPE html&amp;gt;
 &amp;lt;html xmlns=&amp;#34;http://www.w3.org/1999/xhtml&amp;#34; xmlns:th=&amp;#34;http://www.thymeleaf.org&amp;#34;&amp;gt;
 &amp;lt;head&amp;gt;
 &amp;lt;title&amp;gt;Spring Security&amp;lt;/title&amp;gt;
 &amp;lt;meta charset=&amp;#34;utf-8&amp;#34;/&amp;gt;
 &amp;lt;meta name=&amp;#34;viewport&amp;#34; content=&amp;#34;width=device-width, initial-scale=1, shrink-to-fit=no&amp;#34;/&amp;gt;
 &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;/css/main.css&amp;#34; th:href=&amp;#34;@{/css/main.css}&amp;#34;/&amp;gt;
 &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;/css/bootstrap.min.css&amp;#34; th:href=&amp;#34;@{/css/bootstrap.min.css}&amp;#34;/&amp;gt;
 &amp;lt;/head&amp;gt;
 &amp;lt;body&amp;gt;
 &amp;lt;div class=&amp;#34;container&amp;#34;&amp;gt;
 &amp;lt;form action=&amp;#34;#&amp;#34; class=&amp;#34;form-signin&amp;#34;&amp;gt;
 &amp;lt;h2 class=&amp;#34;form-signin-heading&amp;#34;&amp;gt;Hello Spring Security&amp;lt;/h2&amp;gt;
 &amp;lt;h5 class=&amp;#34;form-signin-heading content-adjust&amp;#34;&amp;gt;Only logged in user can access this page&amp;lt;/h5&amp;gt;
 &amp;lt;div th:if=&amp;#34;${session.user} != null&amp;#34;&amp;gt;
 &amp;lt;h5 class=&amp;#34;form-signin-heading content-adjust&amp;#34;&amp;gt;Logged user is &amp;lt;span th:text=&amp;#34;${session.user.username}&amp;#34;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/h5&amp;gt;
 &amp;lt;a href=&amp;#34;/index&amp;#34; th:href=&amp;#34;@{/index}&amp;#34; class=&amp;#34;btn btn-primary btn-block&amp;#34;&amp;gt;Back to Home page&amp;lt;/a&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/form&amp;gt;
 &amp;lt;div th:substituteby=&amp;#34;index::logout&amp;#34;&amp;gt;&amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/body&amp;gt;
 &amp;lt;/html&amp;gt;
&lt;/code>&lt;/pre>&lt;h2 id="添加-controller">添加 Controller&lt;/h2>
&lt;pre tabindex="0">&lt;code> import org.springframework.stereotype.Controller;
 import org.springframework.ui.Model;
 import org.springframework.web.bind.annotation.RequestMapping;

 @Controller
 public class MainController {

 /**
 * Root page.
 *
 * @return the index page url
 */
 @RequestMapping(&amp;#34;/&amp;#34;)
 public String root() {
 return &amp;#34;redirect:/index&amp;#34;;
 }

 /**
 * Index page.
 *
 * @return the index page url
 */
 @RequestMapping(&amp;#34;/index&amp;#34;)
 public String index() {
 return &amp;#34;index&amp;#34;;
 }

 /**
 * User index page.
 *
 * @return the user index page url
 */
 @RequestMapping(&amp;#34;/user/index&amp;#34;)
 public String userIndex() {
 return &amp;#34;user/index&amp;#34;;
 }

 /**
 * Login page.
 *
 * @return the login page url
 */
 @RequestMapping(&amp;#34;/login&amp;#34;)
 public String login() {
 return &amp;#34;login&amp;#34;;
 }

 /**
 * Login error page.
 *
 * @param model the model
 * @return the login error page url
 */
 @RequestMapping(&amp;#34;/login-error&amp;#34;)
 public String loginError(Model model) {
 model.addAttribute(&amp;#34;loginError&amp;#34;, true);
 return &amp;#34;login&amp;#34;;
 }

 }
&lt;/code>&lt;/pre>&lt;hr>
&lt;blockquote>
&lt;p>启动应用，访问&lt;a href="http://localhost:8080/user/index">http://localhost:8080/user/index&lt;/a>，此时没有登录，会被拦截并重定向到登录页面&lt;a href="http://localhost:8080/login">http://localhost:8080/login&lt;/a>，输入用户名 &lt;code>username&lt;/code> 和密码 &lt;code>password&lt;/code>，登录成功后再次访问&lt;a href="http://localhost:8080/user/index">http://localhost:8080/user/index&lt;/a>，此时该 url 可以正常访问，当输入错误的用户名或密码时会提示错误信息，说明 Spring Security 配置正确&lt;/p></description></item><item><title>Spring MVC 使用 Spring Session 实现 Session 共享-Redis</title><link>https://blog.hellowood.dev/posts/spring-mvc-%E4%BD%BF%E7%94%A8-spring-session-%E5%AE%9E%E7%8E%B0-session-%E5%85%B1%E4%BA%AB-redis/</link><pubDate>Mon, 01 Jan 2018 00:07:20 +0000</pubDate><guid>https://blog.hellowood.dev/posts/spring-mvc-%E4%BD%BF%E7%94%A8-spring-session-%E5%AE%9E%E7%8E%B0-session-%E5%85%B1%E4%BA%AB-redis/</guid><description>&lt;blockquote>
&lt;p>使用Spring Session 通过 Redis 实现 Session 共享，用于多实例应用&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>Spring Session 官方文档&lt;a href="https://docs.spring.io/spring-session/docs/2.0.0.M4/reference/html5/#introduction">https://docs.spring.io/spring-session/docs/2.0.0.M4/reference/html5/#introduction&lt;/a>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="session-共享的简单原理">Session 共享的简单原理&lt;/h2>
&lt;blockquote>
&lt;p>用户第一次访问应用时，应用会创建一个新的 Session，并且会将 Session 的 ID 作为 Cookie 缓存在浏览器，下一次访问时请求的头部中带着该 Cookie，应用通过获取的 Session ID 进行查找，如果该 Session 存在且有效，则继续该请求，如果 Cookie 无效或者 Session 无效，则会重新生成一个新的 Session&lt;/p>
&lt;p>在普通的 JavaEE 应用中，Session 信息放在内存中，当容器（如 Tomcat）关闭后，内存中的 Session 被销毁；重启后如果当前用户再去访问对应的是一个新的 Session ，在多实例中无法共享，一个用户只能访问指定的实例才能使用相同的 Session；&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Session 共享实现的原理是将原来内存中的 Session 放在一个需要共享 Session 的实例都可以访问到的位置，如数据库，Redis 中等，从而实现多实例 Session 共享&lt;/p>
&lt;p>实现共享后，只要浏览器的 Cookie 中的 Session ID 没有改变，多个实例中的任意一个被销毁不会影响用户访问&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;h1 id="redis-方式实现">Redis 方式实现&lt;/h1>
&lt;blockquote>
&lt;p>将 Session 对象序列化存储到 Redis 中，多个实例访问时都会使用该 Session，Spring Session 会管理 Session 信息的管理，无需其他操作&lt;/p>
&lt;/blockquote>
&lt;h2 id="1-添加依赖">1. 添加依赖&lt;/h2>
&lt;ul>
&lt;li>在 pom.xml 文件里面添加如下依赖&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> &amp;lt;dependency&amp;gt;
 &amp;lt;groupId&amp;gt;redis.clients&amp;lt;/groupId&amp;gt;
 &amp;lt;artifactId&amp;gt;jedis&amp;lt;/artifactId&amp;gt;
 &amp;lt;version&amp;gt;2.9.0&amp;lt;/version&amp;gt;
 &amp;lt;/dependency&amp;gt;
 &amp;lt;dependency&amp;gt;
 &amp;lt;groupId&amp;gt;org.springframework.data&amp;lt;/groupId&amp;gt;
 &amp;lt;artifactId&amp;gt;spring-data-redis&amp;lt;/artifactId&amp;gt;
 &amp;lt;version&amp;gt;1.8.7.RELEAS&amp;lt;/version&amp;gt;
 &amp;lt;/dependency&amp;gt;
 &amp;lt;dependency&amp;gt;
 &amp;lt;groupId&amp;gt;org.springframework.session&amp;lt;/groupId&amp;gt;
 &amp;lt;artifactId&amp;gt;spring-session&amp;lt;/artifactId&amp;gt;
 &amp;lt;version&amp;gt;1.3.1.RELEASE&amp;lt;/version&amp;gt;
 &amp;lt;/dependency&amp;gt;
&lt;/code>&lt;/pre>&lt;h2 id="2-添加配置">2. 添加配置&lt;/h2>
&lt;ul>
&lt;li>SpringConfig.xml 添加如下配置&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> &amp;lt;!-- Spring Session共享 --&amp;gt;
 &amp;lt;bean class=&amp;#34;org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration&amp;#34;/&amp;gt;
 &amp;lt;bean class=&amp;#34;org.springframework.data.redis.connection.jedis.JedisConnectionFactory&amp;#34;&amp;gt;
 &amp;lt;property name=&amp;#34;hostName&amp;#34; value=&amp;#34;localhost&amp;#34;/&amp;gt;
 &amp;lt;property name=&amp;#34;password&amp;#34; value=&amp;#34;123456&amp;#34;/&amp;gt;
 &amp;lt;property name=&amp;#34;port&amp;#34; value=&amp;#34;6379&amp;#34;/&amp;gt;
 &amp;lt;property name=&amp;#34;database&amp;#34; value=&amp;#34;3&amp;#34;/&amp;gt;
 &amp;lt;/bean&amp;gt;
&lt;/code>&lt;/pre>&lt;h2 id="3-添加过滤器">3. 添加过滤器&lt;/h2>
&lt;ul>
&lt;li>在 web.xml 添加如下配置（过滤器）&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> &amp;lt;filter&amp;gt;
 &amp;lt;filter-name&amp;gt;springSessionRepositoryFilter&amp;lt;/filter-name&amp;gt;
 &amp;lt;filter-class&amp;gt;org.springframework.web.filter.DelegatingFilterProxy&amp;lt;/filter-class&amp;gt;
 &amp;lt;/filter&amp;gt;
 &amp;lt;filter-mapping&amp;gt;
 &amp;lt;filter-name&amp;gt;springSessionRepositoryFilter&amp;lt;/filter-name&amp;gt;
 &amp;lt;url-pattern&amp;gt;/*&amp;lt;/url-pattern&amp;gt;
 &amp;lt;/filter-mapping&amp;gt;
&lt;/code>&lt;/pre>&lt;blockquote>
&lt;p>该过滤器必须是第一个过滤器，所有的请求经过该过滤器后执行后续操作&lt;/p></description></item><item><title>Gradle 使用-多项目构建</title><link>https://blog.hellowood.dev/posts/gradle-%E6%B7%BB%E5%8A%A0%E5%A4%9A%E6%A8%A1%E5%9D%97%E4%BE%9D%E8%B5%96%E5%85%B6%E4%BB%96%E9%A1%B9%E7%9B%AE/</link><pubDate>Mon, 01 Jan 2018 00:05:06 +0000</pubDate><guid>https://blog.hellowood.dev/posts/gradle-%E6%B7%BB%E5%8A%A0%E5%A4%9A%E6%A8%A1%E5%9D%97%E4%BE%9D%E8%B5%96%E5%85%B6%E4%BB%96%E9%A1%B9%E7%9B%AE/</guid><description>&lt;h2 id="配置">配置&lt;/h2>
&lt;blockquote>
&lt;p>如该项目有三个模块，分别是&lt;code>Controller&lt;/code>, &lt;code>Service&lt;/code>, &lt;code>Dao&lt;/code>,&lt;code>Model&lt;/code>，根目录仅为父级目录，不存在任何代码；子目录为各个相应的模块或单独的项目&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>项目根目录下添加 &lt;code>build.gradle&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-gradle" data-lang="gradle">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">// 子模块通用配置
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">&lt;/span>&lt;span style="color:#c1abea">subprojects&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">apply&lt;/span> &lt;span style="color:#f5a40d">plugin:&lt;/span> &lt;span style="color:#98c379">&amp;#39;java&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">apply&lt;/span> &lt;span style="color:#f5a40d">plugin:&lt;/span> &lt;span style="color:#98c379">&amp;#39;idea&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">apply&lt;/span> &lt;span style="color:#f5a40d">plugin:&lt;/span> &lt;span style="color:#98c379">&amp;#39;eclipse&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">group&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#39;cn.com.hellowood&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">version&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#39;0.0.2-SNAPSHOT&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">sourceCompatibility&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#d19a66">1.8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8a93a5;font-style:italic">// java编译的时候缺省状态下会因为中文字符而失败
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">&lt;/span> &lt;span style="color:#c7bf54">[&lt;/span>&lt;span style="color:#c1abea">compileJava&lt;/span>&lt;span style="color:#c7bf54">,&lt;/span> &lt;span style="color:#c1abea">compileTestJava&lt;/span>&lt;span style="color:#c7bf54">,&lt;/span> &lt;span style="color:#c1abea">javadoc&lt;/span>&lt;span style="color:#c7bf54">]*.&lt;/span>&lt;span style="color:#b3d23c">options&lt;/span>&lt;span style="color:#c7bf54">*.&lt;/span>&lt;span style="color:#b3d23c">encoding&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#39;UTF-8&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">repositories&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">mavenLocal&lt;/span>&lt;span style="color:#c7bf54">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">maven&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span> &lt;span style="color:#c1abea">url&lt;/span> &lt;span style="color:#98c379">&amp;#39;http://maven.aliyun.com/nexus/content/groups/public/&amp;#39;&lt;/span> &lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">mavenCentral&lt;/span>&lt;span style="color:#c7bf54">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">jcenter&lt;/span>&lt;span style="color:#c7bf54">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">dependencies&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">testCompile&lt;/span> &lt;span style="color:#98c379">&amp;#39;junit:junit:4.12&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>项目根目录下添加 &lt;code>settings.gradle&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-gradle" data-lang="gradle">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">rootProject&lt;/span>&lt;span style="color:#c7bf54">.&lt;/span>&lt;span style="color:#b3d23c">name&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#39;SpringBoot&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">// 子模块
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">&lt;/span>&lt;span style="color:#c1abea">include&lt;/span> &lt;span style="color:#98c379">&amp;#39;Controller&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">include&lt;/span> &lt;span style="color:#98c379">&amp;#39;Service&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">include&lt;/span> &lt;span style="color:#98c379">&amp;#39;Dao&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">include&lt;/span> &lt;span style="color:#98c379">&amp;#39;Model&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>子目录 &lt;code>build.gradle&lt;/code>(其他模块类似)&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-gradle" data-lang="gradle">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">buildscript&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">ext&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">springBootVersion&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#39;1.5.9.RELEASE&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">repositories&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">mavenCentral&lt;/span>&lt;span style="color:#c7bf54">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">dependencies&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">classpath&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#63c381">&amp;#34;org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}&amp;#34;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">apply&lt;/span> &lt;span style="color:#f5a40d">plugin:&lt;/span> &lt;span style="color:#98c379">&amp;#39;java&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">apply&lt;/span> &lt;span style="color:#f5a40d">plugin:&lt;/span> &lt;span style="color:#98c379">&amp;#39;eclipse&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">apply&lt;/span> &lt;span style="color:#f5a40d">plugin:&lt;/span> &lt;span style="color:#98c379">&amp;#39;org.springframework.boot&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">archivesBaseName&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#39;Controller&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">repositories&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">mavenCentral&lt;/span>&lt;span style="color:#c7bf54">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">dependencies&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">compile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.1&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">compile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;org.springframework.boot:spring-boot-starter-web&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">compile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;io.springfox:springfox-swagger2:2.7.0&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">compile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;io.springfox:springfox-swagger-ui:2.7.0&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">runtime&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;mysql:mysql-connector-java&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">runtime&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;com.h2database:h2&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">testCompile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;org.springframework.boot:spring-boot-starter-test&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">testCompile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;org.springframework.restdocs:spring-restdocs-mockmvc&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="编译和使用">编译和使用&lt;/h2>
&lt;ul>
&lt;li>在根目录下执行&lt;code>gradle init&lt;/code>&lt;/li>
&lt;li>在根目录下执行&lt;code>gradle build&lt;/code>&lt;/li>
&lt;li>如果需要单独编译某个模块执行&lt;code>gradle Controller:build&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="依赖其他项目">依赖其他项目&lt;/h2>
&lt;ul>
&lt;li>在项目的build.gradle 文件的依赖中添加其他项目依赖&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>dependencies {
 compile project(&amp;#39;:model&amp;#39;)
}
&lt;/code>&lt;/pre></description></item><item><title>Gradle 添加多项，依赖其他项目</title><link>https://blog.hellowood.dev/posts/gradle-%E4%BD%BF%E7%94%A8-%E5%A4%9A%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA/</link><pubDate>Mon, 01 Jan 2018 00:05:06 +0000</pubDate><guid>https://blog.hellowood.dev/posts/gradle-%E4%BD%BF%E7%94%A8-%E5%A4%9A%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA/</guid><description>&lt;h2 id="配置">配置&lt;/h2>
&lt;blockquote>
&lt;p>如该项目有四个模块，分别是&lt;code>Controller&lt;/code>, &lt;code>Service&lt;/code>, &lt;code>Dao&lt;/code>,&lt;code>Model&lt;/code>，根目录仅为父级目录，不存在任何代码；子目录为各个相应的模块或单独的项目&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>项目根目录下添加 &lt;code>build.gradle&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-gradle" data-lang="gradle">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">// 子模块通用配置
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">&lt;/span>&lt;span style="color:#c1abea">subprojects&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">apply&lt;/span> &lt;span style="color:#f5a40d">plugin:&lt;/span> &lt;span style="color:#98c379">&amp;#39;java&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">apply&lt;/span> &lt;span style="color:#f5a40d">plugin:&lt;/span> &lt;span style="color:#98c379">&amp;#39;idea&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">apply&lt;/span> &lt;span style="color:#f5a40d">plugin:&lt;/span> &lt;span style="color:#98c379">&amp;#39;eclipse&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">group&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#39;cn.com.hellowood&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">version&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#39;0.0.2-SNAPSHOT&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">sourceCompatibility&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#d19a66">1.8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8a93a5;font-style:italic">// java编译的时候缺省状态下会因为中文字符而失败
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">&lt;/span> &lt;span style="color:#c7bf54">[&lt;/span>&lt;span style="color:#c1abea">compileJava&lt;/span>&lt;span style="color:#c7bf54">,&lt;/span> &lt;span style="color:#c1abea">compileTestJava&lt;/span>&lt;span style="color:#c7bf54">,&lt;/span> &lt;span style="color:#c1abea">javadoc&lt;/span>&lt;span style="color:#c7bf54">]*.&lt;/span>&lt;span style="color:#b3d23c">options&lt;/span>&lt;span style="color:#c7bf54">*.&lt;/span>&lt;span style="color:#b3d23c">encoding&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#39;UTF-8&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">repositories&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">mavenLocal&lt;/span>&lt;span style="color:#c7bf54">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">maven&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span> &lt;span style="color:#c1abea">url&lt;/span> &lt;span style="color:#98c379">&amp;#39;http://maven.aliyun.com/nexus/content/groups/public/&amp;#39;&lt;/span> &lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">mavenCentral&lt;/span>&lt;span style="color:#c7bf54">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">jcenter&lt;/span>&lt;span style="color:#c7bf54">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">dependencies&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">testCompile&lt;/span> &lt;span style="color:#98c379">&amp;#39;junit:junit:4.12&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>项目根目录下添加 &lt;code>settings.gradle&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-gradle" data-lang="gradle">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">rootProject&lt;/span>&lt;span style="color:#c7bf54">.&lt;/span>&lt;span style="color:#b3d23c">name&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#39;SpringBoot&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">// 子模块
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">&lt;/span>&lt;span style="color:#c1abea">include&lt;/span> &lt;span style="color:#98c379">&amp;#39;Controller&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">include&lt;/span> &lt;span style="color:#98c379">&amp;#39;Service&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">include&lt;/span> &lt;span style="color:#98c379">&amp;#39;Dao&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">include&lt;/span> &lt;span style="color:#98c379">&amp;#39;Model&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>子目录 &lt;code>build.gradle&lt;/code>(其他模块类似)&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-gradle" data-lang="gradle">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">buildscript&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">ext&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">springBootVersion&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#39;1.5.9.RELEASE&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">repositories&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">mavenCentral&lt;/span>&lt;span style="color:#c7bf54">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">dependencies&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">classpath&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#63c381">&amp;#34;org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}&amp;#34;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">apply&lt;/span> &lt;span style="color:#f5a40d">plugin:&lt;/span> &lt;span style="color:#98c379">&amp;#39;java&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">apply&lt;/span> &lt;span style="color:#f5a40d">plugin:&lt;/span> &lt;span style="color:#98c379">&amp;#39;eclipse&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">apply&lt;/span> &lt;span style="color:#f5a40d">plugin:&lt;/span> &lt;span style="color:#98c379">&amp;#39;org.springframework.boot&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">archivesBaseName&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#39;Controller&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">repositories&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">mavenCentral&lt;/span>&lt;span style="color:#c7bf54">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">dependencies&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">compile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.1&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">compile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;org.springframework.boot:spring-boot-starter-web&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">compile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;io.springfox:springfox-swagger2:2.7.0&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">compile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;io.springfox:springfox-swagger-ui:2.7.0&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">runtime&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;mysql:mysql-connector-java&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">runtime&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;com.h2database:h2&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">testCompile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;org.springframework.boot:spring-boot-starter-test&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">testCompile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;org.springframework.restdocs:spring-restdocs-mockmvc&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="编译和使用">编译和使用&lt;/h2>
&lt;ul>
&lt;li>在根目录下执行&lt;code>gradle init&lt;/code>&lt;/li>
&lt;li>在根目录下执行&lt;code>gradle build&lt;/code>&lt;/li>
&lt;li>如果需要单独编译某个模块执行&lt;code>gradle Controller:build&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="依赖其他项目">依赖其他项目&lt;/h2>
&lt;ul>
&lt;li>在项目的build.gradle 文件的依赖中添加其他项目依赖&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>dependencies {
 compile project(&amp;#39;:model&amp;#39;)
}
&lt;/code>&lt;/pre></description></item><item><title>Gradle 使用-添加 Jacoco 分析单元测试覆盖率工具</title><link>https://blog.hellowood.dev/posts/gradle-%E4%BD%BF%E7%94%A8-jacoco-%E5%88%86%E6%9E%90%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E8%A6%86%E7%9B%96%E7%8E%87%E5%B7%A5%E5%85%B7/</link><pubDate>Mon, 01 Jan 2018 00:03:40 +0000</pubDate><guid>https://blog.hellowood.dev/posts/gradle-%E4%BD%BF%E7%94%A8-jacoco-%E5%88%86%E6%9E%90%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E8%A6%86%E7%9B%96%E7%8E%87%E5%B7%A5%E5%85%B7/</guid><description>&lt;blockquote>
&lt;p>Jacoco 是一个免费的 Java 单元测试覆盖率分析工具，在 Gradle 中添加插件，在编译的同事进行单元测试覆盖率分析&lt;/p>
&lt;/blockquote>
&lt;h2 id="配置">配置&lt;/h2>
&lt;pre tabindex="0">&lt;code>buildscript {
 repositories {
 mavenCentral()
 maven { url &amp;#34;https://plugins.gradle.org/m2/&amp;#34; }
 }
}

apply plugin: &amp;#39;java&amp;#39;
apply plugin: &amp;#39;jacoco&amp;#39;


group = &amp;#39;cn.com.hellowood&amp;#39;
version = &amp;#39;0.0.1-SNAPSHOT&amp;#39;
sourceCompatibility = 1.8

repositories {
 mavenCentral()
 maven { url &amp;#34;https://plugins.gradle.org/m2/&amp;#34; }
}

war {
 baseName = &amp;#39;Security&amp;#39;
 version = &amp;#39;&amp;#39;
}

jacocoTestReport {
 reports {
 xml.enabled false
 html.enabled true
 }
}

check.dependsOn jacocoTestReport
&lt;/code>&lt;/pre>&lt;h2 id="生成结果">生成结果&lt;/h2>
&lt;blockquote>
&lt;p>编译完成后会在 &lt;code>${buildDir}/build/reports/jacoco/&lt;/code> 下会生成报告&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="http://img.blog.csdn.net/20171207221854097?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMzM2MDg1MA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="Jacoco测试结果">&lt;/p></description></item><item><title>Java 将单元测试覆盖率上传到 Codecov</title><link>https://blog.hellowood.dev/posts/java-%E5%B0%86%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E8%A6%86%E7%9B%96%E7%8E%87%E4%B8%8A%E4%BC%A0%E5%88%B0-codecov/</link><pubDate>Mon, 01 Jan 2018 00:00:19 +0000</pubDate><guid>https://blog.hellowood.dev/posts/java-%E5%B0%86%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E8%A6%86%E7%9B%96%E7%8E%87%E4%B8%8A%E4%BC%A0%E5%88%B0-codecov/</guid><description>&lt;blockquote>
&lt;p>通过使用 &lt;a href="http://www.eclemma.org/jacoco/">Jacoco&lt;/a> 生成单元测试覆盖率报告，并将该报告上传到 &lt;a href="https://codecov.io">Codecov&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h2 id="配置-jacoco">配置 Jacoco&lt;/h2>
&lt;ul>
&lt;li>配置 build.gradle 文件(以 SpringBoot 应用为例)&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-groovy" data-lang="groovy">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">buildscript&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">ext&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">springBootVersion&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#39;1.5.8.RELEASE&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">repositories&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">mavenCentral&lt;/span>&lt;span style="color:#c7bf54">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">maven&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span> &lt;span style="color:#c1abea">url&lt;/span> &lt;span style="color:#63c381">&amp;#34;https://plugins.gradle.org/m2/&amp;#34;&lt;/span> &lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">maven&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span> &lt;span style="color:#c1abea">url&lt;/span> &lt;span style="color:#98c379">&amp;#39;http://maven.aliyun.com/nexus/content/groups/public/&amp;#39;&lt;/span> &lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">dependencies&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">classpath&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#63c381">&amp;#34;org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}&amp;#34;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">classpath&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#63c381">&amp;#34;gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:1.4.17&amp;#34;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">apply&lt;/span> &lt;span style="color:#f5a40d">plugin:&lt;/span> &lt;span style="color:#98c379">&amp;#39;java&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">apply&lt;/span> &lt;span style="color:#f5a40d">plugin:&lt;/span> &lt;span style="color:#98c379">&amp;#39;eclipse-wtp&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">apply&lt;/span> &lt;span style="color:#f5a40d">plugin:&lt;/span> &lt;span style="color:#98c379">&amp;#39;org.springframework.boot&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">apply&lt;/span> &lt;span style="color:#f5a40d">plugin:&lt;/span> &lt;span style="color:#98c379">&amp;#39;war&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">// 使用 Jacoco 插件
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">&lt;/span>&lt;span style="color:#c1abea">apply&lt;/span> &lt;span style="color:#f5a40d">plugin:&lt;/span> &lt;span style="color:#98c379">&amp;#39;jacoco&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">group&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#39;cn.com.hellowood&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">version&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#39;0.0.1-SNAPSHOT&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">sourceCompatibility&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#d19a66">1.8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">repositories&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">mavenCentral&lt;/span>&lt;span style="color:#c7bf54">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">war&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">baseName&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#39;Security&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">version&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">dependencies&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">compile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;org.springframework.boot:spring-boot-starter-security&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">compile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;org.springframework.boot:spring-boot-starter-web&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">compile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#63c381">&amp;#34;org.springframework.boot:spring-boot-devtools&amp;#34;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">compile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.0&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">compile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;org.springframework.boot:spring-boot-starter-thymeleaf&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">compile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;org.webjars:jquery:3.2.1&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">compile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;org.webjars:bootstrap:4.0.0-beta.2&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">compile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;org.webjars:font-awesome:4.7.0&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">compile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;org.webjars:bootstrap-glyphicons:bdd2cbfba0&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">runtime&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;mysql:mysql-connector-java&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">runtime&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;org.springframework.boot:spring-boot-starter-tomcat&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">testCompile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;org.springframework.boot:spring-boot-starter-test&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">testCompile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;org.springframework.security:spring-security-test&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">// 添加 task 用于生成 Jacoco 测试结果
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">&lt;/span>&lt;span style="color:#c1abea">task&lt;/span> &lt;span style="color:#00b1f7">codeCoverageReport&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#f5a40d">type:&lt;/span> &lt;span style="color:#c1abea">JacocoReport&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8a93a5;font-style:italic">// 需指定生成的类文件位置和源文件位置
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">&lt;/span> &lt;span style="color:#c1abea">classDirectories&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">files&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;build/classes&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">sourceDirectories&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">files&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;src/main/java&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">executionData&lt;/span> &lt;span style="color:#00b1f7">fileTree&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#c1abea">project&lt;/span>&lt;span style="color:#c7bf54">.&lt;/span>&lt;span style="color:#b3d23c">rootDir&lt;/span>&lt;span style="color:#c7bf54">.&lt;/span>&lt;span style="color:#b3d23c">absolutePath&lt;/span>&lt;span style="color:#c7bf54">).&lt;/span>&lt;span style="color:#b3d23c">include&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#63c381">&amp;#34;**/build/jacoco/*.exec&amp;#34;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">subprojects&lt;/span>&lt;span style="color:#c7bf54">.&lt;/span>&lt;span style="color:#b3d23c">each&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">sourceSets&lt;/span> &lt;span style="color:#c1abea">it&lt;/span>&lt;span style="color:#c7bf54">.&lt;/span>&lt;span style="color:#b3d23c">sourceSets&lt;/span>&lt;span style="color:#c7bf54">.&lt;/span>&lt;span style="color:#b3d23c">main&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8a93a5;font-style:italic">// 生成的报告类型包括 xml/html/csv
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">&lt;/span> &lt;span style="color:#c1abea">reports&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">xml&lt;/span>&lt;span style="color:#c7bf54">.&lt;/span>&lt;span style="color:#b3d23c">enabled&lt;/span> &lt;span style="color:#b756ff;font-weight:bold">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">xml&lt;/span>&lt;span style="color:#c7bf54">.&lt;/span>&lt;span style="color:#b3d23c">destination&lt;/span> &lt;span style="color:#63c381">&amp;#34;${buildDir}/reports/jacoco/report.xml&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">html&lt;/span>&lt;span style="color:#c7bf54">.&lt;/span>&lt;span style="color:#b3d23c">enabled&lt;/span> &lt;span style="color:#b756ff;font-weight:bold">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">csv&lt;/span>&lt;span style="color:#c7bf54">.&lt;/span>&lt;span style="color:#b3d23c">enabled&lt;/span> &lt;span style="color:#b756ff;font-weight:bold">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">codeCoverageReport&lt;/span>&lt;span style="color:#c7bf54">.&lt;/span>&lt;span style="color:#b3d23c">dependsOn&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">subprojects&lt;/span>&lt;span style="color:#c7bf54">*.&lt;/span>&lt;span style="color:#b3d23c">test&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">check&lt;/span>&lt;span style="color:#c7bf54">.&lt;/span>&lt;span style="color:#b3d23c">dependsOn&lt;/span> &lt;span style="color:#c1abea">codeCoverageReport&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="生成测试报告">生成测试报告&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-groovy" data-lang="groovy">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">gradle&lt;/span> &lt;span style="color:#c1abea">check&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">gradle&lt;/span> &lt;span style="color:#c1abea">codeCoverageReport&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>此时在 &lt;code>build/reports/jacoco&lt;/code> 下生成 Jacoco 的测试报告&lt;/p></description></item><item><title>Spring Boot Mail Could not connect to SMTP host</title><link>https://blog.hellowood.dev/posts/spring-boot-mail-could-not-connect-to-smtp-host/</link><pubDate>Sun, 31 Dec 2017 23:57:39 +0000</pubDate><guid>https://blog.hellowood.dev/posts/spring-boot-mail-could-not-connect-to-smtp-host/</guid><description>&lt;blockquote>
&lt;p>如果使用了 SSL 连接请添加配置：&lt;code>spring.mail.properties.mail.smtp.ssl.enable=true&lt;/code>
可以参考 &lt;a href="https://stackoverflow.com/questions/31721298/spring-boot-1-2-5-release-sending-e-mail-via-gmail-smtp">https://stackoverflow.com/questions/31721298/spring-boot-1-2-5-release-sending-e-mail-via-gmail-smtp&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;blockquote>
&lt;p>在使用 Spring Boot 发送邮件时遇到了无法连接服务器的问题，使用的是阿里云的邮件服务，配置如下：&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>application.properties&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-properties" data-lang="properties">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.mail.host&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">smtpdm.aliyun.com&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.mail.port&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">465&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.mail.username&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">username&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.mail.password&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">password&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.mail.properties.smtp.auth&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.mail.properties.smtp.starttls.enable&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>MailUtil.java：&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">org.slf4j.Logger&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">org.slf4j.LoggerFactory&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">org.springframework.beans.factory.annotation.Autowired&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">org.springframework.mail.MailException&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">org.springframework.mail.SimpleMailMessage&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">org.springframework.mail.javamail.JavaMailSender&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">org.springframework.stereotype.Component&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#76a9f9">org.thymeleaf.TemplateEngine&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Component&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c678dd">class&lt;/span> &lt;span style="color:#76a9f9">MailUtil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">private&lt;/span> &lt;span style="color:#c678dd">final&lt;/span> &lt;span style="color:#c1abea">Logger&lt;/span> &lt;span style="color:#c1abea">logger&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">LoggerFactory&lt;/span>.&lt;span style="color:#b3d23c">getLogger&lt;/span>(&lt;span style="color:#c1abea">getClass&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Autowired&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">JavaMailSender&lt;/span> &lt;span style="color:#c1abea">mailSender&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Autowired&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">TemplateEngine&lt;/span> &lt;span style="color:#c1abea">templateEngine&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#ef8383">void&lt;/span> &lt;span style="color:#00b1f7">sendSimpleEmail&lt;/span>(&lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">deliver&lt;/span>, &lt;span style="color:#c1abea">String&lt;/span>&lt;span style="color:#c7bf54">[]&lt;/span> &lt;span style="color:#c1abea">receiver&lt;/span>, &lt;span style="color:#c1abea">String&lt;/span>&lt;span style="color:#c7bf54">[]&lt;/span> &lt;span style="color:#c1abea">carbonCopy&lt;/span>, &lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">subject&lt;/span>, &lt;span style="color:#c1abea">String&lt;/span> &lt;span style="color:#c1abea">content&lt;/span>) &lt;span style="color:#c678dd">throws&lt;/span> &lt;span style="color:#c1abea">ServiceException&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ef8383">long&lt;/span> &lt;span style="color:#c1abea">startTimestamp&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c1abea">System&lt;/span>.&lt;span style="color:#b3d23c">currentTimeMillis&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">logger&lt;/span>.&lt;span style="color:#b3d23c">info&lt;/span>(&lt;span style="color:#98c379">&amp;#34;Start send mail ... &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">SimpleMailMessage&lt;/span> &lt;span style="color:#c1abea">message&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">SimpleMailMessage&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">message&lt;/span>.&lt;span style="color:#b3d23c">setFrom&lt;/span>(&lt;span style="color:#c1abea">deliver&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">message&lt;/span>.&lt;span style="color:#b3d23c">setTo&lt;/span>(&lt;span style="color:#c1abea">receiver&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">message&lt;/span>.&lt;span style="color:#b3d23c">setCc&lt;/span>(&lt;span style="color:#c1abea">carbonCopy&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">message&lt;/span>.&lt;span style="color:#b3d23c">setSubject&lt;/span>(&lt;span style="color:#c1abea">subject&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">message&lt;/span>.&lt;span style="color:#b3d23c">setText&lt;/span>(&lt;span style="color:#c1abea">content&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">mailSender&lt;/span>.&lt;span style="color:#b3d23c">send&lt;/span>(&lt;span style="color:#c1abea">message&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">logger&lt;/span>.&lt;span style="color:#b3d23c">info&lt;/span>(&lt;span style="color:#98c379">&amp;#34;Send mail success, cost {} million seconds&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">System&lt;/span>.&lt;span style="color:#b3d23c">currentTimeMillis&lt;/span>() &lt;span style="color:#c7bf54">-&lt;/span> &lt;span style="color:#c1abea">startTimestamp&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#c678dd">catch&lt;/span> (&lt;span style="color:#c1abea">MailException&lt;/span> &lt;span style="color:#c1abea">e&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">logger&lt;/span>.&lt;span style="color:#b3d23c">error&lt;/span>(&lt;span style="color:#98c379">&amp;#34;Send mail failed, error message is : {} \n&amp;#34;&lt;/span>, &lt;span style="color:#c1abea">e&lt;/span>.&lt;span style="color:#b3d23c">getMessage&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">e&lt;/span>.&lt;span style="color:#b3d23c">printStackTrace&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">throw&lt;/span> &lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">ServiceException&lt;/span>(&lt;span style="color:#c1abea">e&lt;/span>.&lt;span style="color:#b3d23c">getMessage&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>但是邮件发送一直失败，异常信息如下：&lt;/p></description></item><item><title>Spring Boot 发送邮件</title><link>https://blog.hellowood.dev/posts/spring-boot-%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/</link><pubDate>Sun, 31 Dec 2017 23:55:11 +0000</pubDate><guid>https://blog.hellowood.dev/posts/spring-boot-%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/</guid><description>&lt;blockquote>
&lt;p>在 Spring Boot 中使用 Spring Mail 发送邮件&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>项目地址：&lt;a href="https://github.com/helloworlde/SpringBoot-Mail">https://github.com/helloworlde/SpringBoot-Mail&lt;/a>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="添加-spring-mail-依赖">添加 Spring Mail 依赖&lt;/h2>
&lt;ul>
&lt;li>build.gradle&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> compile(&amp;#39;org.springframework.boot:spring-boot-starter-mail&amp;#39;)
&lt;/code>&lt;/pre>&lt;h2 id="添加配置文件">添加配置文件&lt;/h2>
&lt;ul>
&lt;li>application.properties&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> spring.mail.host=smtpdm.aliyun.com
 spring.mail.port=465
 spring.mail.username=&amp;#34;你的邮箱&amp;#34;
 spring.mail.password=&amp;#34;你的密码&amp;#34;
 spring.mail.properties.smtp.auth=true
 spring.mail.properties.smtp.starttls.enable=true
 spring.mail.properties.smtp.starttls.required=true
 spring.mail.properties.mail.smtp.ssl.enable=true
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="发送简单邮件">发送简单邮件&lt;/h2>
&lt;ul>
&lt;li>MailUtil.java&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.mail.MailException;
 import org.springframework.mail.SimpleMailMessage;
 import org.springframework.mail.javamail.JavaMailSender;
 import org.springframework.stereotype.Component;
 import org.thymeleaf.TemplateEngine;

 @Component
 public class MailUtil {

 private final Logger logger = LoggerFactory.getLogger(getClass());

 @Autowired
 JavaMailSender mailSender;

 @Autowired
 TemplateEngine templateEngine;

 public void sendSimpleEmail(String deliver, String[] receiver, String[] carbonCopy, String subject, String content) throws ServiceException {

 long startTimestamp = System.currentTimeMillis();
 logger.info(&amp;#34;Start send mail ... &amp;#34;);

 try {
 SimpleMailMessage message = new SimpleMailMessage();
 message.setFrom(deliver);
 message.setTo(receiver);
 message.setCc(carbonCopy);
 message.setSubject(subject);
 message.setText(content);
 mailSender.send(message);
 logger.info(&amp;#34;Send mail success, cost {} million seconds&amp;#34;, System.currentTimeMillis() - startTimestamp);
 } catch (MailException e) {
 logger.error(&amp;#34;Send mail failed, error message is : {} \n&amp;#34;, e.getMessage());
 e.printStackTrace();
 throw new ServiceException(e.getMessage());
 }
 }

 }
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>发送邮件&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> @Test
 public void sendSimpleEmail() {
 String deliver = &amp;#34;你的邮件地址&amp;#34;;
 String[] receiver = {&amp;#34;接收者邮件地址&amp;#34;};
 String[] carbonCopy = {&amp;#34;抄送者邮件地址&amp;#34;};
 String subject = &amp;#34;This is a simple email&amp;#34;;
 String content = &amp;#34;This is a simple content&amp;#34;;

 try {
 mailUtil.sendSimpleEmail(deliver, receiver, carbonCopy, subject, content);
 } catch (Exception e) {
 assertFalse(&amp;#34;Send simple email failed&amp;#34;, true);
 e.printStackTrace();
 }
 }
&lt;/code>&lt;/pre>&lt;h2 id="发送-html-内容的邮件">发送 HTML 内容的邮件&lt;/h2>
&lt;ul>
&lt;li>MailUtil.java&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> import cn.com.hellowood.mail.util.ServiceException;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.mail.javamail.JavaMailSender;
 import org.springframework.mail.javamail.MimeMessageHelper;
 import org.springframework.stereotype.Component;

 import javax.mail.MessagingException;
 import javax.mail.internet.MimeMessage;

 @Component
 public class MailUtil {

 private final Logger logger = LoggerFactory.getLogger(getClass());

 @Autowired
 JavaMailSender mailSender;

 public void sendHtmlEmail(String deliver, String[] receiver, String[] carbonCopy, String subject, String content, boolean isHtml) throws ServiceException {
 long startTimestamp = System.currentTimeMillis();
 logger.info(&amp;#34;Start send email ...&amp;#34;);

 try {
 MimeMessage message = mailSender.createMimeMessage();
 MimeMessageHelper messageHelper = new MimeMessageHelper(message);

 messageHelper.setFrom(deliver);
 messageHelper.setTo(receiver);
 messageHelper.setCc(carbonCopy);
 messageHelper.setSubject(subject);
 messageHelper.setText(content, isHtml);

 mailSender.send(message);
 logger.info(&amp;#34;Send email success, cost {} million seconds&amp;#34;, System.currentTimeMillis() - startTimestamp);
 } catch (MessagingException e) {
 logger.error(&amp;#34;Send email failed, error message is {} \n&amp;#34;, e.getMessage());
 e.printStackTrace();
 throw new ServiceException(e.getMessage());
 }
 }

 }
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>发送 HTML 邮件&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> @Test
 public void sendHtmlEmail() {
 String deliver = &amp;#34;你的邮件地址&amp;#34;;
 String[] receiver = {&amp;#34;接收者邮件地址&amp;#34;};
 String[] carbonCopy = {&amp;#34;抄送者邮件地址&amp;#34;};
 String subject = &amp;#34;This is a HTML content email&amp;#34;;
 String content = &amp;#34;&amp;lt;h1&amp;gt;This is HTML content email &amp;lt;/h1&amp;gt;&amp;#34;;

 boolean isHtml = true;
 try {
 mailUtil.sendHtmlEmail(deliver, receiver, carbonCopy, subject, content, isHtml);
 } catch (ServiceException e) {
 assertFalse(&amp;#34;Send HTML content email failed&amp;#34;, true);
 e.printStackTrace();
 }
 }
&lt;/code>&lt;/pre>&lt;h2 id="发送带附件的邮件">发送带附件的邮件&lt;/h2>
&lt;ul>
&lt;li>MailUtil.java&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.mail.javamail.JavaMailSender;
 import org.springframework.mail.javamail.MimeMessageHelper;
 import org.springframework.stereotype.Component;

 import javax.mail.MessagingException;
 import javax.mail.internet.MimeMessage;
 import java.io.File;

 @Component
 public class MailUtil {

 private final Logger logger = LoggerFactory.getLogger(getClass());

 @Autowired
 JavaMailSender mailSender;

 public void sendAttachmentFileEmail(String deliver, String[] receiver, String[] carbonCopy, String subject, String content, boolean isHtml, String fileName, File file) throws ServiceException {
 long startTimestamp = System.currentTimeMillis();
 logger.info(&amp;#34;Start send mail ...&amp;#34;);

 try {
 MimeMessage message = mailSender.createMimeMessage();
 MimeMessageHelper messageHelper = new MimeMessageHelper(message, true);

 messageHelper.setFrom(deliver);
 messageHelper.setTo(receiver);
 messageHelper.setCc(carbonCopy);
 messageHelper.setSubject(subject);
 messageHelper.setText(content, isHtml);
 messageHelper.addAttachment(fileName, file);

 mailSender.send(message);
 logger.info(&amp;#34;Send mail success, cost {} million seconds&amp;#34;, System.currentTimeMillis() - startTimestamp);
 } catch (MessagingException e) {
 logger.error(&amp;#34;Send mail failed, error message is {}\n&amp;#34;, e.getMessage());
 e.printStackTrace();
 throw new ServiceException(e.getMessage());
 }
 }

 }
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>发送带附件的邮件&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> @Test
 public void sendAttachmentFileEmail() {
 String FILE_PATH = &amp;#34;文件地址&amp;#34;;
 String deliver = &amp;#34;你的邮件地址&amp;#34;;
 String[] receiver = {&amp;#34;接收者邮件地址&amp;#34;};
 String[] carbonCopy = {&amp;#34;抄送者邮件地址&amp;#34;};
 String subject = &amp;#34;This is an attachment file email&amp;#34;;
 String content = &amp;#34;&amp;lt;h2&amp;gt;This is an attachment file email&amp;lt;/h2&amp;gt;&amp;#34;;
 boolean isHtml = true;

 File file = new File(FILE_PATH);
 String fileName = FILE_PATH.substring(FILE_PATH.lastIndexOf(File.separator));

 try {
 mailUtil.sendAttachmentFileEmail(deliver, receiver, carbonCopy, subject, content, isHtml, fileName, file);
 } catch (ServiceException e) {
 assertFalse(&amp;#34;Send attachment file email failed&amp;#34;, true);
 e.printStackTrace();
 }
 }
&lt;/code>&lt;/pre>&lt;h2 id="发送模板邮件">发送模板邮件&lt;/h2>
&lt;blockquote>
&lt;p>使用 Thymeleaf 作为模板&lt;/p></description></item><item><title>Spring Boot MyBatis 动态数据源常见问题和解决方法</title><link>https://blog.hellowood.dev/posts/spring-boot-mybatis-%E5%8A%A8%E6%80%81%E6%95%B0%E6%8D%AE%E6%BA%90%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</link><pubDate>Sun, 31 Dec 2017 23:45:52 +0000</pubDate><guid>https://blog.hellowood.dev/posts/spring-boot-mybatis-%E5%8A%A8%E6%80%81%E6%95%B0%E6%8D%AE%E6%BA%90%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</guid><description>&lt;blockquote>
&lt;p>相关项目地址:&lt;a href="https://github.com/helloworlde/SpringBoot-DynamicDataSource">https://github.com/helloworlde/SpringBoot-DynamicDataSource&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h2 id="1-orgapacheibatisbindingbindingexception-invalid-bound-statement-not-found">1. org.apache.ibatis.binding.BindingException: Invalid bound statement (not found)&lt;/h2>
&lt;blockquote>
&lt;p>在使用了动态数据源后遇到了该问题，从错误信息来看是因为没有找到 &lt;code>*.xml&lt;/code> 文件而导致的，但是在配置文件中
确实添加了相关的配置，这种错误的原因是因为设置数据源后没有设置&lt;code>SqlSessionFactoryBean&lt;/code>的 &lt;code>typeAliasesPackage&lt;/code>
和&lt;code>mapperLocations&lt;/code>属性或属性无效导致的；&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>解决方法：&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>如果在应用的入口类中添加了 &lt;code>@SpringBootApplication(exclude = DataSourceAutoConfiguration.class)&lt;/code>,
在&lt;code>DataSourceConfigure&lt;/code>类的中设置相关属性：&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Bean&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@ConfigurationProperties&lt;/span>(&lt;span style="color:#c1abea">prefix&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;mybatis&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">SqlSessionFactoryBean&lt;/span> &lt;span style="color:#00b1f7">sqlSessionFactoryBean&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">SqlSessionFactoryBean&lt;/span> &lt;span style="color:#c1abea">sqlSessionFactoryBean&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">SqlSessionFactoryBean&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">sqlSessionFactoryBean&lt;/span>.&lt;span style="color:#b3d23c">setDataSource&lt;/span>(&lt;span style="color:#c1abea">dynamicDataSource&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c1abea">sqlSessionFactoryBean&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>或者直接配置(不推荐该方式)：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">@Bean&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c1abea">SqlSessionFactoryBean&lt;/span> &lt;span style="color:#00b1f7">sqlSessionFactoryBean&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">SqlSessionFactoryBean&lt;/span> &lt;span style="color:#c1abea">sqlSessionFactoryBean&lt;/span> &lt;span style="color:#c7bf54">=&lt;/span> &lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">SqlSessionFactoryBean&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">sqlSessionFactoryBean&lt;/span>.&lt;span style="color:#b3d23c">setTypeAliasesPackage&lt;/span>(&lt;span style="color:#98c379">&amp;#34;typeAliasesPackage&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">sqlSessionFactoryBean&lt;/span>.&lt;span style="color:#b3d23c">setMapperLocations&lt;/span>(&lt;span style="color:#c678dd">new&lt;/span> &lt;span style="color:#c1abea">PathMatchingResourcePatternResolver&lt;/span>().&lt;span style="color:#b3d23c">getResources&lt;/span>(&lt;span style="color:#98c379">&amp;#34;mapperLocations&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">sqlSessionFactoryBean&lt;/span>.&lt;span style="color:#b3d23c">setDataSource&lt;/span>(&lt;span style="color:#c1abea">dynamicDataSource&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#c1abea">sqlSessionFactoryBean&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="2-consider-marking-one-of-the-beans-as-primary-updating-the-consumer-to-accept-multiple-beans-or-using-qualifier-to-identify-the-bean-that-should-be-consumed">2. Consider marking one of the beans as @Primary, updating the consumer to accept multiple beans, or using @Qualifier to identify the bean that should be consumed&lt;/h2>
&lt;blockquote>
&lt;p>该异常在错误信息中已经说的很清楚了，是因为有多个 &lt;code>DataSource&lt;/code> 的实例，所以无法确定该引用那个实例&lt;/p></description></item><item><title>Spring Boot MyBatis Druid 多数据源、动态数据源切换</title><link>https://blog.hellowood.dev/posts/spring-boot-mybatis%E5%A4%9A%E6%95%B0%E6%8D%AE%E6%BA%90%E5%8A%A8%E6%80%81%E6%95%B0%E6%8D%AE%E6%BA%90%E5%88%87%E6%8D%A2/</link><pubDate>Sun, 31 Dec 2017 23:39:24 +0000</pubDate><guid>https://blog.hellowood.dev/posts/spring-boot-mybatis%E5%A4%9A%E6%95%B0%E6%8D%AE%E6%BA%90%E5%8A%A8%E6%80%81%E6%95%B0%E6%8D%AE%E6%BA%90%E5%88%87%E6%8D%A2/</guid><description>&lt;ul>
&lt;li>项目地址：&lt;a href="https://github.com/helloworlde/SpringBoot-DynamicDataSource">https://github.com/helloworlde/SpringBoot-DynamicDataSource&lt;/a>&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>本项目使用 Spring Boot 和 MyBatis 实现多数据源，动态数据源的切换；有多种不同的实现方式，在学习的过程中发现没有文章将这些方式和常见的问题集中处理，所以将常用的方式和常见的问题都写在了在本项目的不同分支上：&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>&lt;a href="https://github.com/helloworlde/SpringBoot-DynamicDataSource">master&lt;/a>: 使用了多数据源的 RESTful API 接口，使用 Druid 实现了 DAO 层数据源动态切换和只读数据源负载均衡&lt;/li>
&lt;li>&lt;a href="https://github.com/helloworlde/SpringBoot-DynamicDataSource/tree/dev">dev&lt;/a>: 最简单的切面和注解方式实现的动态数据源切换&lt;/li>
&lt;li>&lt;a href="https://github.com/helloworlde/SpringBoot-DynamicDataSource/tree/druid">druid&lt;/a>: 通过切面和注解方式实现的使用 Druid 连接池的动态数据源切换&lt;/li>
&lt;li>&lt;a href="https://github.com/helloworlde/SpringBoot-DynamicDataSource/tree/aspect_dao">aspect_dao&lt;/a>: 通过切面实现的 DAO 层的动态数据源切换&lt;/li>
&lt;li>&lt;a href="https://github.com/helloworlde/SpringBoot-DynamicDataSource/tree/roundrobin">roundrobin&lt;/a>: 通过切面使用轮询方式实现的只读数据源负载均衡&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>以上分支都是基于 dev 分支修改或扩充而来，基本涵盖了常用的多数据源动态切换的方式，基本的原理都一样，都是通过切面根据不同的条件在执行数据库操作前切换数据源&lt;/p>
&lt;/blockquote>
&lt;h3 id="在使用的过程中基本踩遍了所有动态数据源切换的坑将常见的一些坑和解决方法写在了-issueshttpsgithubcomhelloworldespringboot-dynamicdatasourceblobmasterissuesmd-里面">在使用的过程中基本踩遍了所有动态数据源切换的坑，将常见的一些坑和解决方法写在了 &lt;a href="https://github.com/helloworlde/SpringBoot-DynamicDataSource/blob/master/Issues.md">Issues&lt;/a> 里面&lt;/h3>
&lt;blockquote>
&lt;p>该项目使用了一个可写数据源和多个只读数据源，为了减少数据库压力，使用轮循的方式选择只读数据源；考虑到在一个 Service 中同时会有读和写的操作，所以本应用使用 AOP 切面通过 DAO 层的方法名切换只读数据源；但这种方式要求数据源主从一致，并且应当避免在同一个 Service 方法中写入后立即查询，如果必须在执行写入操作后立即读取，应当在 Service 方法上添加 &lt;code>@Transactional&lt;/code> 注解以保证使用主数据源&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>需要注意的是，使用 DAO 层切面后不应该在 Service 类层面上加 &lt;code>@Transactional&lt;/code> 注解，而应该添加在方法上，这也是 Spring 推荐的做法&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>动态切换数据源依赖 &lt;code>configuration&lt;/code> 包下的4个类来实现，分别是：&lt;/p>
&lt;ul>
&lt;li>DataSourceRoutingDataSource.java&lt;/li>
&lt;li>DataSourceConfigurer.java&lt;/li>
&lt;li>DynamicDataSourceContextHolder.java&lt;/li>
&lt;li>DynamicDataSourceAspect.java&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;hr>
&lt;h2 id="添加依赖">添加依赖&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-groovy" data-lang="groovy">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c1abea">dependencies&lt;/span> &lt;span style="color:#c7bf54">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">compile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.1&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">compile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;org.springframework.boot:spring-boot-starter-web&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">compile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;org.springframework.boot:spring-boot-starter-aop&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">compile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;com.alibaba:druid-spring-boot-starter:1.1.6&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">runtime&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;mysql:mysql-connector-java&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">testCompile&lt;/span>&lt;span style="color:#c7bf54">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;org.springframework.boot:spring-boot-starter-test&amp;#39;&lt;/span>&lt;span style="color:#c7bf54">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c7bf54">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="创建数据库及表">创建数据库及表&lt;/h2>
&lt;ul>
&lt;li>分别创建数据库&lt;code>product_master&lt;/code>, &lt;code>product_slave_alpha&lt;/code>, &lt;code>product_slave_beta&lt;/code>, &lt;code>product_slave_gamma&lt;/code>&lt;/li>
&lt;li>在以上数据库中分别创建表 &lt;code>product&lt;/code>，并插入不同数据&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">DROP&lt;/span> &lt;span style="color:#c678dd">DATABASE&lt;/span> &lt;span style="color:#c678dd">IF&lt;/span> &lt;span style="color:#c678dd">EXISTS&lt;/span> &lt;span style="color:#c1abea">product_master&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">CREATE&lt;/span> &lt;span style="color:#c678dd">DATABASE&lt;/span> &lt;span style="color:#c1abea">product_master&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">CREATE&lt;/span> &lt;span style="color:#c678dd">TABLE&lt;/span> &lt;span style="color:#c1abea">product_master&lt;/span>.&lt;span style="color:#c1abea">product&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">id&lt;/span> &lt;span style="color:#ef8383">INT&lt;/span> &lt;span style="color:#c678dd">PRIMARY&lt;/span> &lt;span style="color:#c678dd">KEY&lt;/span> &lt;span style="color:#c1abea">AUTO_INCREMENT&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">name&lt;/span> &lt;span style="color:#ef8383">VARCHAR&lt;/span>(&lt;span style="color:#d19a66">50&lt;/span>) &lt;span style="color:#c678dd">NOT&lt;/span> &lt;span style="color:#c678dd">NULL&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">price&lt;/span> &lt;span style="color:#c1abea">DOUBLE&lt;/span>(&lt;span style="color:#d19a66">10&lt;/span>,&lt;span style="color:#d19a66">2&lt;/span>) &lt;span style="color:#c678dd">NOT&lt;/span> &lt;span style="color:#c678dd">NULL&lt;/span> &lt;span style="color:#c678dd">DEFAULT&lt;/span> &lt;span style="color:#d19a66">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">INSERT&lt;/span> &lt;span style="color:#c678dd">INTO&lt;/span> &lt;span style="color:#c1abea">product_master&lt;/span>.&lt;span style="color:#c1abea">product&lt;/span> (&lt;span style="color:#c1abea">name&lt;/span>, &lt;span style="color:#c1abea">price&lt;/span>) &lt;span style="color:#c678dd">VALUES&lt;/span>(&lt;span style="color:#98c379">&amp;#39;master&amp;#39;&lt;/span>, &lt;span style="color:#98c379">&amp;#39;1&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">DROP&lt;/span> &lt;span style="color:#c678dd">DATABASE&lt;/span> &lt;span style="color:#c678dd">IF&lt;/span> &lt;span style="color:#c678dd">EXISTS&lt;/span> &lt;span style="color:#c1abea">product_slave_alpha&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">CREATE&lt;/span> &lt;span style="color:#c678dd">DATABASE&lt;/span> &lt;span style="color:#c1abea">product_slave_alpha&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">CREATE&lt;/span> &lt;span style="color:#c678dd">TABLE&lt;/span> &lt;span style="color:#c1abea">product_slave_alpha&lt;/span>.&lt;span style="color:#c1abea">product&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">id&lt;/span> &lt;span style="color:#ef8383">INT&lt;/span> &lt;span style="color:#c678dd">PRIMARY&lt;/span> &lt;span style="color:#c678dd">KEY&lt;/span> &lt;span style="color:#c1abea">AUTO_INCREMENT&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">name&lt;/span> &lt;span style="color:#ef8383">VARCHAR&lt;/span>(&lt;span style="color:#d19a66">50&lt;/span>) &lt;span style="color:#c678dd">NOT&lt;/span> &lt;span style="color:#c678dd">NULL&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">price&lt;/span> &lt;span style="color:#c1abea">DOUBLE&lt;/span>(&lt;span style="color:#d19a66">10&lt;/span>,&lt;span style="color:#d19a66">2&lt;/span>) &lt;span style="color:#c678dd">NOT&lt;/span> &lt;span style="color:#c678dd">NULL&lt;/span> &lt;span style="color:#c678dd">DEFAULT&lt;/span> &lt;span style="color:#d19a66">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">INSERT&lt;/span> &lt;span style="color:#c678dd">INTO&lt;/span> &lt;span style="color:#c1abea">product_slave_alpha&lt;/span>.&lt;span style="color:#c1abea">product&lt;/span> (&lt;span style="color:#c1abea">name&lt;/span>, &lt;span style="color:#c1abea">price&lt;/span>) &lt;span style="color:#c678dd">VALUES&lt;/span>(&lt;span style="color:#98c379">&amp;#39;slaveAlpha&amp;#39;&lt;/span>, &lt;span style="color:#98c379">&amp;#39;1&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">DROP&lt;/span> &lt;span style="color:#c678dd">DATABASE&lt;/span> &lt;span style="color:#c678dd">IF&lt;/span> &lt;span style="color:#c678dd">EXISTS&lt;/span> &lt;span style="color:#c1abea">product_slave_beta&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">CREATE&lt;/span> &lt;span style="color:#c678dd">DATABASE&lt;/span> &lt;span style="color:#c1abea">product_slave_beta&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">CREATE&lt;/span> &lt;span style="color:#c678dd">TABLE&lt;/span> &lt;span style="color:#c1abea">product_slave_beta&lt;/span>.&lt;span style="color:#c1abea">product&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">id&lt;/span> &lt;span style="color:#ef8383">INT&lt;/span> &lt;span style="color:#c678dd">PRIMARY&lt;/span> &lt;span style="color:#c678dd">KEY&lt;/span> &lt;span style="color:#c1abea">AUTO_INCREMENT&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">name&lt;/span> &lt;span style="color:#ef8383">VARCHAR&lt;/span>(&lt;span style="color:#d19a66">50&lt;/span>) &lt;span style="color:#c678dd">NOT&lt;/span> &lt;span style="color:#c678dd">NULL&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">price&lt;/span> &lt;span style="color:#c1abea">DOUBLE&lt;/span>(&lt;span style="color:#d19a66">10&lt;/span>,&lt;span style="color:#d19a66">2&lt;/span>) &lt;span style="color:#c678dd">NOT&lt;/span> &lt;span style="color:#c678dd">NULL&lt;/span> &lt;span style="color:#c678dd">DEFAULT&lt;/span> &lt;span style="color:#d19a66">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">INSERT&lt;/span> &lt;span style="color:#c678dd">INTO&lt;/span> &lt;span style="color:#c1abea">product_slave_beta&lt;/span>.&lt;span style="color:#c1abea">product&lt;/span> (&lt;span style="color:#c1abea">name&lt;/span>, &lt;span style="color:#c1abea">price&lt;/span>) &lt;span style="color:#c678dd">VALUES&lt;/span>(&lt;span style="color:#98c379">&amp;#39;slaveBeta&amp;#39;&lt;/span>, &lt;span style="color:#98c379">&amp;#39;1&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">DROP&lt;/span> &lt;span style="color:#c678dd">DATABASE&lt;/span> &lt;span style="color:#c678dd">IF&lt;/span> &lt;span style="color:#c678dd">EXISTS&lt;/span> &lt;span style="color:#c1abea">product_slave_gamma&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">CREATE&lt;/span> &lt;span style="color:#c678dd">DATABASE&lt;/span> &lt;span style="color:#c1abea">product_slave_gamma&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">CREATE&lt;/span> &lt;span style="color:#c678dd">TABLE&lt;/span> &lt;span style="color:#c1abea">product_slave_gamma&lt;/span>.&lt;span style="color:#c1abea">product&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">id&lt;/span> &lt;span style="color:#ef8383">INT&lt;/span> &lt;span style="color:#c678dd">PRIMARY&lt;/span> &lt;span style="color:#c678dd">KEY&lt;/span> &lt;span style="color:#c1abea">AUTO_INCREMENT&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">name&lt;/span> &lt;span style="color:#ef8383">VARCHAR&lt;/span>(&lt;span style="color:#d19a66">50&lt;/span>) &lt;span style="color:#c678dd">NOT&lt;/span> &lt;span style="color:#c678dd">NULL&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">price&lt;/span> &lt;span style="color:#c1abea">DOUBLE&lt;/span>(&lt;span style="color:#d19a66">10&lt;/span>,&lt;span style="color:#d19a66">2&lt;/span>) &lt;span style="color:#c678dd">NOT&lt;/span> &lt;span style="color:#c678dd">NULL&lt;/span> &lt;span style="color:#c678dd">DEFAULT&lt;/span> &lt;span style="color:#d19a66">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">INSERT&lt;/span> &lt;span style="color:#c678dd">INTO&lt;/span> &lt;span style="color:#c1abea">product_slave_gamma&lt;/span>.&lt;span style="color:#c1abea">product&lt;/span> (&lt;span style="color:#c1abea">name&lt;/span>, &lt;span style="color:#c1abea">price&lt;/span>) &lt;span style="color:#c678dd">VALUES&lt;/span>(&lt;span style="color:#98c379">&amp;#39;slaveGamma&amp;#39;&lt;/span>, &lt;span style="color:#98c379">&amp;#39;1&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="配置数据源">配置数据源&lt;/h2>
&lt;ul>
&lt;li>application.properties&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-properties" data-lang="properties">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic"># Master datasource config&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.master.name&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">master&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.master.driver-class-name&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">com.mysql.jdbc.Driver&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.master.url&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">jdbc:mysql://localhost/product_master?useSSL=false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.master.port&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">3306&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.master.username&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.master.password&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">123456&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic"># SlaveAlpha datasource config&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.slave-alpha.name&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">SlaveAlpha&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.slave-alpha.driver-class-name&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">com.mysql.jdbc.Driver&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.slave-alpha.url&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">jdbc:mysql://localhost/product_slave_alpha?useSSL=false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.slave-alpha.port&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">3306&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.slave-alpha.username&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.slave-alpha.password&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">123456&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic"># SlaveBeta datasource config&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.slave-beta.name&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">SlaveBeta&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.slave-beta.driver-class-name&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">com.mysql.jdbc.Driver&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.slave-beta.url&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">jdbc:mysql://localhost/product_slave_beta?useSSL=false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.slave-beta.port&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">3306&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.slave-beta.username&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.slave-beta.password&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">123456&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic"># SlaveGamma datasource config&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.slave-gamma.name&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">SlaveGamma&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.slave-gamma.driver-class-name&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">com.mysql.jdbc.Driver&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.slave-gamma.url&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">jdbc:mysql://localhost/product_slave_gamma?useSSL=false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.slave-gamma.port&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">3306&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.slave-gamma.username&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.slave-gamma.password&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">123456&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic"># Druid dataSource config&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.type&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">com.alibaba.druid.pool.DruidDataSource&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.initial-size&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.max-active&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">20&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.min-idle&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.max-wait&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">60000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.pool-prepared-statements&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.validation-query&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">SELECT 1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.validation-query-timeout&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">30000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.test-on-borrow&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.test-on-return&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.test-while-idle&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">#spring.datasource.druid.time-between-eviction-runs-millis=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">#spring.datasource.druid.min-evictable-idle-time-millis=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">#spring.datasource.druid.max-evictable-idle-time-millis=10000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic"># Druid stat filter config&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.filters&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">stat,wall,log4j&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.web-stat-filter.enabled&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.web-stat-filter.url-pattern&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">/*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.web-stat-filter.exclusions&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.web-stat-filter.session-stat-enable&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.web-stat-filter.session-stat-max-count&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.web-stat-filter.principal-session-name&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">user&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">#spring.datasource.druid.web-stat-filter.principal-cookie-name=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.web-stat-filter.profile-enable&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.filter.stat.db-type&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">mysql&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.filter.stat.log-slow-sql&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.filter.stat.slow-sql-millis&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">1000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.filter.stat.merge-sql&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.filter.wall.enabled&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.filter.wall.config.delete-allow&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.filter.wall.config.drop-table-allow&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.filter.slf4j.enabled&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic"># Druid manage page config&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.stat-view-servlet.enabled&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.stat-view-servlet.url-pattern&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">/druid/*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.stat-view-servlet.reset-enable&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.stat-view-servlet.login-username&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">admin&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.stat-view-servlet.login-password&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">admin&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">#spring.datasource.druid.stat-view-servlet.allow=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">#spring.datasource.druid.stat-view-servlet.deny=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.use-global-data-source-stat&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic"># Druid AOP config&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.datasource.druid.aop-patterns&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">cn.com.hellowood.dynamicdatasource.service.*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">spring.aop.proxy-target-class&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic"># MyBatis config&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">mybatis.type-aliases-package&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">cn.com.hellowood.dynamicdatasource.mapper&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">mybatis.mapper-locations&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">mappers/**Mapper.xml&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b3d23c">server.port&lt;/span>&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#98c379">9999&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="配置数据源-1">配置数据源&lt;/h2>
&lt;ul>
&lt;li>DataSourceKey.java&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">package&lt;/span> &lt;span style="color:#76a9f9">cn.com.hellowood.dynamicdatasource.common&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">public&lt;/span> &lt;span style="color:#c678dd">enum&lt;/span> &lt;span style="color:#c1abea">DataSourceKey&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">master&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">slaveAlpha&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">slaveBeta&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c1abea">slaveGamma&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>DataSourceRoutingDataSource.java&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>该类继承自 &lt;code>AbstractRoutingDataSource&lt;/code> 类，在访问数据库时会调用该类的 &lt;code>determineCurrentLookupKey()&lt;/code> 方法获取数据库实例的 key&lt;/p></description></item></channel></rss>