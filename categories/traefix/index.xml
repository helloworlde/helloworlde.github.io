<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Traefix on HelloWood</title><link>https://blog.hellowood.dev/categories/traefix/</link><description>Recent content in Traefix on HelloWood</description><generator>Hugo</generator><language>cn</language><lastBuildDate>Tue, 17 Sep 2024 03:10:36 +0000</lastBuildDate><atom:link href="https://blog.hellowood.dev/categories/traefix/index.xml" rel="self" type="application/rss+xml"/><item><title>微服务网关 Traefik - Docker Swarm 使用</title><link>https://blog.hellowood.dev/posts/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3-traefik-docker-swarm-%E4%BD%BF%E7%94%A8/</link><pubDate>Sun, 24 Mar 2019 22:08:30 +0000</pubDate><guid>https://blog.hellowood.dev/posts/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3-traefik-docker-swarm-%E4%BD%BF%E7%94%A8/</guid><description>&lt;p>&lt;a href="https://docs.traefik.io/">traefik&lt;/a> 是一个用 Go 开发的适用于微服务的反向代理和负载均衡的网关；可以自动发现并代理服务，可以用 Kubernetes 或 Docker Swarm 等方式，支持使用 Eureka，Consul，Etcd，ZooKeeper 等注册中心&lt;/p>
&lt;h2 id="docker-swarm-使用">Docker Swarm 使用&lt;/h2>
&lt;h3 id="启动官方-demo">启动官方 Demo&lt;/h3>
&lt;ul>
&lt;li>docker-compose.yml&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">version&lt;/span>: &lt;span style="color:#63c381">&amp;#34;3&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">services&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">reverse-proxy&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">image&lt;/span>: &lt;span style="color:#98c379">traefik&lt;/span> &lt;span style="color:#8a93a5;font-style:italic"># The official Traefik docker image&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">command&lt;/span>: --&lt;span style="color:#98c379">api --docker&lt;/span> &lt;span style="color:#8a93a5;font-style:italic"># Enables the web UI and tells Traefik to listen to docker&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">ports&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#63c381">&amp;#34;80:80&amp;#34;&lt;/span> &lt;span style="color:#8a93a5;font-style:italic"># The HTTP port&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#63c381">&amp;#34;8080:8080&amp;#34;&lt;/span> &lt;span style="color:#8a93a5;font-style:italic"># The Web UI (enabled by --api)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">volumes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#98c379">/var/run/docker.sock:/var/run/docker.sock&lt;/span> &lt;span style="color:#8a93a5;font-style:italic"># So that Traefik can listen to the Docker events&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">whoami&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">image&lt;/span>: &lt;span style="color:#98c379">containous/whoami&lt;/span> &lt;span style="color:#8a93a5;font-style:italic"># A container that exposes an API to show its IP address&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">labels&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#63c381">&amp;#34;traefik.frontend.rule=Host:whoami.docker.localhost&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>启动&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>docker-compose up -d
&lt;/code>&lt;/pre>&lt;p>这样会启动一个 treafik 的 WebUI 和一个后端服务器&lt;/p></description></item></channel></rss>