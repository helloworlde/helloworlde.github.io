<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>HTML on HelloWood</title><link>https://blog.hellowood.dev/categories/html/</link><description>Recent content in HTML on HelloWood</description><generator>Hugo</generator><language>cn</language><lastBuildDate>Mon, 01 Jan 0001 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.hellowood.dev/categories/html/index.xml" rel="self" type="application/rss+xml"/><item><title>HTML中使用Ajax进行局部刷新页面</title><link>https://blog.hellowood.dev/posts/html%E4%B8%AD%E4%BD%BF%E7%94%A8ajax%E8%BF%9B%E8%A1%8C%E5%B1%80%E9%83%A8%E5%88%B7%E6%96%B0%E9%A1%B5%E9%9D%A2/</link><pubDate>Mon, 01 Jan 2018 11:38:52 +0000</pubDate><guid>https://blog.hellowood.dev/posts/html%E4%B8%AD%E4%BD%BF%E7%94%A8ajax%E8%BF%9B%E8%A1%8C%E5%B1%80%E9%83%A8%E5%88%B7%E6%96%B0%E9%A1%B5%E9%9D%A2/</guid><description>&lt;p>#HTML中使用Ajax进行局部刷新页面，使用JS将数据发送到后台&lt;/p>
&lt;hr>
&lt;p>##1.在HTML页面中使用js脚本将请求数据发送给后台servlet&lt;/p>
&lt;ul>
&lt;li>由按钮触发事件&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>&amp;lt;button id=&amp;#34;select&amp;#34; onclick=&amp;#34;queryInfos()&amp;#34;&amp;gt;查询&amp;lt;/button&amp;gt;
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>由js脚本对将数据发送到后台&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> var req = new XMLHttpRequest();
 function queryInfos() {
 //设置传送方式，对应的servlet或action路径，是否异步处理
 req.open(&amp;#34;POST&amp;#34;, &amp;#34;/info/queryinfos&amp;#34;, true);
 //如果设置数据传送方式为post，则必须设置请求头信息
 req.setRequestHeader(&amp;#34;Content-type&amp;#34;, &amp;#34;application/x-www-form-urlencoded&amp;#34;);
 //设置回调函数，当前操作完成后进行的操作
 req.onreadystatechange = callback;

 //Ajax请求发送的数据不是表单，需要拼接数据，格式和get方式一样
 var reqData = &amp;#34;ip=&amp;#34; + document.getElementById(&amp;#34;ip&amp;#34;).value;
 reqData += &amp;#34;&amp;amp;addr=&amp;#34; + document.getElementById(&amp;#34;addr&amp;#34;).value;
 reqData += &amp;#34;&amp;amp;time=&amp;#34; + document.getElementById(&amp;#34;time&amp;#34;).value;
 reqData += &amp;#34;&amp;amp;times=&amp;#34; + document.getElementById(&amp;#34;times&amp;#34;).value;

 //发送请求
 req.send(reqData);
 }
&lt;/code>&lt;/pre>&lt;p>##2.后台获取数据进行处理，将结果返回给前台&lt;/p>
&lt;ul>
&lt;li>后台进行处理&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
 //设置数据编码方式
 request.setCharacterEncoding(&amp;#34;utf-8&amp;#34;);
 response.setCharacterEncoding(&amp;#34;utf-8&amp;#34;);
 //设置数据类型
 response.setContentType(&amp;#34;text/plain&amp;#34;);
 //设置禁用缓存
 response.setHeader(&amp;#34;Cache-control&amp;#34;,&amp;#34;no-cache&amp;#34;);

 //获取从页面传递的参数
 String ip = request.getParameter(&amp;#34;ip&amp;#34;);
 String addr = request.getParameter(&amp;#34;addr&amp;#34;);
 String time = request.getParameter(&amp;#34;time&amp;#34;);
 String times = request.getParameter(&amp;#34;times&amp;#34;);

 /*
 * 执行操作
 * */

 //拼接返回的json数据
 StringBuilder jsonString = new StringBuilder();
 jsonString.append(&amp;#34;{&amp;#34;);
 jsonString.append(&amp;#34;&amp;#39;size&amp;#39;:2&amp;#34;);

 jsonString.append(&amp;#34;,&amp;#39;datas&amp;#39;:[&amp;#34;);

 jsonString.append(&amp;#34;{&amp;#34;);
 jsonString.append(&amp;#34;&amp;#39;ip&amp;#39;:&amp;#39;10.10.1.1&amp;#39;,&amp;#34;);
 jsonString.append(&amp;#34;&amp;#39;addr&amp;#39;:&amp;#39;辽宁葫芦岛&amp;#39;,&amp;#34;);
 jsonString.append(&amp;#34;&amp;#39;time&amp;#39;:&amp;#39;2016-10-24 16:00:23&amp;#39;,&amp;#34;);
 jsonString.append(&amp;#34;&amp;#39;times&amp;#39;:&amp;#39;10&amp;#39;&amp;#34;);
 jsonString.append(&amp;#34;}&amp;#34;);

 jsonString.append(&amp;#34;,{&amp;#34;);
 jsonString.append(&amp;#34;&amp;#39;ip&amp;#39;:&amp;#39;192.168.110.111&amp;#39;,&amp;#34;);
 jsonString.append(&amp;#34;&amp;#39;addr&amp;#39;:&amp;#39;辽宁沈阳&amp;#39;,&amp;#34;);
 jsonString.append(&amp;#34;&amp;#39;time&amp;#39;:&amp;#39;2016-11-11 11:00:23&amp;#39;,&amp;#34;);
 jsonString.append(&amp;#34;&amp;#39;times&amp;#39;:&amp;#39;14&amp;#39;&amp;#34;);
 jsonString.append(&amp;#34;}&amp;#34;);

 jsonString.append(&amp;#34;]&amp;#34;);

 jsonString.append(&amp;#34;}&amp;#34;);

 //获取输出流
 PrintWriter out = response.getWriter();
 //将数据返回页面
 out.write(jsonString.toString());
 out.flush();
 out.close();
 }
&lt;/code>&lt;/pre>&lt;p>##3.返回处理结果，局部刷新页面&lt;/p></description></item></channel></rss>