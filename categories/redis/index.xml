<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Redis on HelloWood</title><link>https://blog.hellowood.dev/categories/redis/</link><description>Recent content in Redis on HelloWood</description><generator>Hugo</generator><language>cn</language><lastBuildDate>Mon, 16 Sep 2024 03:41:36 +0000</lastBuildDate><atom:link href="https://blog.hellowood.dev/categories/redis/index.xml" rel="self" type="application/rss+xml"/><item><title>Redis基础知识-数据类型</title><link>https://blog.hellowood.dev/posts/redis%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</link><pubDate>Mon, 01 Jan 2018 12:07:03 +0000</pubDate><guid>https://blog.hellowood.dev/posts/redis%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</guid><description>&lt;blockquote>
&lt;p>Redis支持5种数据类型：字符串（string），哈希（hash），列表（list），集合（set），有序集合（sorted set）&lt;/p>
&lt;/blockquote>
&lt;h2 id="字符串string">字符串（string）&lt;/h2>
&lt;blockquote>
&lt;p>string 是 Redis最基本的类型，一个key对应一个value，string可以包含任何数据，比如jpg图片或者序列化的对象，string是Redis最基本的类型，一个键最大能存储512MB&lt;/p>
&lt;/blockquote>
&lt;pre tabindex="0">&lt;code>保存：SET key value
读取：get key
&lt;/code>&lt;/pre>&lt;h2 id="哈希hash">哈希（Hash）&lt;/h2>
&lt;blockquote>
&lt;p>Hash 是一个键名对集合，Hash是一个string类型的field和value的映射表，Hash特备适合存储对象&lt;/p>
&lt;/blockquote>
&lt;pre tabindex="0">&lt;code>保存：hmset key value1 value2 value3
读取：hgetall key
&lt;/code>&lt;/pre>&lt;h2 id="列表list">列表（List）&lt;/h2>
&lt;blockquote>
&lt;p>列表是简单的字符串列表，按照插入顺序排序，可以将元素添加到头部（左边）或尾部（右边）&lt;/p>
&lt;/blockquote>
&lt;pre tabindex="0">&lt;code>保存：
 lpush key value1 value2
 lpush key value3
读取：lrange key 0 10
&lt;/code>&lt;/pre>&lt;h2 id="集合set">集合（Set）&lt;/h2>
&lt;blockquote>
&lt;p>Redis 的set是string类型的无序集合，集合是通过哈希表实现，添加、删除、查找的复杂度都是O(1)&lt;/p>
&lt;/blockquote>
&lt;pre tabindex="0">&lt;code>保存：
 sadd key value1
 sadd key value2
 sadd key value3
读取：smembers key
&lt;/code>&lt;/pre>&lt;h2 id="有序集合sort-set">有序集合（Sort Set）&lt;/h2>
&lt;blockquote>
&lt;p>Redis ZSet和set一样也是string类型元素的集合，且不允许重复的成员，不同的是每个元素都会关联一个double类型的分数，Redis通过这个分数来为集合中的成员进行从小到大的排序，zset的成员是唯一的，但分数（score）可以重复&lt;/p>
&lt;/blockquote>
&lt;pre tabindex="0">&lt;code class="language-:" data-lang=":">保存：
 zadd key score1 value1
 zadd key score2 value2
 zadd key score3 value3
读取：zrangebyscore key 0 10
&lt;/code>&lt;/pre></description></item></channel></rss>